/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package com.dremio.search;

import "google/protobuf/timestamp.proto";

option java_package = "com.dremio.service.search";
option java_outer_classname = "SearchDocumentProto";

// The message represents document stored in search index. What fields
// are indexed or can be filtered by, or how they map to the search index schema
// is implementation dependent. To customize the behavior per field, add annotations
// to the fields.
message SearchDocument {
  // Defines categories for counting search results. The facet key is passed to the
  // search engine to return counts in that category.
  enum Category {
    CATEGORY_UNSPECIFIED = 0;

    CATEGORY_FOLDER = 1;

    CATEGORY_SPACE = 2;

    CATEGORY_TABLE = 3;

    CATEGORY_VIEW = 4;

    CATEGORY_REFLECTION = 5;

    CATEGORY_UDF = 6;

    CATEGORY_SCRIPT = 7;

    CATEGORY_JOB = 8;

    CATEGORY_COMMIT = 9;

    CATEGORY_SOURCE = 10;
  }

  // Optional context fields pertinent to all document types.
  map<string, string> context = 1;

  Category category = 2;

  // Oneof choice defines document type.
  oneof document {
    CatalogObject catalog_object = 3;
  }
}

message CatalogObject {
  // Path components.
  repeated string path = 1;

  // The path prefixes and components for filtering.
  repeated string sub_paths = 2;

  // Versioned catalog branch name.
  optional string branch = 3;

  // There is no meaningful action search components can take on
  // meaning of this field, catalog publisher decides what to put here.
  string type = 4;

  // Description of catalog object in mark-down.
  optional string wiki = 5;

  // Labels (a.k.a. tags) associated with the object.
  repeated string labels = 6;

  // Column names for views and tables.
  repeated string columns = 7;

  // Function SQL definition.
  optional string function_sql = 8;

  // Owner of the object.
  UserOrRole owner = 9;

  // Creation timestamp.
  google.protobuf.Timestamp created = 10;

  // Last modified timestamp.
  google.protobuf.Timestamp last_modified = 11;
}

message UserOrRole {
  enum UserType {
    USER_TYPE_UNSPECIFIED = 0;

    USER_TYPE_USER = 1;

    USER_TYPE_ROLE = 2;
  }

  // Id of the user or role.
  string id = 1;

  // Type of the user.
  UserType type = 2;

  // Space separated full name.
  optional string full_name = 3;

  // Username of the user.
  optional string username = 4;

  // Role name.
  optional string role_name = 5;
}
