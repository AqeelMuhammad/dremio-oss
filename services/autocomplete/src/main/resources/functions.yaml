#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
 -
  description: "!="
  input: "!="
  output:
    name: "!="
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "$HISTOGRAM"
  input: "$HISTOGRAM"
  output:
    name: "$HISTOGRAM"
    signatures:
     - "(NUMERIC) -> BYTES"
     - "(STRING) -> BYTES"
 -
  description: "$HISTOGRAM_FIRST_VALUE"
  input: "$HISTOGRAM_FIRST_VALUE"
  output:
    name: "$HISTOGRAM_FIRST_VALUE"
    signatures:
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "$HISTOGRAM_LAST_VALUE"
  input: "$HISTOGRAM_LAST_VALUE"
  output:
    name: "$HISTOGRAM_LAST_VALUE"
    signatures:
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "$HISTOGRAM_MAX"
  input: "$HISTOGRAM_MAX"
  output:
    name: "$HISTOGRAM_MAX"
    signatures:
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "$HISTOGRAM_MIN"
  input: "$HISTOGRAM_MIN"
  output:
    name: "$HISTOGRAM_MIN"
    signatures:
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "$SUM0"
  input: "$SUM0"
  output:
    name: "$SUM0"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> BIGINT"
     - "(BIGINT) -> BIGINT"
 -
  description: "$SUM0_V2"
  input: "$SUM0_V2"
  output:
    name: "$SUM0_V2"
    signatures:
     - "(BOOLEAN) -> ANY"
     - "(STRING) -> ANY"
     - "(DECIMAL) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "&&"
  input: "&&"
  output:
    name: "&&"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "-"
  input: "-"
  output:
    name: "-"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(BIGINT) -> BIGINT"
 -
  description: "<"
  input: "<"
  output:
    name: "<"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "<="
  input: "<="
  output:
    name: "<="
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "<>"
  input: "<>"
  output:
    name: "<>"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "="
  input: "="
  output:
    name: "="
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "=="
  input: "=="
  output:
    name: "=="
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: ">"
  input: ">"
  output:
    name: ">"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: ">="
  input: ">="
  output:
    name: ">="
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "ABS"
  input: "ABS"
  output:
    description: "Computes the absolute value of a numeric expression."
    name: "ABS"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "ACOS"
  input: "ACOS"
  output:
    description: "Computes the arcccosine (inverse cosine) of a value in radians"
    name: "ACOS"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "ADD"
  input: "ADD"
  output:
    name: "ADD"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(INT, DATE) -> DATE"
     - "(INT, TIME) -> TIME"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, BIGINT) -> BIGINT"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIME) -> TIME"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(DATE, BIGINT) -> TIMESTAMP"
     - "(DATE, TIME) -> TIMESTAMP"
     - "(TIME, INT) -> TIME"
     - "(TIME, BIGINT) -> TIME"
     - "(TIME, DATE) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_DAYS"
  input: "ADD_DAYS"
  output:
    name: "ADD_DAYS"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_HOURS"
  input: "ADD_HOURS"
  output:
    name: "ADD_HOURS"
    signatures:
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_MICROSECONDS"
  input: "ADD_MICROSECONDS"
  output:
    name: "ADD_MICROSECONDS"
    signatures:
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_MINUTES"
  input: "ADD_MINUTES"
  output:
    name: "ADD_MINUTES"
    signatures:
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_MONTHS"
  input: "ADD_MONTHS"
  output:
    name: "ADD_MONTHS"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_QUARTERS"
  input: "ADD_QUARTERS"
  output:
    name: "ADD_QUARTERS"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_SECONDS"
  input: "ADD_SECONDS"
  output:
    name: "ADD_SECONDS"
    signatures:
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_WEEKS"
  input: "ADD_WEEKS"
  output:
    name: "ADD_WEEKS"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "ADD_YEARS"
  input: "ADD_YEARS"
  output:
    name: "ADD_YEARS"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "AES_DECRYPT"
  input: "AES_DECRYPT"
  output:
    name: "AES_DECRYPT"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "AES_ENCRYPT"
  input: "AES_ENCRYPT"
  output:
    name: "AES_ENCRYPT"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "ALTERNATE"
  input: "ALTERNATE"
  output:
    name: "ALTERNATE"
    signatures:
     - "() -> BIGINT"
 -
  description: "ALTERNATE3"
  input: "ALTERNATE3"
  output:
    name: "ALTERNATE3"
    signatures:
     - "() -> BIGINT"
 -
  description: "AND"
  input: "AND"
  output:
    name: "AND"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "APPROX_COUNT_DISTINCT"
  input: "APPROX_COUNT_DISTINCT"
  output:
    description: "Returns the approximate number of rows that contain distinct values in a column. Ignores rows that contain a null value for the column."
    name: "APPROX_COUNT_DISTINCT"
    signatures:
     - "(ANY...) -> BIGINT"
 -
  description: "ASCII"
  input: "ASCII"
  output:
    description: "Returns the ASCII code for the first character of a string. If the string is empty, 0 is returned."
    name: "ASCII"
    signatures:
     - "(CHARACTERS) -> INT"
 -
  description: "ASIN"
  input: "ASIN"
  output:
    description: "Computes the arcsine (inverse sine) of a value in radians"
    name: "ASIN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "ASSERT_BIGINT"
  input: "ASSERT_BIGINT"
  output:
    name: "ASSERT_BIGINT"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_BIT"
  input: "ASSERT_BIT"
  output:
    name: "ASSERT_BIT"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "ASSERT_DATE"
  input: "ASSERT_DATE"
  output:
    name: "ASSERT_DATE"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_DECIMAL"
  input: "ASSERT_DECIMAL"
  output:
    name: "ASSERT_DECIMAL"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_FIXEDSIZEBINARY"
  input: "ASSERT_FIXEDSIZEBINARY"
  output:
    name: "ASSERT_FIXEDSIZEBINARY"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_FLOAT4"
  input: "ASSERT_FLOAT4"
  output:
    name: "ASSERT_FLOAT4"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_FLOAT8"
  input: "ASSERT_FLOAT8"
  output:
    name: "ASSERT_FLOAT8"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_INT"
  input: "ASSERT_INT"
  output:
    name: "ASSERT_INT"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_INTERVALDAY"
  input: "ASSERT_INTERVALDAY"
  output:
    name: "ASSERT_INTERVALDAY"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_INTERVALYEAR"
  input: "ASSERT_INTERVALYEAR"
  output:
    name: "ASSERT_INTERVALYEAR"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_LIST"
  input: "ASSERT_LIST"
  output:
    name: "ASSERT_LIST"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_STRUCT"
  input: "ASSERT_STRUCT"
  output:
    name: "ASSERT_STRUCT"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_TIME"
  input: "ASSERT_TIME"
  output:
    name: "ASSERT_TIME"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_TIMESTAMP"
  input: "ASSERT_TIMESTAMP"
  output:
    name: "ASSERT_TIMESTAMP"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_VARBINARY"
  input: "ASSERT_VARBINARY"
  output:
    name: "ASSERT_VARBINARY"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ASSERT_VARCHAR"
  input: "ASSERT_VARCHAR"
  output:
    name: "ASSERT_VARCHAR"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "ATAN"
  input: "ATAN"
  output:
    description: "Computes the Arctangent (inverse Tangent) of a value"
    name: "ATAN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "ATAN2"
  input: "ATAN2"
  output:
    name: "ATAN2"
    signatures:
     - "(NUMERIC, NUMERIC) -> DOUBLE"
 -
  description: "AVG"
  input: "AVG"
  output:
    description: "Computes the average of a set of values."
    name: "AVG"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "BASE64"
  input: "BASE64"
  output:
    name: "BASE64"
    signatures:
     - "(BYTES) -> CHARACTERS"
 -
  description: "BIN"
  input: "BIN"
  output:
    name: "BIN"
    signatures:
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "BINARY_STRING"
  input: "BINARY_STRING"
  output:
    description: "Converts the input expression to a binary value."
    name: "BINARY_STRING"
    signatures:
     - "(CHARACTERS) -> BYTES"
 -
  description: "BITWISE_AND"
  input: "BITWISE_AND"
  output:
    name: "BITWISE_AND"
    signatures:
     - "(NUMERIC, INT) -> INT"
     - "(NUMERIC, BIGINT) -> BIGINT"
 -
  description: "BITWISE_NOT"
  input: "BITWISE_NOT"
  output:
    name: "BITWISE_NOT"
    signatures:
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "BITWISE_OR"
  input: "BITWISE_OR"
  output:
    name: "BITWISE_OR"
    signatures:
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "BITWISE_XOR"
  input: "BITWISE_XOR"
  output:
    name: "BITWISE_XOR"
    signatures:
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "BIT_AND"
  input: "BIT_AND"
  output:
    name: "BIT_AND"
    signatures:
     - "(BOOLEAN) -> INT"
     - "(STRING) -> INT"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "BIT_LENGTH"
  input: "BIT_LENGTH"
  output:
    description: "Gets length of bits of the input expression"
    name: "BIT_LENGTH"
    signatures:
     - "(STRING) -> INT"
 -
  description: "BIT_OR"
  input: "BIT_OR"
  output:
    name: "BIT_OR"
    signatures:
     - "(BOOLEAN) -> INT"
     - "(STRING) -> INT"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "BOOLEANAND"
  input: "BOOLEANAND"
  output:
    name: "BOOLEANAND"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "BOOLEANOR"
  input: "BOOLEANOR"
  output:
    name: "BOOLEANOR"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "BOOL_AND"
  input: "BOOL_AND"
  output:
    description: "Computes the boolean AND of two boolean expressions. Returns TRUE if both expressions evaluate to TRUE. Returns FALSE if one or both expression(s) evaluate(s) to FALSE."
    name: "BOOL_AND"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(STRING) -> BOOLEAN"
 -
  description: "BOOL_OR"
  input: "BOOL_OR"
  output:
    description: "Computes the boolean OR of two boolean expressions. Returns TRUE if one or both expressions evaluate to TRUE. Returns FALSE if both expressions evaluate to FALSE."
    name: "BOOL_OR"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(STRING) -> BOOLEAN"
 -
  description: "BROUND"
  input: "BROUND"
  output:
    name: "BROUND"
    signatures:
     - "(DOUBLE) -> DOUBLE"
 -
  description: "BTRIM"
  input: "BTRIM"
  output:
    description: "Trims leading and trailing characters from a string."
    name: "BTRIM"
    signatures:
     - "(CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "BYTESUBSTRING"
  input: "BYTESUBSTRING"
  output:
    name: "BYTESUBSTRING"
    signatures:
     - "(BYTES, INT, INT) -> BYTES"
     - "(BYTES, BIGINT, BIGINT) -> BYTES"
 -
  description: "BYTE_SUBSTR"
  input: "BYTE_SUBSTR"
  output:
    name: "BYTE_SUBSTR"
    signatures:
     - "(BYTES, INT, INT) -> BYTES"
     - "(BYTES, BIGINT, BIGINT) -> BYTES"
 -
  description: "CARDINALITY"
  input: "CARDINALITY"
  output:
    name: "CARDINALITY"
    signatures: []
 -
  description: "CAST"
  input: "CAST"
  output:
    description: "Converts a value of one data type to another data type. This function behaves similarly to the TO_<data_type> (i.e. TO_TIMESTAMP) functions."
    name: "CAST"
    signatures:
     - "(ANY, CHARACTERS) -> CHARACTERS"
     - "(ANY, TIMESTAMP) -> TIMESTAMP"
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(BOOLEAN, FLOAT) -> FLOAT"
     - "(BOOLEAN, DECIMAL) -> DECIMAL"
     - "(BOOLEAN, DOUBLE) -> DOUBLE"
     - "(BOOLEAN, INT) -> INT"
     - "(BOOLEAN, BIGINT) -> BIGINT"
     - "(NUMERIC, BOOLEAN) -> BOOLEAN"
     - "(NUMERIC, FLOAT) -> FLOAT"
     - "(NUMERIC, DECIMAL) -> DECIMAL"
     - "(NUMERIC, DOUBLE) -> DOUBLE"
     - "(NUMERIC, INT) -> INT"
     - "(NUMERIC, BIGINT) -> BIGINT"
     - "(STRING, BYTES) -> BYTES"
     - "(STRING, DATE) -> DATE"
     - "(STRING, TIME) -> TIME"
     - "(CHARACTERS, BOOLEAN) -> BOOLEAN"
     - "(CHARACTERS, FLOAT) -> FLOAT"
     - "(CHARACTERS, DECIMAL) -> DECIMAL"
     - "(CHARACTERS, DOUBLE) -> DOUBLE"
     - "(CHARACTERS, INT) -> INT"
     - "(CHARACTERS, BIGINT) -> BIGINT"
     - "(DATE, DATE) -> DATE"
     - "(TIME, TIME) -> TIME"
     - "(TIMESTAMP, BOOLEAN) -> BOOLEAN"
     - "(TIMESTAMP, FLOAT) -> FLOAT"
     - "(TIMESTAMP, DECIMAL) -> DECIMAL"
     - "(TIMESTAMP, DOUBLE) -> DOUBLE"
     - "(TIMESTAMP, INT) -> INT"
     - "(TIMESTAMP, BIGINT) -> BIGINT"
     - "(TIMESTAMP, DATE) -> DATE"
     - "(TIMESTAMP, TIME) -> TIME"
 -
  description: "CASTBIGINT"
  input: "CASTBIGINT"
  output:
    name: "CASTBIGINT"
    signatures:
     - "(STRING) -> BIGINT"
     - "(FLOAT) -> BIGINT"
     - "(DOUBLE) -> BIGINT"
     - "(INT) -> BIGINT"
 -
  description: "CASTBIT"
  input: "CASTBIT"
  output:
    name: "CASTBIT"
    signatures:
     - "(CHARACTERS) -> BOOLEAN"
 -
  description: "CASTBOOLEAN"
  input: "CASTBOOLEAN"
  output:
    name: "CASTBOOLEAN"
    signatures:
     - "(CHARACTERS) -> BOOLEAN"
 -
  description: "CASTDATE"
  input: "CASTDATE"
  output:
    name: "CASTDATE"
    signatures:
     - "(STRING) -> DATE"
     - "(BIGINT) -> DATE"
     - "(TIMESTAMP) -> DATE"
 -
  description: "CASTDECIMAL"
  input: "CASTDECIMAL"
  output:
    name: "CASTDECIMAL"
    signatures:
     - "(NUMERIC, BIGINT, BIGINT) -> DECIMAL"
     - "(CHARACTERS, BIGINT, BIGINT) -> DECIMAL"
 -
  description: "CASTDECIMALNULLONOVERFLOW"
  input: "CASTDECIMALNULLONOVERFLOW"
  output:
    name: "CASTDECIMALNULLONOVERFLOW"
    signatures:
     - "(CHARACTERS, BIGINT, BIGINT) -> DECIMAL"
     - "(DECIMAL, BIGINT, BIGINT) -> DECIMAL"
 -
  description: "CASTFLOAT4"
  input: "CASTFLOAT4"
  output:
    name: "CASTFLOAT4"
    signatures:
     - "(STRING) -> FLOAT"
     - "(DOUBLE) -> FLOAT"
     - "(INT) -> FLOAT"
     - "(BIGINT) -> FLOAT"
 -
  description: "CASTFLOAT8"
  input: "CASTFLOAT8"
  output:
    name: "CASTFLOAT8"
    signatures:
     - "(STRING) -> DOUBLE"
     - "(FLOAT) -> DOUBLE"
     - "(DECIMAL) -> DOUBLE"
     - "(INT) -> DOUBLE"
     - "(BIGINT) -> DOUBLE"
 -
  description: "CASTINT"
  input: "CASTINT"
  output:
    name: "CASTINT"
    signatures:
     - "(STRING) -> INT"
     - "(FLOAT) -> INT"
     - "(DOUBLE) -> INT"
     - "(BIGINT) -> INT"
 -
  description: "CASTINTERVALDAY"
  input: "CASTINTERVALDAY"
  output:
    name: "CASTINTERVALDAY"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "CASTINTERVALYEAR"
  input: "CASTINTERVALYEAR"
  output:
    name: "CASTINTERVALYEAR"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "CASTNULLABLEBIGINT"
  input: "CASTNULLABLEBIGINT"
  output:
    name: "CASTNULLABLEBIGINT"
    signatures:
     - "(STRING) -> BIGINT"
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "CASTNULLABLEINT"
  input: "CASTNULLABLEINT"
  output:
    name: "CASTNULLABLEINT"
    signatures:
     - "(STRING) -> INT"
     - "(DATE) -> INT"
     - "(TIMESTAMP) -> INT"
 -
  description: "CASTNULLABLEINTERVALDAY"
  input: "CASTNULLABLEINTERVALDAY"
  output:
    name: "CASTNULLABLEINTERVALDAY"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "CASTNULLABLEINTERVALYEAR"
  input: "CASTNULLABLEINTERVALYEAR"
  output:
    name: "CASTNULLABLEINTERVALYEAR"
    signatures:
     - "(BYTES) -> ANY"
 -
  description: "CASTTIME"
  input: "CASTTIME"
  output:
    name: "CASTTIME"
    signatures:
     - "(STRING) -> TIME"
     - "(INT) -> TIME"
     - "(TIMESTAMP) -> TIME"
 -
  description: "CASTTIMESTAMP"
  input: "CASTTIMESTAMP"
  output:
    name: "CASTTIMESTAMP"
    signatures:
     - "(STRING) -> TIMESTAMP"
     - "(BIGINT) -> TIMESTAMP"
     - "(DATE) -> TIMESTAMP"
     - "(TIME) -> TIMESTAMP"
 -
  description: "CASTTOUNION"
  input: "CASTTOUNION"
  output:
    name: "CASTTOUNION"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CASTUNION"
  input: "CASTUNION"
  output:
    name: "CASTUNION"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CASTVARBINARY"
  input: "CASTVARBINARY"
  output:
    name: "CASTVARBINARY"
    signatures:
     - "(STRING, BIGINT) -> BYTES"
     - "(FLOAT, BIGINT) -> BYTES"
     - "(DOUBLE, BIGINT) -> BYTES"
     - "(INT, BIGINT) -> BYTES"
     - "(BIGINT, BIGINT) -> BYTES"
 -
  description: "CASTVARCHAR"
  input: "CASTVARCHAR"
  output:
    name: "CASTVARCHAR"
    signatures:
     - "(ANY, BIGINT) -> CHARACTERS"
 -
  description: "CBRT"
  input: "CBRT"
  output:
    description: "Computes the cube root of a numeric expression"
    name: "CBRT"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> DOUBLE"
     - "(BIGINT) -> DOUBLE"
 -
  description: "CEIL"
  input: "CEIL"
  output:
    name: "CEIL"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE, ANY) -> DATE"
     - "(TIME, ANY) -> TIME"
     - "(TIMESTAMP, ANY) -> TIMESTAMP"
 -
  description: "CHARACTER_LENGTH"
  input: "CHARACTER_LENGTH"
  output:
    description: "Returns the number of characters in a character string"
    name: "CHARACTER_LENGTH"
    signatures:
     - "(STRING[The String to take the length of.]) -> NUMERIC"
 -
  description: "CHARSUBSTRING"
  input: "CHARSUBSTRING"
  output:
    name: "CHARSUBSTRING"
    signatures:
     - "(CHARACTERS, BIGINT, BIGINT) -> CHARACTERS"
 -
  description: "CHAR_LENGTH"
  input: "CHAR_LENGTH"
  output:
    description: "Returns the character length of the input string"
    name: "CHAR_LENGTH"
    signatures:
     - "(CHARACTERS) -> INT"
 -
  description: "CHR"
  input: "CHR"
  output:
    description: "Converts a Unicode code point into the character that matches the input Unicode character. If an invalid code point is specified, an empty string is returned."
    name: "CHR"
    signatures:
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "CLASSIFIER"
  input: "CLASSIFIER"
  output:
    name: "CLASSIFIER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "COALESCE"
  input: "COALESCE"
  output:
    description: "Evaluates the arguments in order and returns the value of the first expression that does not contain `NULL`."
    name: "COALESCE"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
 -
  description: "COLLECT"
  input: "COLLECT"
  output:
    name: "COLLECT"
    signatures: []
 -
  description: "COMPARETYPE"
  input: "COMPARETYPE"
  output:
    name: "COMPARETYPE"
    signatures:
     - "(ANY, ANY) -> INT"
 -
  description: "COMPARE_TO_NULLS_HIGH"
  input: "COMPARE_TO_NULLS_HIGH"
  output:
    name: "COMPARE_TO_NULLS_HIGH"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> INT"
     - "(STRING, STRING) -> INT"
     - "(FLOAT, FLOAT) -> INT"
     - "(DECIMAL, DECIMAL) -> INT"
     - "(DOUBLE, DOUBLE) -> INT"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> INT"
     - "(DATE, DATE) -> INT"
     - "(TIME, TIME) -> INT"
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "COMPARE_TO_NULLS_LOW"
  input: "COMPARE_TO_NULLS_LOW"
  output:
    name: "COMPARE_TO_NULLS_LOW"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> INT"
     - "(STRING, STRING) -> INT"
     - "(FLOAT, FLOAT) -> INT"
     - "(DECIMAL, DECIMAL) -> INT"
     - "(DOUBLE, DOUBLE) -> INT"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> INT"
     - "(DATE, DATE) -> INT"
     - "(TIME, TIME) -> INT"
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "CONCAT"
  input: "CONCAT"
  output:
    description: "Concatenates two or more strings."
    name: "CONCAT"
    signatures:
     - "(STRING[First String.], STRING[Second String.], STRING[Third or More Strings.]) -> STRING"
 -
  description: "CONCATOPERATOR"
  input: "CONCATOPERATOR"
  output:
    name: "CONCATOPERATOR"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "CONCAT_WS"
  input: "CONCAT_WS"
  output:
    description: "Concatenate with separator. Returns a string resulting from the joining of two or more string values in an end-to-end manner. Uses the first argument as the separator between each string."
    name: "CONCAT_WS"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "CONTAINS"
  input: "CONTAINS"
  output:
    description: "Returns TRUE if the first expression contains the second expression."
    name: "CONTAINS"
    signatures:
     - "(ANY, STRING) -> BOOLEAN"
     - "(BYTES, BOOLEAN) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BOOLEAN"
     - "(BYTES, DATEANDTIME) -> BOOLEAN"
 -
  description: "CONVERT"
  input: "CONVERT"
  output:
    name: "CONVERT"
    signatures: []
 -
  description: "CONVERT_FROM"
  input: "CONVERT_FROM"
  output:
    name: "CONVERT_FROM"
    signatures:
     - "() -> BYTES"
 -
  description: "CONVERT_FROMBIGINT"
  input: "CONVERT_FROMBIGINT"
  output:
    name: "CONVERT_FROMBIGINT"
    signatures:
     - "(BYTES) -> BIGINT"
 -
  description: "CONVERT_FROMBIGINT_BE"
  input: "CONVERT_FROMBIGINT_BE"
  output:
    name: "CONVERT_FROMBIGINT_BE"
    signatures:
     - "(BYTES) -> BIGINT"
 -
  description: "CONVERT_FROMBIGINT_HADOOPV"
  input: "CONVERT_FROMBIGINT_HADOOPV"
  output:
    name: "CONVERT_FROMBIGINT_HADOOPV"
    signatures:
     - "(BYTES) -> BIGINT"
 -
  description: "CONVERT_FROMBOOLEAN_BYTE"
  input: "CONVERT_FROMBOOLEAN_BYTE"
  output:
    name: "CONVERT_FROMBOOLEAN_BYTE"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "CONVERT_FROMDATE_EPOCH"
  input: "CONVERT_FROMDATE_EPOCH"
  output:
    name: "CONVERT_FROMDATE_EPOCH"
    signatures:
     - "(BYTES) -> DATE"
 -
  description: "CONVERT_FROMDATE_EPOCH_BE"
  input: "CONVERT_FROMDATE_EPOCH_BE"
  output:
    name: "CONVERT_FROMDATE_EPOCH_BE"
    signatures:
     - "(BYTES) -> DATE"
 -
  description: "CONVERT_FROMDOUBLE"
  input: "CONVERT_FROMDOUBLE"
  output:
    name: "CONVERT_FROMDOUBLE"
    signatures:
     - "(BYTES) -> DOUBLE"
 -
  description: "CONVERT_FROMDOUBLE_BE"
  input: "CONVERT_FROMDOUBLE_BE"
  output:
    name: "CONVERT_FROMDOUBLE_BE"
    signatures:
     - "(BYTES) -> DOUBLE"
 -
  description: "CONVERT_FROMFLOAT"
  input: "CONVERT_FROMFLOAT"
  output:
    name: "CONVERT_FROMFLOAT"
    signatures:
     - "(BYTES) -> FLOAT"
 -
  description: "CONVERT_FROMFLOAT_BE"
  input: "CONVERT_FROMFLOAT_BE"
  output:
    name: "CONVERT_FROMFLOAT_BE"
    signatures:
     - "(BYTES) -> FLOAT"
 -
  description: "CONVERT_FROMINT"
  input: "CONVERT_FROMINT"
  output:
    name: "CONVERT_FROMINT"
    signatures:
     - "(BYTES) -> INT"
 -
  description: "CONVERT_FROMINT_BE"
  input: "CONVERT_FROMINT_BE"
  output:
    name: "CONVERT_FROMINT_BE"
    signatures:
     - "(BYTES) -> INT"
 -
  description: "CONVERT_FROMINT_HADOOPV"
  input: "CONVERT_FROMINT_HADOOPV"
  output:
    name: "CONVERT_FROMINT_HADOOPV"
    signatures:
     - "(BYTES) -> INT"
 -
  description: "CONVERT_FROMJSON"
  input: "CONVERT_FROMJSON"
  output:
    name: "CONVERT_FROMJSON"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CONVERT_FROMTIMESTAMP_EPOCH"
  input: "CONVERT_FROMTIMESTAMP_EPOCH"
  output:
    name: "CONVERT_FROMTIMESTAMP_EPOCH"
    signatures:
     - "(BYTES) -> TIMESTAMP"
 -
  description: "CONVERT_FROMTIMESTAMP_EPOCH_BE"
  input: "CONVERT_FROMTIMESTAMP_EPOCH_BE"
  output:
    name: "CONVERT_FROMTIMESTAMP_EPOCH_BE"
    signatures:
     - "(BYTES) -> TIMESTAMP"
 -
  description: "CONVERT_FROMTIMESTAMP_IMPALA"
  input: "CONVERT_FROMTIMESTAMP_IMPALA"
  output:
    name: "CONVERT_FROMTIMESTAMP_IMPALA"
    signatures:
     - "(BYTES) -> TIMESTAMP"
 -
  description: "CONVERT_FROMTIMESTAMP_IMPALA_LOCALTIMEZONE"
  input: "CONVERT_FROMTIMESTAMP_IMPALA_LOCALTIMEZONE"
  output:
    name: "CONVERT_FROMTIMESTAMP_IMPALA_LOCALTIMEZONE"
    signatures:
     - "(BYTES) -> TIMESTAMP"
 -
  description: "CONVERT_FROMTIME_EPOCH"
  input: "CONVERT_FROMTIME_EPOCH"
  output:
    name: "CONVERT_FROMTIME_EPOCH"
    signatures:
     - "(BYTES) -> TIME"
 -
  description: "CONVERT_FROMTIME_EPOCH_BE"
  input: "CONVERT_FROMTIME_EPOCH_BE"
  output:
    name: "CONVERT_FROMTIME_EPOCH_BE"
    signatures:
     - "(BYTES) -> TIME"
 -
  description: "CONVERT_FROMUTF8"
  input: "CONVERT_FROMUTF8"
  output:
    name: "CONVERT_FROMUTF8"
    signatures:
     - "(BYTES) -> CHARACTERS"
 -
  description: "CONVERT_REPLACEUTF8"
  input: "CONVERT_REPLACEUTF8"
  output:
    name: "CONVERT_REPLACEUTF8"
    signatures:
     - "(BYTES, CHARACTERS) -> CHARACTERS"
 -
  description: "CONVERT_TIMEZONE"
  input: "CONVERT_TIMEZONE"
  output:
    description: "Convert timestamp to the specified timezone"
    name: "CONVERT_TIMEZONE"
    signatures:
     - "(CHARACTERS, TIMESTAMP) -> TIMESTAMP"
     - "(CHARACTERS, CHARACTERS, TIMESTAMP) -> TIMESTAMP"
 -
  description: "CONVERT_TO"
  input: "CONVERT_TO"
  output:
    name: "CONVERT_TO"
    signatures:
     - "() -> BYTES"
 -
  description: "CONVERT_TOBIGINT"
  input: "CONVERT_TOBIGINT"
  output:
    name: "CONVERT_TOBIGINT"
    signatures:
     - "(BIGINT) -> BYTES"
 -
  description: "CONVERT_TOBIGINT_BE"
  input: "CONVERT_TOBIGINT_BE"
  output:
    name: "CONVERT_TOBIGINT_BE"
    signatures:
     - "(BIGINT) -> BYTES"
 -
  description: "CONVERT_TOBIGINT_HADOOPV"
  input: "CONVERT_TOBIGINT_HADOOPV"
  output:
    name: "CONVERT_TOBIGINT_HADOOPV"
    signatures:
     - "(BIGINT) -> BYTES"
 -
  description: "CONVERT_TOBOOLEAN_BYTE"
  input: "CONVERT_TOBOOLEAN_BYTE"
  output:
    name: "CONVERT_TOBOOLEAN_BYTE"
    signatures:
     - "(BOOLEAN) -> BYTES"
 -
  description: "CONVERT_TODATE_EPOCH"
  input: "CONVERT_TODATE_EPOCH"
  output:
    name: "CONVERT_TODATE_EPOCH"
    signatures:
     - "(DATE) -> BYTES"
 -
  description: "CONVERT_TODATE_EPOCH_BE"
  input: "CONVERT_TODATE_EPOCH_BE"
  output:
    name: "CONVERT_TODATE_EPOCH_BE"
    signatures:
     - "(DATE) -> BYTES"
 -
  description: "CONVERT_TODOUBLE"
  input: "CONVERT_TODOUBLE"
  output:
    name: "CONVERT_TODOUBLE"
    signatures:
     - "(DOUBLE) -> BYTES"
 -
  description: "CONVERT_TODOUBLE_BE"
  input: "CONVERT_TODOUBLE_BE"
  output:
    name: "CONVERT_TODOUBLE_BE"
    signatures:
     - "(DOUBLE) -> BYTES"
 -
  description: "CONVERT_TOEXTENDEDJSON"
  input: "CONVERT_TOEXTENDEDJSON"
  output:
    name: "CONVERT_TOEXTENDEDJSON"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CONVERT_TOFLOAT"
  input: "CONVERT_TOFLOAT"
  output:
    name: "CONVERT_TOFLOAT"
    signatures:
     - "(FLOAT) -> BYTES"
 -
  description: "CONVERT_TOFLOAT_BE"
  input: "CONVERT_TOFLOAT_BE"
  output:
    name: "CONVERT_TOFLOAT_BE"
    signatures:
     - "(FLOAT) -> BYTES"
 -
  description: "CONVERT_TOINT"
  input: "CONVERT_TOINT"
  output:
    name: "CONVERT_TOINT"
    signatures:
     - "(INT) -> BYTES"
 -
  description: "CONVERT_TOINT_BE"
  input: "CONVERT_TOINT_BE"
  output:
    name: "CONVERT_TOINT_BE"
    signatures:
     - "(INT) -> BYTES"
 -
  description: "CONVERT_TOINT_HADOOPV"
  input: "CONVERT_TOINT_HADOOPV"
  output:
    name: "CONVERT_TOINT_HADOOPV"
    signatures:
     - "(INT) -> BYTES"
 -
  description: "CONVERT_TOJSON"
  input: "CONVERT_TOJSON"
  output:
    name: "CONVERT_TOJSON"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CONVERT_TOSIMPLEJSON"
  input: "CONVERT_TOSIMPLEJSON"
  output:
    name: "CONVERT_TOSIMPLEJSON"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "CONVERT_TOTIMESTAMP_EPOCH"
  input: "CONVERT_TOTIMESTAMP_EPOCH"
  output:
    name: "CONVERT_TOTIMESTAMP_EPOCH"
    signatures:
     - "(TIMESTAMP) -> BYTES"
 -
  description: "CONVERT_TOTIMESTAMP_EPOCH_BE"
  input: "CONVERT_TOTIMESTAMP_EPOCH_BE"
  output:
    name: "CONVERT_TOTIMESTAMP_EPOCH_BE"
    signatures:
     - "(TIMESTAMP) -> BYTES"
 -
  description: "CONVERT_TOTIME_EPOCH"
  input: "CONVERT_TOTIME_EPOCH"
  output:
    name: "CONVERT_TOTIME_EPOCH"
    signatures:
     - "(TIME) -> BYTES"
 -
  description: "CONVERT_TOTIME_EPOCH_BE"
  input: "CONVERT_TOTIME_EPOCH_BE"
  output:
    name: "CONVERT_TOTIME_EPOCH_BE"
    signatures:
     - "(TIME) -> BYTES"
 -
  description: "CONVERT_TOUTF8"
  input: "CONVERT_TOUTF8"
  output:
    name: "CONVERT_TOUTF8"
    signatures:
     - "(CHARACTERS) -> BYTES"
 -
  description: "CORR"
  input: "CORR"
  output:
    description: "Calculates the covariance of the values expression1 and expression2. The function name must be enclosed in double quotes (\"CORR\")."
    name: "CORR"
    signatures:
     - "(ANY, BYTES) -> ANY"
     - "(BOOLEAN, BOOLEAN) -> DOUBLE"
     - "(BOOLEAN, NUMERIC) -> DOUBLE"
     - "(BOOLEAN, STRING) -> DOUBLE"
     - "(NUMERIC, BOOLEAN) -> DOUBLE"
     - "(NUMERIC, NUMERIC) -> DOUBLE"
     - "(NUMERIC, CHARACTERS) -> DOUBLE"
     - "(STRING, BOOLEAN) -> DOUBLE"
     - "(STRING, STRING) -> DOUBLE"
     - "(STRING, INT) -> DOUBLE"
     - "(STRING, BIGINT) -> DOUBLE"
     - "(BYTES, NUMERIC) -> ANY"
     - "(BYTES, DATEANDTIME) -> ANY"
     - "(CHARACTERS, FLOAT) -> DOUBLE"
     - "(CHARACTERS, DECIMAL) -> DOUBLE"
     - "(CHARACTERS, DOUBLE) -> DOUBLE"
     - "(INT, BYTES) -> DOUBLE"
     - "(BIGINT, BYTES) -> DOUBLE"
 -
  description: "CORRELATION"
  input: "CORRELATION"
  output:
    name: "CORRELATION"
    signatures:
     - "(ANY, BYTES) -> ANY"
     - "(BOOLEAN, BOOLEAN) -> DOUBLE"
     - "(BOOLEAN, NUMERIC) -> DOUBLE"
     - "(BOOLEAN, STRING) -> DOUBLE"
     - "(NUMERIC, BOOLEAN) -> DOUBLE"
     - "(NUMERIC, NUMERIC) -> DOUBLE"
     - "(NUMERIC, CHARACTERS) -> DOUBLE"
     - "(STRING, BOOLEAN) -> DOUBLE"
     - "(STRING, STRING) -> DOUBLE"
     - "(STRING, INT) -> DOUBLE"
     - "(STRING, BIGINT) -> DOUBLE"
     - "(BYTES, NUMERIC) -> ANY"
     - "(BYTES, DATEANDTIME) -> ANY"
     - "(CHARACTERS, FLOAT) -> DOUBLE"
     - "(CHARACTERS, DECIMAL) -> DOUBLE"
     - "(CHARACTERS, DOUBLE) -> DOUBLE"
     - "(INT, BYTES) -> DOUBLE"
     - "(BIGINT, BYTES) -> DOUBLE"
 -
  description: "COS"
  input: "COS"
  output:
    description: "Computes the cosine of a value in radians"
    name: "COS"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "COSH"
  input: "COSH"
  output:
    description: "Computes the hyperbolic cosine of a value in radians."
    name: "COSH"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> DOUBLE"
     - "(BIGINT) -> DOUBLE"
 -
  description: "COT"
  input: "COT"
  output:
    description: "Computes the cotangent of a value in radians."
    name: "COT"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "COUNT"
  input: "COUNT"
  output:
    description: "Returns the total number of records for the specified expression."
    name: "COUNT"
    signatures:
     - "(ANY...) -> BIGINT"
 -
  description: "COVARIANCE"
  input: "COVARIANCE"
  output:
    name: "COVARIANCE"
    signatures:
     - "(ANY, BYTES) -> ANY"
     - "(BOOLEAN, BOOLEAN) -> DOUBLE"
     - "(BOOLEAN, NUMERIC) -> DOUBLE"
     - "(BOOLEAN, STRING) -> DOUBLE"
     - "(NUMERIC, BOOLEAN) -> DOUBLE"
     - "(NUMERIC, NUMERIC) -> DOUBLE"
     - "(NUMERIC, CHARACTERS) -> DOUBLE"
     - "(STRING, BOOLEAN) -> DOUBLE"
     - "(STRING, STRING) -> DOUBLE"
     - "(STRING, INT) -> DOUBLE"
     - "(STRING, BIGINT) -> DOUBLE"
     - "(BYTES, NUMERIC) -> ANY"
     - "(BYTES, DATEANDTIME) -> ANY"
     - "(CHARACTERS, FLOAT) -> DOUBLE"
     - "(CHARACTERS, DECIMAL) -> DOUBLE"
     - "(CHARACTERS, DOUBLE) -> DOUBLE"
     - "(INT, BYTES) -> DOUBLE"
     - "(BIGINT, BYTES) -> DOUBLE"
 -
  description: "COVAR_POP"
  input: "COVAR_POP"
  output:
    name: "COVAR_POP"
    signatures:
     - "(NUMERIC, NUMERIC) -> DOUBLE"
 -
  description: "COVAR_SAMP"
  input: "COVAR_SAMP"
  output:
    name: "COVAR_SAMP"
    signatures:
     - "(NUMERIC, NUMERIC) -> DOUBLE"
 -
  description: "CRC32"
  input: "CRC32"
  output:
    name: "CRC32"
    signatures:
     - "(STRING) -> BIGINT"
 -
  description: "CUME_DIST"
  input: "CUME_DIST"
  output:
    name: "CUME_DIST"
    signatures:
     - "() -> DOUBLE"
 -
  description: "CURRENT_CATALOG"
  input: "CURRENT_CATALOG"
  output:
    name: "CURRENT_CATALOG"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "CURRENT_DATE"
  input: "CURRENT_DATE"
  output:
    description: "Returns the current date of the system."
    name: "CURRENT_DATE"
    signatures:
     - "() -> DATE"
 -
  description: "CURRENT_DATE_UTC"
  input: "CURRENT_DATE_UTC"
  output:
    description: "Returns the current date of the system based on the UTC timezone."
    name: "CURRENT_DATE_UTC"
    signatures:
     - "() -> DATE"
 -
  description: "CURRENT_PATH"
  input: "CURRENT_PATH"
  output:
    name: "CURRENT_PATH"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "CURRENT_ROLE"
  input: "CURRENT_ROLE"
  output:
    name: "CURRENT_ROLE"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "CURRENT_SCHEMA"
  input: "CURRENT_SCHEMA"
  output:
    description: "Returns the path/schema in use by the current session."
    name: "CURRENT_SCHEMA"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "CURRENT_TIME"
  input: "CURRENT_TIME"
  output:
    description: "Returns the current time for the system."
    name: "CURRENT_TIME"
    signatures:
     - "() -> TIME"
 -
  description: "CURRENT_TIMESTAMP"
  input: "CURRENT_TIMESTAMP"
  output:
    description: "Returns the current timestamp for the system."
    name: "CURRENT_TIMESTAMP"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "CURRENT_TIMESTAMP_UTC"
  input: "CURRENT_TIMESTAMP_UTC"
  output:
    name: "CURRENT_TIMESTAMP_UTC"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "CURRENT_TIME_UTC"
  input: "CURRENT_TIME_UTC"
  output:
    name: "CURRENT_TIME_UTC"
    signatures:
     - "() -> TIME"
 -
  description: "CURRENT_USER"
  input: "CURRENT_USER"
  output:
    name: "CURRENT_USER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "DATEDIFF"
  input: "DATEDIFF"
  output:
    name: "DATEDIFF"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "DATETYPE"
  input: "DATETYPE"
  output:
    name: "DATETYPE"
    signatures:
     - "(STRING) -> DATE"
     - "(BIGINT, BIGINT, BIGINT) -> DATE"
 -
  description: "DATE_ADD"
  input: "DATE_ADD"
  output:
    description: "Add (or subract) days from a date/timestamp value or column"
    name: "DATE_ADD"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIME) -> TIME"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIME) -> TIME"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(DATE, TIME) -> TIMESTAMP"
     - "(TIME, INT) -> TIME"
     - "(TIME, BIGINT) -> TIME"
     - "(TIME, DATE) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "DATE_DIFF"
  input: "DATE_DIFF"
  output:
    name: "DATE_DIFF"
    signatures:
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIME, INT) -> TIME"
     - "(TIME, BIGINT) -> TIME"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "DATE_PART"
  input: "DATE_PART"
  output:
    description: "Return subfields such as year or hour from date or timestamp values"
    name: "DATE_PART"
    signatures: []
 -
  description: "DATE_SUB"
  input: "DATE_SUB"
  output:
    description: "Subtracts the number of days from the specified date or timestamp."
    name: "DATE_SUB"
    signatures:
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIME, INT) -> TIME"
     - "(TIME, BIGINT) -> TIME"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "DATE_TRUNC"
  input: "DATE_TRUNC"
  output:
    description: "Truncates the date or timestamp to the indicated precision."
    name: "DATE_TRUNC"
    signatures:
     - "(CHARACTERS, DATE) -> DATE"
     - "(CHARACTERS, TIME) -> TIME"
     - "(CHARACTERS, TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_CENTURY"
  input: "DATE_TRUNC_CENTURY"
  output:
    name: "DATE_TRUNC_CENTURY"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_DAY"
  input: "DATE_TRUNC_DAY"
  output:
    name: "DATE_TRUNC_DAY"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_DECADE"
  input: "DATE_TRUNC_DECADE"
  output:
    name: "DATE_TRUNC_DECADE"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_HOUR"
  input: "DATE_TRUNC_HOUR"
  output:
    name: "DATE_TRUNC_HOUR"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_MILLENNIUM"
  input: "DATE_TRUNC_MILLENNIUM"
  output:
    name: "DATE_TRUNC_MILLENNIUM"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_MINUTE"
  input: "DATE_TRUNC_MINUTE"
  output:
    name: "DATE_TRUNC_MINUTE"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_MONTH"
  input: "DATE_TRUNC_MONTH"
  output:
    name: "DATE_TRUNC_MONTH"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_QUARTER"
  input: "DATE_TRUNC_QUARTER"
  output:
    name: "DATE_TRUNC_QUARTER"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_SECOND"
  input: "DATE_TRUNC_SECOND"
  output:
    name: "DATE_TRUNC_SECOND"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_WEEK"
  input: "DATE_TRUNC_WEEK"
  output:
    name: "DATE_TRUNC_WEEK"
    signatures:
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DATE_TRUNC_YEAR"
  input: "DATE_TRUNC_YEAR"
  output:
    name: "DATE_TRUNC_YEAR"
    signatures:
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DAY"
  input: "DAY"
  output:
    name: "DAY"
    signatures:
     - "(DATE) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> BIGINT"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DAYOFMONTH"
  input: "DAYOFMONTH"
  output:
    name: "DAYOFMONTH"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "DAYOFWEEK"
  input: "DAYOFWEEK"
  output:
    name: "DAYOFWEEK"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "DAYOFYEAR"
  input: "DAYOFYEAR"
  output:
    name: "DAYOFYEAR"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "DEGREES"
  input: "DEGREES"
  output:
    description: "Converts radians to degrees."
    name: "DEGREES"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "DENSE_RANK"
  input: "DENSE_RANK"
  output:
    name: "DENSE_RANK"
    signatures:
     - "() -> BIGINT"
 -
  description: "DIV"
  input: "DIV"
  output:
    name: "DIV"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "DIVIDE"
  input: "DIVIDE"
  output:
    name: "DIVIDE"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "E"
  input: "E"
  output:
    description: "Returns Euler's number, a constant approximately equal to 2.718281828459045."
    name: "E"
    signatures:
     - "() -> DOUBLE"
 -
  description: "ELEMENT"
  input: "ELEMENT"
  output:
    name: "ELEMENT"
    signatures: []
 -
  description: "ELT"
  input: "ELT"
  output:
    name: "ELT"
    signatures:
     - "(INT, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(INT, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
     - "(INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "ENDS_WITH"
  input: "ENDS_WITH"
  output:
    name: "ENDS_WITH"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "EQ"
  input: "EQ"
  output:
    name: "EQ"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "EQUAL"
  input: "EQUAL"
  output:
    name: "EQUAL"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "EVERY"
  input: "EVERY"
  output:
    name: "EVERY"
    signatures:
     - "(BOOLEAN) -> INT"
     - "(STRING) -> INT"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "EXP"
  input: "EXP"
  output:
    description: "Calculates Euler's number, e, raised to the power of the specified value."
    name: "EXP"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "EXTRACT"
  input: "EXTRACT"
  output:
    description: "Extracts the specified date or time part from the date or timestamp."
    name: "EXTRACT"
    signatures: []
 -
  description: "EXTRACTCENTURY"
  input: "EXTRACTCENTURY"
  output:
    name: "EXTRACTCENTURY"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTDAY"
  input: "EXTRACTDAY"
  output:
    name: "EXTRACTDAY"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTDECADE"
  input: "EXTRACTDECADE"
  output:
    name: "EXTRACTDECADE"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTDOW"
  input: "EXTRACTDOW"
  output:
    name: "EXTRACTDOW"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTDOY"
  input: "EXTRACTDOY"
  output:
    name: "EXTRACTDOY"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTEPOCH"
  input: "EXTRACTEPOCH"
  output:
    name: "EXTRACTEPOCH"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "EXTRACTHOUR"
  input: "EXTRACTHOUR"
  output:
    name: "EXTRACTHOUR"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "EXTRACTMILLENNIUM"
  input: "EXTRACTMILLENNIUM"
  output:
    name: "EXTRACTMILLENNIUM"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTMINUTE"
  input: "EXTRACTMINUTE"
  output:
    name: "EXTRACTMINUTE"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "EXTRACTMONTH"
  input: "EXTRACTMONTH"
  output:
    name: "EXTRACTMONTH"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTQUARTER"
  input: "EXTRACTQUARTER"
  output:
    name: "EXTRACTQUARTER"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTSECOND"
  input: "EXTRACTSECOND"
  output:
    name: "EXTRACTSECOND"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "EXTRACTWEEK"
  input: "EXTRACTWEEK"
  output:
    name: "EXTRACTWEEK"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "EXTRACTYEAR"
  input: "EXTRACTYEAR"
  output:
    name: "EXTRACTYEAR"
    signatures:
     - "(DATE) -> BIGINT"
     - "(TIMESTAMP) -> BIGINT"
 -
  description: "FACTORIAL"
  input: "FACTORIAL"
  output:
    name: "FACTORIAL"
    signatures:
     - "(INT) -> BIGINT"
     - "(BIGINT) -> BIGINT"
 -
  description: "FIRST"
  input: "FIRST"
  output:
    name: "FIRST"
    signatures:
     - "(BOOLEAN, NUMERIC) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BYTES"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(DATE, NUMERIC) -> DATE"
     - "(TIME, NUMERIC) -> TIME"
     - "(TIMESTAMP, NUMERIC) -> TIMESTAMP"
 -
  description: "FIRST_VALUE"
  input: "FIRST_VALUE"
  output:
    name: "FIRST_VALUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "FLATTEN"
  input: "FLATTEN"
  output:
    name: "FLATTEN"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "FLOOR"
  input: "FLOOR"
  output:
    description: "Returns the value from the specifed expression rounded to the nearest equal or smaller integer."
    name: "FLOOR"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE, ANY) -> DATE"
     - "(TIME, ANY) -> TIME"
     - "(TIMESTAMP, ANY) -> TIMESTAMP"
 -
  description: "FROM_HEX"
  input: "FROM_HEX"
  output:
    description: "Returns a binary value for the given hexadecimal string"
    name: "FROM_HEX"
    signatures:
     - "(CHARACTERS) -> BYTES"
 -
  description: "FUSION"
  input: "FUSION"
  output:
    name: "FUSION"
    signatures: []
 -
  description: "GEO_BEYOND"
  input: "GEO_BEYOND"
  output:
    name: "GEO_BEYOND"
    signatures:
     - "(FLOAT, FLOAT, FLOAT, FLOAT, DOUBLE) -> BOOLEAN"
 -
  description: "GEO_DISTANCE"
  input: "GEO_DISTANCE"
  output:
    name: "GEO_DISTANCE"
    signatures:
     - "(FLOAT, FLOAT, FLOAT, FLOAT) -> DOUBLE"
 -
  description: "GEO_NEARBY"
  input: "GEO_NEARBY"
  output:
    name: "GEO_NEARBY"
    signatures:
     - "(FLOAT, FLOAT, FLOAT, FLOAT, DOUBLE) -> BOOLEAN"
 -
  description: "GREATER_THAN"
  input: "GREATER_THAN"
  output:
    name: "GREATER_THAN"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "GREATER_THAN_OR_EQUAL_TO"
  input: "GREATER_THAN_OR_EQUAL_TO"
  output:
    name: "GREATER_THAN_OR_EQUAL_TO"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "GREATEST"
  input: "GREATEST"
  output:
    name: "GREATEST"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
 -
  description: "GROUPING"
  input: "GROUPING"
  output:
    name: "GROUPING"
    signatures:
     - "(ANY...) -> BIGINT"
 -
  description: "GROUPING_ID"
  input: "GROUPING_ID"
  output:
    name: "GROUPING_ID"
    signatures:
     - "(ANY...) -> BIGINT"
 -
  description: "GROUP_ID"
  input: "GROUP_ID"
  output:
    name: "GROUP_ID"
    signatures:
     - "() -> BIGINT"
 -
  description: "HASH"
  input: "HASH"
  output:
    name: "HASH"
    signatures:
     - "(ANY) -> INT"
 -
  description: "HASH32"
  input: "HASH32"
  output:
    name: "HASH32"
    signatures:
     - "(ANY, INT?) -> INT"
 -
  description: "HASH32ASDOUBLE"
  input: "HASH32ASDOUBLE"
  output:
    name: "HASH32ASDOUBLE"
    signatures:
     - "(ANY, INT?) -> INT"
 -
  description: "HASH64"
  input: "HASH64"
  output:
    name: "HASH64"
    signatures:
     - "(ANY, BIGINT?) -> BIGINT"
 -
  description: "HASH64ASDOUBLE"
  input: "HASH64ASDOUBLE"
  output:
    name: "HASH64ASDOUBLE"
    signatures:
     - "(ANY, BIGINT?) -> BIGINT"
 -
  description: "HASHMD5"
  input: "HASHMD5"
  output:
    name: "HASHMD5"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "HASHSHA1"
  input: "HASHSHA1"
  output:
    name: "HASHSHA1"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "HASHSHA256"
  input: "HASHSHA256"
  output:
    name: "HASHSHA256"
    signatures:
     - "(ANY) -> CHARACTERS"
 -
  description: "HEX"
  input: "HEX"
  output:
    name: "HEX"
    signatures:
     - "(STRING) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "HLL"
  input: "HLL"
  output:
    description: "Uses HyperLogLog to return an approximation of the distint cardinality of the input."
    name: "HLL"
    signatures:
     - "(ANY) -> BYTES"
 -
  description: "HLL_DECODE"
  input: "HLL_DECODE"
  output:
    name: "HLL_DECODE"
    signatures:
     - "(BYTES) -> BIGINT"
 -
  description: "HLL_MERGE"
  input: "HLL_MERGE"
  output:
    name: "HLL_MERGE"
    signatures:
     - "(BYTES) -> BYTES"
 -
  description: "HLL_V2"
  input: "HLL_V2"
  output:
    name: "HLL_V2"
    signatures:
     - "(BOOLEAN) -> ANY"
     - "(STRING) -> ANY"
     - "(DECIMAL) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "HOP"
  input: "HOP"
  output:
    name: "HOP"
    signatures: []
 -
  description: "HOP_END"
  input: "HOP_END"
  output:
    name: "HOP_END"
    signatures: []
 -
  description: "HOP_START"
  input: "HOP_START"
  output:
    name: "HOP_START"
    signatures: []
 -
  description: "HOUR"
  input: "HOUR"
  output:
    name: "HOUR"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "ICEBERGDISTRIBUTEBYPARTITION"
  input: "ICEBERGDISTRIBUTEBYPARTITION"
  output:
    name: "ICEBERGDISTRIBUTEBYPARTITION"
    signatures:
     - "(BYTES) -> INT"
 -
  description: "ILIKE"
  input: "ILIKE"
  output:
    description: "Compares two strings and returns true if they match."
    name: "ILIKE"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS?) -> BOOLEAN"
 -
  description: "IMAXDIR"
  input: "IMAXDIR"
  output:
    name: "IMAXDIR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "IMINDIR"
  input: "IMINDIR"
  output:
    name: "IMINDIR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "INITCAP"
  input: "INITCAP"
  output:
    description: "Returns the input string with the first letter of each word in uppercase and the subsequent letters in the word are in lowercase)."
    name: "INITCAP"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "INSTR"
  input: "INSTR"
  output:
    name: "INSTR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> INT"
 -
  description: "INTERVAL_DAY"
  input: "INTERVAL_DAY"
  output:
    name: "INTERVAL_DAY"
    signatures: []
 -
  description: "INTERVAL_YEAR"
  input: "INTERVAL_YEAR"
  output:
    name: "INTERVAL_YEAR"
    signatures:
     - "(ANY, BYTES) -> ANY"
     - "(BYTES, BOOLEAN) -> ANY"
     - "(BYTES, NUMERIC) -> ANY"
     - "(BYTES, DATEANDTIME) -> ANY"
     - "(BYTES, CHARACTERS) -> ANY"
 -
  description: "IN_FENNEL"
  input: "IN_FENNEL"
  output:
    name: "IN_FENNEL"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "IS DISTINCT FROM"
  input: "IS DISTINCT FROM"
  output:
    name: "IS DISTINCT FROM"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "IS FALSE"
  input: "IS FALSE"
  output:
    name: "IS FALSE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "IS NOT DISTINCT FROM"
  input: "IS NOT DISTINCT FROM"
  output:
    name: "IS NOT DISTINCT FROM"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "IS NOT FALSE"
  input: "IS NOT FALSE"
  output:
    name: "IS NOT FALSE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "IS NOT NULL"
  input: "IS NOT NULL"
  output:
    name: "IS NOT NULL"
    signatures:
     - "(ANY) -> BOOLEAN"
 -
  description: "IS NOT TRUE"
  input: "IS NOT TRUE"
  output:
    name: "IS NOT TRUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "IS NULL"
  input: "IS NULL"
  output:
    description: "Determines if an expression is NULL. Returns true if <expression> is NULL, and false otherwise.  Alias for the operator IS NULL."
    name: "IS NULL"
    signatures:
     - "(ANY) -> BOOLEAN"
 -
  description: "IS TRUE"
  input: "IS TRUE"
  output:
    name: "IS TRUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "ISDATE"
  input: "ISDATE"
  output:
    name: "ISDATE"
    signatures:
     - "(CHARACTERS) -> BOOLEAN"
 -
  description: "ISFALSE"
  input: "ISFALSE"
  output:
    description: "Returns TRUE if the input expression is FALSE."
    name: "ISFALSE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "ISNOTFALSE"
  input: "ISNOTFALSE"
  output:
    name: "ISNOTFALSE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "ISNOTNULL"
  input: "ISNOTNULL"
  output:
    name: "ISNOTNULL"
    signatures:
     - "(ANY) -> BOOLEAN"
 -
  description: "ISNOTTRUE"
  input: "ISNOTTRUE"
  output:
    name: "ISNOTTRUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "ISNULL"
  input: "ISNULL"
  output:
    description: "Determines if an expression is NULL. Returns true if <expression> is NULL, and false otherwise.  Alias for the operator IS NULL."
    name: "ISNULL"
    signatures:
     - "(ANY) -> BOOLEAN"
 -
  description: "ISNUMERIC"
  input: "ISNUMERIC"
  output:
    name: "ISNUMERIC"
    signatures:
     - "(CHARACTERS) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "ISTRUE"
  input: "ISTRUE"
  output:
    description: "Returns TRUE if the input expression evaluates to TRUE."
    name: "ISTRUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "IS_BIGINT"
  input: "IS_BIGINT"
  output:
    description: "Returns TRUE if the input expression is an big integer value."
    name: "IS_BIGINT"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_BIT"
  input: "IS_BIT"
  output:
    name: "IS_BIT"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_DATE"
  input: "IS_DATE"
  output:
    description: "Returns TRUE if the input expression can be cast to a date."
    name: "IS_DATE"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "IS_DECIMAL"
  input: "IS_DECIMAL"
  output:
    name: "IS_DECIMAL"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_DISTINCT_FROM"
  input: "IS_DISTINCT_FROM"
  output:
    name: "IS_DISTINCT_FROM"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "IS_FIXEDSIZEBINARY"
  input: "IS_FIXEDSIZEBINARY"
  output:
    name: "IS_FIXEDSIZEBINARY"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_FLOAT4"
  input: "IS_FLOAT4"
  output:
    name: "IS_FLOAT4"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_FLOAT8"
  input: "IS_FLOAT8"
  output:
    name: "IS_FLOAT8"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_INT"
  input: "IS_INT"
  output:
    description: "Returns TRUE if the input expression is an integer value."
    name: "IS_INT"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_INTERVALDAY"
  input: "IS_INTERVALDAY"
  output:
    name: "IS_INTERVALDAY"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_INTERVALYEAR"
  input: "IS_INTERVALYEAR"
  output:
    name: "IS_INTERVALYEAR"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_LIST"
  input: "IS_LIST"
  output:
    name: "IS_LIST"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_NOT_DISTINCT_FROM"
  input: "IS_NOT_DISTINCT_FROM"
  output:
    name: "IS_NOT_DISTINCT_FROM"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "IS_STRUCT"
  input: "IS_STRUCT"
  output:
    name: "IS_STRUCT"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_SUBSTR"
  input: "IS_SUBSTR"
  output:
    name: "IS_SUBSTR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "IS_TIME"
  input: "IS_TIME"
  output:
    name: "IS_TIME"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "IS_TIMESTAMP"
  input: "IS_TIMESTAMP"
  output:
    name: "IS_TIMESTAMP"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "IS_UTF8"
  input: "IS_UTF8"
  output:
    description: "Returns whether an expression is valid UTF-8"
    name: "IS_UTF8"
    signatures:
     - "(CHARACTERS) -> BOOLEAN"
 -
  description: "IS_VARBINARY"
  input: "IS_VARBINARY"
  output:
    name: "IS_VARBINARY"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "IS_VARCHAR"
  input: "IS_VARCHAR"
  output:
    description: "Returns TRUE if the input expression is a varchar value."
    name: "IS_VARCHAR"
    signatures:
     - "(BYTES) -> BOOLEAN"
 -
  description: "ITEMS_SKETCH"
  input: "ITEMS_SKETCH"
  output:
    name: "ITEMS_SKETCH"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "ITEMS_SKETCH_MERGE_BOOLEAN"
  input: "ITEMS_SKETCH_MERGE_BOOLEAN"
  output:
    name: "ITEMS_SKETCH_MERGE_BOOLEAN"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "ITEMS_SKETCH_MERGE_DOUBLE"
  input: "ITEMS_SKETCH_MERGE_DOUBLE"
  output:
    name: "ITEMS_SKETCH_MERGE_DOUBLE"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "ITEMS_SKETCH_MERGE_LONG"
  input: "ITEMS_SKETCH_MERGE_LONG"
  output:
    name: "ITEMS_SKETCH_MERGE_LONG"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "ITEMS_SKETCH_MERGE_NUMBER"
  input: "ITEMS_SKETCH_MERGE_NUMBER"
  output:
    name: "ITEMS_SKETCH_MERGE_NUMBER"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "ITEMS_SKETCH_MERGE_VARCHAR"
  input: "ITEMS_SKETCH_MERGE_VARCHAR"
  output:
    name: "ITEMS_SKETCH_MERGE_VARCHAR"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "KVGEN"
  input: "KVGEN"
  output:
    name: "KVGEN"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "LAG"
  input: "LAG"
  output:
    name: "LAG"
    signatures:
     - "(BOOLEAN, NUMERIC?) -> BOOLEAN"
     - "(BYTES, NUMERIC?) -> BYTES"
     - "(CHARACTERS, NUMERIC?) -> CHARACTERS"
     - "(FLOAT, NUMERIC?) -> FLOAT"
     - "(DECIMAL, NUMERIC?) -> DECIMAL"
     - "(DOUBLE, NUMERIC?) -> DOUBLE"
     - "(INT, NUMERIC?) -> INT"
     - "(BIGINT, NUMERIC?) -> BIGINT"
     - "(DATE, NUMERIC?) -> DATE"
     - "(TIME, NUMERIC?) -> TIME"
     - "(TIMESTAMP, NUMERIC?) -> TIMESTAMP"
     - "(BOOLEAN, NUMERIC, BOOLEAN?) -> BOOLEAN"
     - "(BOOLEAN, NUMERIC, CHARACTERS?) -> BOOLEAN"
     - "(BYTES, NUMERIC, BYTES?) -> BYTES"
     - "(CHARACTERS, NUMERIC, BOOLEAN?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, NUMERIC?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, DATEANDTIME?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, CHARACTERS?) -> CHARACTERS"
     - "(FLOAT, NUMERIC, NUMERIC?) -> FLOAT"
     - "(FLOAT, NUMERIC, CHARACTERS?) -> FLOAT"
     - "(DECIMAL, NUMERIC, NUMERIC?) -> DECIMAL"
     - "(DECIMAL, NUMERIC, CHARACTERS?) -> DECIMAL"
     - "(DOUBLE, NUMERIC, NUMERIC?) -> DOUBLE"
     - "(DOUBLE, NUMERIC, CHARACTERS?) -> DOUBLE"
     - "(INT, NUMERIC, NUMERIC?) -> INT"
     - "(INT, NUMERIC, CHARACTERS?) -> INT"
     - "(BIGINT, NUMERIC, NUMERIC?) -> BIGINT"
     - "(BIGINT, NUMERIC, CHARACTERS?) -> BIGINT"
     - "(DATE, NUMERIC, CHARACTERS?) -> DATE"
     - "(DATE, NUMERIC, DATE?) -> DATE"
     - "(DATE, NUMERIC, TIMESTAMP?) -> DATE"
     - "(TIME, NUMERIC, CHARACTERS?) -> TIME"
     - "(TIME, NUMERIC, TIME?) -> TIME"
     - "(TIMESTAMP, NUMERIC, CHARACTERS?) -> TIMESTAMP"
     - "(TIMESTAMP, NUMERIC, DATE?) -> TIMESTAMP"
     - "(TIMESTAMP, NUMERIC, TIMESTAMP?) -> TIMESTAMP"
 -
  description: "LAST"
  input: "LAST"
  output:
    name: "LAST"
    signatures:
     - "(BOOLEAN, NUMERIC) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BYTES"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(DATE, NUMERIC) -> DATE"
     - "(TIME, NUMERIC) -> TIME"
     - "(TIMESTAMP, NUMERIC) -> TIMESTAMP"
 -
  description: "LAST_DAY"
  input: "LAST_DAY"
  output:
    name: "LAST_DAY"
    signatures:
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> DATE"
 -
  description: "LAST_QUERY_ID"
  input: "LAST_QUERY_ID"
  output:
    description: "Returns the ID for the most recently executed query in the current session."
    name: "LAST_QUERY_ID"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "LAST_VALUE"
  input: "LAST_VALUE"
  output:
    name: "LAST_VALUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "LEAD"
  input: "LEAD"
  output:
    name: "LEAD"
    signatures:
     - "(BOOLEAN, NUMERIC?) -> BOOLEAN"
     - "(BYTES, NUMERIC?) -> BYTES"
     - "(CHARACTERS, NUMERIC?) -> CHARACTERS"
     - "(FLOAT, NUMERIC?) -> FLOAT"
     - "(DECIMAL, NUMERIC?) -> DECIMAL"
     - "(DOUBLE, NUMERIC?) -> DOUBLE"
     - "(INT, NUMERIC?) -> INT"
     - "(BIGINT, NUMERIC?) -> BIGINT"
     - "(DATE, NUMERIC?) -> DATE"
     - "(TIME, NUMERIC?) -> TIME"
     - "(TIMESTAMP, NUMERIC?) -> TIMESTAMP"
     - "(BOOLEAN, NUMERIC, BOOLEAN?) -> BOOLEAN"
     - "(BOOLEAN, NUMERIC, CHARACTERS?) -> BOOLEAN"
     - "(BYTES, NUMERIC, BYTES?) -> BYTES"
     - "(CHARACTERS, NUMERIC, BOOLEAN?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, NUMERIC?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, DATEANDTIME?) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC, CHARACTERS?) -> CHARACTERS"
     - "(FLOAT, NUMERIC, NUMERIC?) -> FLOAT"
     - "(FLOAT, NUMERIC, CHARACTERS?) -> FLOAT"
     - "(DECIMAL, NUMERIC, NUMERIC?) -> DECIMAL"
     - "(DECIMAL, NUMERIC, CHARACTERS?) -> DECIMAL"
     - "(DOUBLE, NUMERIC, NUMERIC?) -> DOUBLE"
     - "(DOUBLE, NUMERIC, CHARACTERS?) -> DOUBLE"
     - "(INT, NUMERIC, NUMERIC?) -> INT"
     - "(INT, NUMERIC, CHARACTERS?) -> INT"
     - "(BIGINT, NUMERIC, NUMERIC?) -> BIGINT"
     - "(BIGINT, NUMERIC, CHARACTERS?) -> BIGINT"
     - "(DATE, NUMERIC, CHARACTERS?) -> DATE"
     - "(DATE, NUMERIC, DATE?) -> DATE"
     - "(DATE, NUMERIC, TIMESTAMP?) -> DATE"
     - "(TIME, NUMERIC, CHARACTERS?) -> TIME"
     - "(TIME, NUMERIC, TIME?) -> TIME"
     - "(TIMESTAMP, NUMERIC, CHARACTERS?) -> TIMESTAMP"
     - "(TIMESTAMP, NUMERIC, DATE?) -> TIMESTAMP"
     - "(TIMESTAMP, NUMERIC, TIMESTAMP?) -> TIMESTAMP"
 -
  description: "LEAST"
  input: "LEAST"
  output:
    name: "LEAST"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
 -
  description: "LEFT"
  input: "LEFT"
  output:
    description: "Returns the left-most substring. The function name must be enclosed in double quotes (\"LEFT\")."
    name: "LEFT"
    signatures:
     - "(CHARACTERS, INT) -> CHARACTERS"
     - "(CHARACTERS, BIGINT) -> CHARACTERS"
 -
  description: "LENGTH"
  input: "LENGTH"
  output:
    description: "Returns the length of an input string. If the character encoding isn't specified, it assumes to UTF8."
    name: "LENGTH"
    signatures:
     - "(CHARACTERS) -> INT"
 -
  description: "LENGTHUTF8"
  input: "LENGTHUTF8"
  output:
    name: "LENGTHUTF8"
    signatures:
     - "(BYTES) -> INT"
 -
  description: "LESS_THAN"
  input: "LESS_THAN"
  output:
    name: "LESS_THAN"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "LESS_THAN_OR_EQUAL_TO"
  input: "LESS_THAN_OR_EQUAL_TO"
  output:
    name: "LESS_THAN_OR_EQUAL_TO"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "LEVENSHTEIN"
  input: "LEVENSHTEIN"
  output:
    name: "LEVENSHTEIN"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> INT"
 -
  description: "LIKE"
  input: "LIKE"
  output:
    name: "LIKE"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS?) -> BOOLEAN"
 -
  description: "LISTAGG"
  input: "LISTAGG"
  output:
    name: "LISTAGG"
    signatures:
     - "(BYTES, STRING?) -> BYTES"
     - "(CHARACTERS, STRING?) -> CHARACTERS"
 -
  description: "LISTAGG_MERGE"
  input: "LISTAGG_MERGE"
  output:
    name: "LISTAGG_MERGE"
    signatures:
     - "(STRING, STRING) -> CHARACTERS"
 -
  description: "LN"
  input: "LN"
  output:
    name: "LN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "LOCALTIME"
  input: "LOCALTIME"
  output:
    description: "Returns the current time for the system."
    name: "LOCALTIME"
    signatures:
     - "() -> TIME"
 -
  description: "LOCALTIMESTAMP"
  input: "LOCALTIMESTAMP"
  output:
    description: "Returns the current timestamp for the system."
    name: "LOCALTIMESTAMP"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "LOCAL_LISTAGG"
  input: "LOCAL_LISTAGG"
  output:
    name: "LOCAL_LISTAGG"
    signatures:
     - "(STRING, STRING?) -> LIST"
 -
  description: "LOCATE"
  input: "LOCATE"
  output:
    description: "Searches for the first occurrence of the first argument in the second argument and if found, returns the position the of the first argument in the second argument. The first character in a string is position 1. Returns 0 if the substring isn't found in the expression."
    name: "LOCATE"
    signatures:
     - "(CHARACTERS, CHARACTERS, INT?) -> INT"
 -
  description: "LOG"
  input: "LOG"
  output:
    description: "Returns the logarithm of the numeric input expression. If no base is specified, the natural log (ln) will be calculated."
    name: "LOG"
    signatures:
     - "(FLOAT, FLOAT?) -> DOUBLE"
     - "(DOUBLE, DOUBLE?) -> DOUBLE"
     - "(INT, INT?) -> DOUBLE"
     - "(BIGINT, BIGINT?) -> DOUBLE"
 -
  description: "LOG10"
  input: "LOG10"
  output:
    description: "Returns the log base 10 of the numeric input expression."
    name: "LOG10"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "LOWER"
  input: "LOWER"
  output:
    description: "Returns the input expression with all the characters converted to lowercase."
    name: "LOWER"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "LPAD"
  input: "LPAD"
  output:
    description: "Left pads a string with spaces or specified characters to reach the number of chracters specified as a parameter."
    name: "LPAD"
    signatures:
     - "(CHARACTERS, INT, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, BIGINT, CHARACTERS?) -> CHARACTERS"
 -
  description: "LSHIFT"
  input: "LSHIFT"
  output:
    description: "Shifts the bits of the numeric expression to the left."
    name: "LSHIFT"
    signatures:
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "LTRIM"
  input: "LTRIM"
  output:
    description: "Removes leading spaces or characters from a string."
    name: "LTRIM"
    signatures:
     - "(CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "MAPPIFY"
  input: "MAPPIFY"
  output:
    name: "MAPPIFY"
    signatures:
     - "(ANY) -> ANY"
 -
  description: "MASK"
  input: "MASK"
  output:
    name: "MASK"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MASK_FIRST_N"
  input: "MASK_FIRST_N"
  output:
    name: "MASK_FIRST_N"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(CHARACTERS, INT) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MASK_HASH"
  input: "MASK_HASH"
  output:
    name: "MASK_HASH"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MASK_INTERNAL"
  input: "MASK_INTERNAL"
  output:
    name: "MASK_INTERNAL"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
     - "(CHARACTERS, CHARACTERS, INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS) -> CHARACTERS"
     - "(INT, CHARACTERS, INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, INT) -> INT"
     - "(BIGINT, CHARACTERS, INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, INT) -> BIGINT"
     - "(DATE, CHARACTERS, INT, CHARACTERS, CHARACTERS, CHARACTERS, CHARACTERS, INT, INT, INT, INT) -> DATE"
 -
  description: "MASK_LAST_N"
  input: "MASK_LAST_N"
  output:
    name: "MASK_LAST_N"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(CHARACTERS, INT) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MASK_SHOW_FIRST_N"
  input: "MASK_SHOW_FIRST_N"
  output:
    name: "MASK_SHOW_FIRST_N"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MASK_SHOW_LAST_N"
  input: "MASK_SHOW_LAST_N"
  output:
    name: "MASK_SHOW_LAST_N"
    signatures:
     - "(BOOLEAN...) -> BOOLEAN"
     - "(BYTES...) -> BYTES"
     - "(CHARACTERS...) -> CHARACTERS"
     - "(FLOAT...) -> FLOAT"
     - "(DECIMAL...) -> DECIMAL"
     - "(DOUBLE...) -> DOUBLE"
     - "(INT...) -> INT"
     - "(BIGINT...) -> BIGINT"
     - "(DATE...) -> DATE"
     - "(TIME...) -> TIME"
     - "(TIMESTAMP...) -> TIMESTAMP"
     - "(BOOLEAN, ANY...) -> BOOLEAN"
     - "(BYTES, ANY...) -> BYTES"
     - "(CHARACTERS, ANY...) -> CHARACTERS"
     - "(FLOAT, ANY...) -> FLOAT"
     - "(DECIMAL, ANY...) -> DECIMAL"
     - "(DOUBLE, ANY...) -> DOUBLE"
     - "(INT, ANY...) -> INT"
     - "(BIGINT, ANY...) -> BIGINT"
     - "(DATE, ANY...) -> DATE"
     - "(TIME, ANY...) -> TIME"
     - "(TIMESTAMP, ANY...) -> TIMESTAMP"
 -
  description: "MATCH_NUMBER "
  input: "MATCH_NUMBER "
  output:
    name: "MATCH_NUMBER "
    signatures:
     - "() -> BIGINT"
 -
  description: "MAX"
  input: "MAX"
  output:
    description: "Returns the maximum value among the non-NULL input expressions."
    name: "MAX"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "MAXDIR"
  input: "MAXDIR"
  output:
    name: "MAXDIR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "MAX_V2"
  input: "MAX_V2"
  output:
    name: "MAX_V2"
    signatures:
     - "(BOOLEAN) -> ANY"
     - "(STRING) -> ANY"
     - "(DECIMAL) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "MD5"
  input: "MD5"
  output:
    name: "MD5"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "MEDIAN"
  input: "MEDIAN"
  output:
    description: "Computes a percentile based on a continuous distribution of the column value"
    name: "MEDIAN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "MIN"
  input: "MIN"
  output:
    description: "Returns the minimum value among the non-NULL input expressions."
    name: "MIN"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "MINDIR"
  input: "MINDIR"
  output:
    name: "MINDIR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "MINUTE"
  input: "MINUTE"
  output:
    name: "MINUTE"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "MIN_V2"
  input: "MIN_V2"
  output:
    name: "MIN_V2"
    signatures:
     - "(BOOLEAN) -> ANY"
     - "(STRING) -> ANY"
     - "(DECIMAL) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "MOD"
  input: "MOD"
  output:
    description: "Returns the remainder of the input expression divided by the second input expression."
    name: "MOD"
    signatures:
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DECIMAL, INT) -> DECIMAL"
     - "(DECIMAL, BIGINT) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, DECIMAL) -> DECIMAL"
     - "(INT, INT) -> INT"
     - "(INT, BIGINT) -> BIGINT"
     - "(BIGINT, DECIMAL) -> DECIMAL"
     - "(BIGINT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "MODULO"
  input: "MODULO"
  output:
    name: "MODULO"
    signatures:
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(BIGINT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "MONTH"
  input: "MONTH"
  output:
    name: "MONTH"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "MONTHS_BETWEEN"
  input: "MONTHS_BETWEEN"
  output:
    name: "MONTHS_BETWEEN"
    signatures:
     - "(DATE, DATE) -> DOUBLE"
     - "(TIMESTAMP, TIMESTAMP) -> DOUBLE"
 -
  description: "MULTIPLY"
  input: "MULTIPLY"
  output:
    name: "MULTIPLY"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "NDV"
  input: "NDV"
  output:
    description: "Returns an approximate distinct value number, similar to `COUNT(DISTINCT col)`. NDV can return results faster than using the combination of COUNT and DISTINCT while using a constant amount of memory, resulting in less memory usage for columns with high cardinality."
    name: "NDV"
    signatures:
     - "(ANY) -> BIGINT"
 -
  description: "NEGATIVE"
  input: "NEGATIVE"
  output:
    name: "NEGATIVE"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "NEWPARTITIONNUMBER"
  input: "NEWPARTITIONNUMBER"
  output:
    name: "NEWPARTITIONNUMBER"
    signatures:
     - "(BOOLEAN) -> INT"
     - "(DATEANDTIME) -> INT"
     - "(FLOAT) -> INT"
     - "(DOUBLE) -> INT"
     - "(INT) -> INT"
     - "(BIGINT) -> INT"
 -
  description: "NEWPARTITIONVALUE"
  input: "NEWPARTITIONVALUE"
  output:
    name: "NEWPARTITIONVALUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(STRING) -> BOOLEAN"
     - "(DATEANDTIME) -> BOOLEAN"
     - "(FLOAT) -> BOOLEAN"
     - "(DOUBLE) -> BOOLEAN"
     - "(INT) -> BOOLEAN"
     - "(BIGINT) -> BOOLEAN"
 -
  description: "NEXT"
  input: "NEXT"
  output:
    name: "NEXT"
    signatures:
     - "(BOOLEAN, NUMERIC) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BYTES"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(DATE, NUMERIC) -> DATE"
     - "(TIME, NUMERIC) -> TIME"
     - "(TIMESTAMP, NUMERIC) -> TIMESTAMP"
 -
  description: "NEXT_DAY"
  input: "NEXT_DAY"
  output:
    name: "NEXT_DAY"
    signatures:
     - "(DATE, CHARACTERS) -> DATE"
     - "(TIMESTAMP, CHARACTERS) -> DATE"
 -
  description: "NONNULLSTATCOUNT"
  input: "NONNULLSTATCOUNT"
  output:
    name: "NONNULLSTATCOUNT"
    signatures:
     - "(ANY) -> BIGINT"
 -
  description: "NOT"
  input: "NOT"
  output:
    name: "NOT"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
 -
  description: "NOT_EQUAL"
  input: "NOT_EQUAL"
  output:
    name: "NOT_EQUAL"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(STRING, STRING) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DECIMAL, DECIMAL) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "NOW"
  input: "NOW"
  output:
    description: "Returns the current timestamp (date and time) in UTC timezone."
    name: "NOW"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "NTH_VALUE"
  input: "NTH_VALUE"
  output:
    name: "NTH_VALUE"
    signatures:
     - "(BOOLEAN, NUMERIC) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BYTES"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(DATE, NUMERIC) -> DATE"
     - "(TIME, NUMERIC) -> TIME"
     - "(TIMESTAMP, NUMERIC) -> TIMESTAMP"
 -
  description: "NTILE"
  input: "NTILE"
  output:
    name: "NTILE"
    signatures: []
 -
  description: "NULLIF"
  input: "NULLIF"
  output:
    description: "Compares two expressions. If the values in each expression are equal, returns `NULL` and, if they are not equal, returns the value of the first expression."
    name: "NULLIF"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(BOOLEAN, CHARACTERS) -> BOOLEAN"
     - "(BYTES, BYTES) -> BYTES"
     - "(CHARACTERS, BOOLEAN) -> CHARACTERS"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(CHARACTERS, DATEANDTIME) -> CHARACTERS"
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(FLOAT, CHARACTERS) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DECIMAL, CHARACTERS) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(DOUBLE, CHARACTERS) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(INT, CHARACTERS) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(BIGINT, CHARACTERS) -> BIGINT"
     - "(DATE, CHARACTERS) -> DATE"
     - "(DATE, DATE) -> DATE"
     - "(DATE, TIMESTAMP) -> DATE"
     - "(TIME, CHARACTERS) -> TIME"
     - "(TIME, TIME) -> TIME"
     - "(TIMESTAMP, CHARACTERS) -> TIMESTAMP"
     - "(TIMESTAMP, DATE) -> TIMESTAMP"
     - "(TIMESTAMP, TIMESTAMP) -> TIMESTAMP"
 -
  description: "NVL"
  input: "NVL"
  output:
    name: "NVL"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(NUMERIC, DOUBLE) -> DOUBLE"
     - "(BYTES, BYTES) -> BYTES"
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(FLOAT, DECIMAL) -> DOUBLE"
     - "(FLOAT, INT) -> FLOAT"
     - "(FLOAT, BIGINT) -> FLOAT"
     - "(DECIMAL, FLOAT) -> DOUBLE"
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DECIMAL, INT) -> DECIMAL"
     - "(DECIMAL, BIGINT) -> DECIMAL"
     - "(DOUBLE, FLOAT) -> DOUBLE"
     - "(DOUBLE, DECIMAL) -> DOUBLE"
     - "(DOUBLE, INT) -> DOUBLE"
     - "(DOUBLE, BIGINT) -> DOUBLE"
     - "(INT, FLOAT) -> FLOAT"
     - "(INT, DECIMAL) -> DECIMAL"
     - "(INT, INT) -> INT"
     - "(INT, BIGINT) -> BIGINT"
     - "(BIGINT, FLOAT) -> FLOAT"
     - "(BIGINT, DECIMAL) -> DECIMAL"
     - "(BIGINT, INT) -> BIGINT"
     - "(BIGINT, BIGINT) -> BIGINT"
     - "(DATE, DATE) -> DATE"
     - "(DATE, TIMESTAMP) -> TIMESTAMP"
     - "(TIME, TIME) -> TIME"
     - "(TIMESTAMP, DATE) -> TIMESTAMP"
     - "(TIMESTAMP, TIMESTAMP) -> TIMESTAMP"
 -
  description: "OCTET_LENGTH"
  input: "OCTET_LENGTH"
  output:
    description: "Returns the length of the string in bytes."
    name: "OCTET_LENGTH"
    signatures:
     - "(STRING) -> INT"
 -
  description: "OR"
  input: "OR"
  output:
    name: "OR"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "ORNOSHORTCIRCUIT"
  input: "ORNOSHORTCIRCUIT"
  output:
    name: "ORNOSHORTCIRCUIT"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
 -
  description: "OVERLAY"
  input: "OVERLAY"
  output:
    name: "OVERLAY"
    signatures: []
 -
  description: "PARTITIONBITCOUNTER"
  input: "PARTITIONBITCOUNTER"
  output:
    name: "PARTITIONBITCOUNTER"
    signatures:
     - "(BOOLEAN) -> INT"
 -
  description: "PERCENTILE_CONT"
  input: "PERCENTILE_CONT"
  output:
    description: "Computes a percentile based on a continuous distribution of the column value"
    name: "PERCENTILE_CONT"
    signatures: []
 -
  description: "PERCENTILE_DISC"
  input: "PERCENTILE_DISC"
  output:
    description: "Computes a specific percentile for sorted values in a column"
    name: "PERCENTILE_DISC"
    signatures: []
 -
  description: "PERCENT_RANK"
  input: "PERCENT_RANK"
  output:
    name: "PERCENT_RANK"
    signatures:
     - "() -> DOUBLE"
 -
  description: "PI"
  input: "PI"
  output:
    description: "Returns the value of pi, which is approximately 3.14592654."
    name: "PI"
    signatures:
     - "() -> DOUBLE"
 -
  description: "PMOD"
  input: "PMOD"
  output:
    name: "PMOD"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "POSITION"
  input: "POSITION"
  output:
    description: "Returns the position of the first occurrence of a substring within another string"
    name: "POSITION"
    signatures:
     - "(BYTES, BYTES, INT?) -> INT"
     - "(BYTES, BYTES, BIGINT?) -> INT"
     - "(CHARACTERS, CHARACTERS, INT?) -> INT"
     - "(CHARACTERS, CHARACTERS, BIGINT?) -> INT"
 -
  description: "POSITIVE"
  input: "POSITIVE"
  output:
    name: "POSITIVE"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "POW"
  input: "POW"
  output:
    name: "POW"
    signatures:
     - "(DOUBLE, DOUBLE) -> DOUBLE"
 -
  description: "POWER"
  input: "POWER"
  output:
    description: "Returns numeric1 raised to the power of numeric2."
    name: "POWER"
    signatures:
     - "(NUMERIC[The Base.], NUMERIC[The Exponent.]) -> NUMERIC"
 -
  description: "PREV"
  input: "PREV"
  output:
    name: "PREV"
    signatures:
     - "(BOOLEAN, NUMERIC) -> BOOLEAN"
     - "(BYTES, NUMERIC) -> BYTES"
     - "(CHARACTERS, NUMERIC) -> CHARACTERS"
     - "(FLOAT, NUMERIC) -> FLOAT"
     - "(DECIMAL, NUMERIC) -> DECIMAL"
     - "(DOUBLE, NUMERIC) -> DOUBLE"
     - "(INT, NUMERIC) -> INT"
     - "(BIGINT, NUMERIC) -> BIGINT"
     - "(DATE, NUMERIC) -> DATE"
     - "(TIME, NUMERIC) -> TIME"
     - "(TIMESTAMP, NUMERIC) -> TIMESTAMP"
 -
  description: "QUARTER"
  input: "QUARTER"
  output:
    name: "QUARTER"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "QUERY_USER"
  input: "QUERY_USER"
  output:
    description: "Returns the username of the user that is currently logged in to the system."
    name: "QUERY_USER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "QUOTE"
  input: "QUOTE"
  output:
    name: "QUOTE"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "RADIANS"
  input: "RADIANS"
  output:
    description: "Convert a value in degrees to radians"
    name: "RADIANS"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "RAND"
  input: "RAND"
  output:
    name: "RAND"
    signatures:
     - "() -> DOUBLE"
     - "(NUMERIC) -> DOUBLE"
 -
  description: "RANDOM"
  input: "RANDOM"
  output:
    description: "Each call returns a random generated number between 0 and 1 for each row."
    name: "RANDOM"
    signatures:
     - "() -> DOUBLE"
     - "(INT) -> DOUBLE"
 -
  description: "RAND_INTEGER"
  input: "RAND_INTEGER"
  output:
    name: "RAND_INTEGER"
    signatures:
     - "(NUMERIC, NUMERIC?) -> INT"
 -
  description: "RANK"
  input: "RANK"
  output:
    name: "RANK"
    signatures:
     - "() -> BIGINT"
 -
  description: "REGEXP_EXTRACT"
  input: "REGEXP_EXTRACT"
  output:
    name: "REGEXP_EXTRACT"
    signatures:
     - "(CHARACTERS, CHARACTERS, INT) -> CHARACTERS"
 -
  description: "REGEXP_LIKE"
  input: "REGEXP_LIKE"
  output:
    name: "REGEXP_LIKE"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "REGEXP_MATCHES"
  input: "REGEXP_MATCHES"
  output:
    name: "REGEXP_MATCHES"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "REGEXP_REPLACE"
  input: "REGEXP_REPLACE"
  output:
    name: "REGEXP_REPLACE"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "REGR_SXX"
  input: "REGR_SXX"
  output:
    name: "REGR_SXX"
    signatures:
     - "(NUMERIC, NUMERIC) -> DOUBLE"
 -
  description: "REGR_SYY"
  input: "REGR_SYY"
  output:
    name: "REGR_SYY"
    signatures:
     - "(NUMERIC, NUMERIC) -> DOUBLE"
 -
  description: "REPEAT"
  input: "REPEAT"
  output:
    description: "Builds a string by repeating the input for the specified number of times"
    name: "REPEAT"
    signatures:
     - "(CHARACTERS, INT) -> CHARACTERS"
 -
  description: "REPEATSTR"
  input: "REPEATSTR"
  output:
    description: "Repeats the given string n times."
    name: "REPEATSTR"
    signatures:
     - "(CHARACTERS, INT) -> CHARACTERS"
 -
  description: "REPLACE"
  input: "REPLACE"
  output:
    description: "Removes all occurrences of a specified substring and replaces them with another string."
    name: "REPLACE"
    signatures:
     - "(BYTES, STRING, STRING) -> BYTES"
     - "(CHARACTERS, STRING, STRING) -> CHARACTERS"
 -
  description: "REVERSE"
  input: "REVERSE"
  output:
    description: "Reverses the order of characters in a string."
    name: "REVERSE"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "RIGHT"
  input: "RIGHT"
  output:
    description: "Returns the right-most substring. The function name must be enclosed in double quotes (\"RIGHT\")."
    name: "RIGHT"
    signatures:
     - "(CHARACTERS, INT) -> CHARACTERS"
     - "(CHARACTERS, BIGINT) -> CHARACTERS"
 -
  description: "ROUND"
  input: "ROUND"
  output:
    description: "Returns the rounded value for the inputted value. If no scale is specified, the closest whole number is returned."
    name: "ROUND"
    signatures:
     - "(FLOAT, INT?) -> FLOAT"
     - "(FLOAT, BIGINT?) -> FLOAT"
     - "(DECIMAL, INT?) -> DECIMAL"
     - "(DECIMAL, BIGINT?) -> DECIMAL"
     - "(DOUBLE, INT?) -> DOUBLE"
     - "(DOUBLE, BIGINT?) -> DOUBLE"
     - "(INT, INT?) -> INT"
     - "(INT, BIGINT?) -> INT"
     - "(BIGINT, INT?) -> BIGINT"
     - "(BIGINT, BIGINT?) -> BIGINT"
 -
  description: "ROW_NUMBER"
  input: "ROW_NUMBER"
  output:
    name: "ROW_NUMBER"
    signatures:
     - "() -> BIGINT"
 -
  description: "RPAD"
  input: "RPAD"
  output:
    description: "Right pads a string with spaces or specified characters to reach the number of chracters specified as a parameter."
    name: "RPAD"
    signatures:
     - "(CHARACTERS, INT, CHARACTERS?) -> CHARACTERS"
     - "(CHARACTERS, BIGINT, CHARACTERS?) -> CHARACTERS"
 -
  description: "RSHIFT"
  input: "RSHIFT"
  output:
    description: "Shifts the bits of the numeric expression to he right."
    name: "RSHIFT"
    signatures:
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "RTRIM"
  input: "RTRIM"
  output:
    description: "Removes trailing spaces or characters from a string."
    name: "RTRIM"
    signatures:
     - "(CHARACTERS, CHARACTERS?) -> CHARACTERS"
 -
  description: "SAME"
  input: "SAME"
  output:
    name: "SAME"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
     - "(FLOAT, FLOAT) -> BOOLEAN"
     - "(DOUBLE, DOUBLE) -> BOOLEAN"
     - "(INT, INT) -> BOOLEAN"
     - "(BIGINT, BIGINT) -> BOOLEAN"
     - "(DATE, DATE) -> BOOLEAN"
     - "(TIME, TIME) -> BOOLEAN"
     - "(TIMESTAMP, TIMESTAMP) -> BOOLEAN"
 -
  description: "SAMPLE"
  input: "SAMPLE"
  output:
    name: "SAMPLE"
    signatures:
     - "(DOUBLE) -> BOOLEAN"
 -
  description: "SECOND"
  input: "SECOND"
  output:
    name: "SECOND"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "SESSION"
  input: "SESSION"
  output:
    name: "SESSION"
    signatures: []
 -
  description: "SESSION_END"
  input: "SESSION_END"
  output:
    name: "SESSION_END"
    signatures: []
 -
  description: "SESSION_START"
  input: "SESSION_START"
  output:
    name: "SESSION_START"
    signatures: []
 -
  description: "SESSION_USER"
  input: "SESSION_USER"
  output:
    description: "Returns the username of the user that created the current session."
    name: "SESSION_USER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "SHA"
  input: "SHA"
  output:
    name: "SHA"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "SHA1"
  input: "SHA1"
  output:
    name: "SHA1"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "SHA256"
  input: "SHA256"
  output:
    name: "SHA256"
    signatures:
     - "(BOOLEAN) -> CHARACTERS"
     - "(STRING) -> CHARACTERS"
     - "(DATEANDTIME) -> CHARACTERS"
     - "(FLOAT) -> CHARACTERS"
     - "(DOUBLE) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "SIGN"
  input: "SIGN"
  output:
    description: "Returns the sign of the input expression."
    name: "SIGN"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "SIMILAR"
  input: "SIMILAR"
  output:
    name: "SIMILAR"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS?) -> BOOLEAN"
 -
  description: "SIMILAR_TO"
  input: "SIMILAR_TO"
  output:
    name: "SIMILAR_TO"
    signatures:
     - "(CHARACTERS, CHARACTERS, CHARACTERS?) -> BOOLEAN"
 -
  description: "SIN"
  input: "SIN"
  output:
    description: "Computes the sine of a value."
    name: "SIN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "SINGLE_VALUE"
  input: "SINGLE_VALUE"
  output:
    name: "SINGLE_VALUE"
    signatures:
     - "(BOOLEAN) -> BOOLEAN"
     - "(BYTES) -> BYTES"
     - "(CHARACTERS) -> CHARACTERS"
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIME) -> TIME"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "SINH"
  input: "SINH"
  output:
    description: "Computes the hyperbolic sine of the input expression."
    name: "SINH"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> DOUBLE"
     - "(BIGINT) -> DOUBLE"
 -
  description: "SOUNDEX"
  input: "SOUNDEX"
  output:
    name: "SOUNDEX"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "SPACE"
  input: "SPACE"
  output:
    name: "SPACE"
    signatures:
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "SPLIT_PART"
  input: "SPLIT_PART"
  output:
    description: "Splits a given string at a specified character and returns the requested part."
    name: "SPLIT_PART"
    signatures:
     - "(CHARACTERS, CHARACTERS, INT) -> CHARACTERS"
 -
  description: "SQRT"
  input: "SQRT"
  output:
    description: "Returns the square root of the non-negative numeric expression."
    name: "SQRT"
    signatures:
     - "(NUMERIC) -> DOUBLE"
     - "(FLOAT) -> FLOAT"
     - "(INT) -> INT"
     - "(BIGINT) -> BIGINT"
 -
  description: "STARTS_WITH"
  input: "STARTS_WITH"
  output:
    name: "STARTS_WITH"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> BOOLEAN"
 -
  description: "STATCOUNT"
  input: "STATCOUNT"
  output:
    name: "STATCOUNT"
    signatures:
     - "(ANY) -> BIGINT"
 -
  description: "STATEMENT_TIMESTAMP"
  input: "STATEMENT_TIMESTAMP"
  output:
    name: "STATEMENT_TIMESTAMP"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "STDDEV"
  input: "STDDEV"
  output:
    name: "STDDEV"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "STDDEV_POP"
  input: "STDDEV_POP"
  output:
    name: "STDDEV_POP"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "STDDEV_SAMP"
  input: "STDDEV_SAMP"
  output:
    name: "STDDEV_SAMP"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "STRING_BINARY"
  input: "STRING_BINARY"
  output:
    name: "STRING_BINARY"
    signatures:
     - "(BYTES) -> CHARACTERS"
 -
  description: "STRPOS"
  input: "STRPOS"
  output:
    description: "Searches for the first occurence of the substring in the given expression and returns the position of where the substring begins. Searching binary values is also supported."
    name: "STRPOS"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> INT"
 -
  description: "SUBSTR"
  input: "SUBSTR"
  output:
    name: "SUBSTR"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
     - "(CHARACTERS, BIGINT, BIGINT?) -> CHARACTERS"
 -
  description: "SUBSTR2"
  input: "SUBSTR2"
  output:
    name: "SUBSTR2"
    signatures:
     - "(CHARACTERS, BIGINT, BIGINT) -> CHARACTERS"
 -
  description: "SUBSTRING"
  input: "SUBSTRING"
  output:
    description: "Returns the portion of the string from the specified base expression starting at the specified chracters."
    name: "SUBSTRING"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
     - "(BYTES, INT, INT?) -> BYTES"
     - "(CHARACTERS, INT, INT?) -> CHARACTERS"
     - "(CHARACTERS, BIGINT, BIGINT?) -> CHARACTERS"
 -
  description: "SUBSTRING2"
  input: "SUBSTRING2"
  output:
    name: "SUBSTRING2"
    signatures:
     - "(CHARACTERS, BIGINT, BIGINT) -> CHARACTERS"
 -
  description: "SUBTRACT"
  input: "SUBTRACT"
  output:
    name: "SUBTRACT"
    signatures:
     - "(FLOAT, FLOAT) -> FLOAT"
     - "(DECIMAL, DECIMAL) -> DECIMAL"
     - "(DOUBLE, DOUBLE) -> DOUBLE"
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIME, INT) -> TIME"
     - "(TIME, BIGINT) -> TIME"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "SUM"
  input: "SUM"
  output:
    description: "Returns the sum of non-NULL input expressions."
    name: "SUM"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> BIGINT"
     - "(BIGINT) -> BIGINT"
 -
  description: "SUM_V2"
  input: "SUM_V2"
  output:
    name: "SUM_V2"
    signatures:
     - "(BOOLEAN) -> ANY"
     - "(STRING) -> ANY"
     - "(DECIMAL) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "SYSTEM_USER"
  input: "SYSTEM_USER"
  output:
    name: "SYSTEM_USER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "TAN"
  input: "TAN"
  output:
    description: "Computes the tangent of a value in radians."
    name: "TAN"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "TANH"
  input: "TANH"
  output:
    description: "Computes the hyperbolic tangent of the input expression."
    name: "TANH"
    signatures:
     - "(FLOAT) -> DOUBLE"
     - "(DOUBLE) -> DOUBLE"
     - "(INT) -> DOUBLE"
     - "(BIGINT) -> DOUBLE"
 -
  description: "TDIGEST"
  input: "TDIGEST"
  output:
    name: "TDIGEST"
    signatures:
     - "(ANY, BOOLEAN) -> ANY"
     - "(ANY, STRING) -> ANY"
     - "(BYTES, NUMERIC) -> ANY"
     - "(BYTES, DATEANDTIME) -> ANY"
 -
  description: "TDIGEST_MERGE"
  input: "TDIGEST_MERGE"
  output:
    name: "TDIGEST_MERGE"
    signatures:
     - "(STRING) -> ANY"
     - "(FLOAT) -> ANY"
     - "(DOUBLE) -> ANY"
     - "(INT) -> ANY"
     - "(BIGINT) -> ANY"
 -
  description: "TIMEOFDAY"
  input: "TIMEOFDAY"
  output:
    name: "TIMEOFDAY"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "TIMESTAMPADD"
  input: "TIMESTAMPADD"
  output:
    description: "Add (or subtract) an interval of time from a date/timestamp value or column"
    name: "TIMESTAMPADD"
    signatures: []
 -
  description: "TIMESTAMPADDDAY"
  input: "TIMESTAMPADDDAY"
  output:
    name: "TIMESTAMPADDDAY"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDHOUR"
  input: "TIMESTAMPADDHOUR"
  output:
    name: "TIMESTAMPADDHOUR"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDMICROSECOND"
  input: "TIMESTAMPADDMICROSECOND"
  output:
    name: "TIMESTAMPADDMICROSECOND"
    signatures:
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDMINUTE"
  input: "TIMESTAMPADDMINUTE"
  output:
    name: "TIMESTAMPADDMINUTE"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDMONTH"
  input: "TIMESTAMPADDMONTH"
  output:
    name: "TIMESTAMPADDMONTH"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDQUARTER"
  input: "TIMESTAMPADDQUARTER"
  output:
    name: "TIMESTAMPADDQUARTER"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDSECOND"
  input: "TIMESTAMPADDSECOND"
  output:
    name: "TIMESTAMPADDSECOND"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDWEEK"
  input: "TIMESTAMPADDWEEK"
  output:
    name: "TIMESTAMPADDWEEK"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPADDYEAR"
  input: "TIMESTAMPADDYEAR"
  output:
    name: "TIMESTAMPADDYEAR"
    signatures:
     - "(INT, DATE) -> DATE"
     - "(INT, TIMESTAMP) -> TIMESTAMP"
     - "(BIGINT, DATE) -> DATE"
     - "(BIGINT, TIMESTAMP) -> TIMESTAMP"
     - "(DATE, INT) -> DATE"
     - "(DATE, BIGINT) -> DATE"
     - "(TIMESTAMP, INT) -> TIMESTAMP"
     - "(TIMESTAMP, BIGINT) -> TIMESTAMP"
 -
  description: "TIMESTAMPDIFF"
  input: "TIMESTAMPDIFF"
  output:
    description: "Return the amount of time between two date or timestamp values"
    name: "TIMESTAMPDIFF"
    signatures:
     - "(ANY, DATEANDTIME, DATEANDTIME) -> INT"
 -
  description: "TIMESTAMPDIFFDAY"
  input: "TIMESTAMPDIFFDAY"
  output:
    name: "TIMESTAMPDIFFDAY"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFHOUR"
  input: "TIMESTAMPDIFFHOUR"
  output:
    name: "TIMESTAMPDIFFHOUR"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFMICROSECOND"
  input: "TIMESTAMPDIFFMICROSECOND"
  output:
    name: "TIMESTAMPDIFFMICROSECOND"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFMINUTE"
  input: "TIMESTAMPDIFFMINUTE"
  output:
    name: "TIMESTAMPDIFFMINUTE"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFMONTH"
  input: "TIMESTAMPDIFFMONTH"
  output:
    name: "TIMESTAMPDIFFMONTH"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFQUARTER"
  input: "TIMESTAMPDIFFQUARTER"
  output:
    name: "TIMESTAMPDIFFQUARTER"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFSECOND"
  input: "TIMESTAMPDIFFSECOND"
  output:
    name: "TIMESTAMPDIFFSECOND"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFWEEK"
  input: "TIMESTAMPDIFFWEEK"
  output:
    name: "TIMESTAMPDIFFWEEK"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPDIFFYEAR"
  input: "TIMESTAMPDIFFYEAR"
  output:
    name: "TIMESTAMPDIFFYEAR"
    signatures:
     - "(TIMESTAMP, TIMESTAMP) -> INT"
 -
  description: "TIMESTAMPTYPE"
  input: "TIMESTAMPTYPE"
  output:
    name: "TIMESTAMPTYPE"
    signatures:
     - "(STRING) -> TIMESTAMP"
     - "(BIGINT, BIGINT, BIGINT, BIGINT, BIGINT, BIGINT, BIGINT) -> TIMESTAMP"
 -
  description: "TIMETYPE"
  input: "TIMETYPE"
  output:
    name: "TIMETYPE"
    signatures:
     - "(STRING) -> TIME"
     - "(BIGINT, BIGINT, BIGINT, BIGINT) -> TIME"
 -
  description: "TOASCII"
  input: "TOASCII"
  output:
    name: "TOASCII"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> CHARACTERS"
 -
  description: "TO_CHAR"
  input: "TO_CHAR"
  output:
    description: "Converts the input expression to a character/string using the specified format."
    name: "TO_CHAR"
    signatures:
     - "(DATEANDTIME, CHARACTERS) -> CHARACTERS"
     - "(FLOAT, CHARACTERS) -> CHARACTERS"
     - "(DOUBLE, CHARACTERS) -> CHARACTERS"
     - "(INT, CHARACTERS) -> CHARACTERS"
     - "(BIGINT, CHARACTERS) -> CHARACTERS"
 -
  description: "TO_DATE"
  input: "TO_DATE"
  output:
    name: "TO_DATE"
    signatures:
     - "(FLOAT) -> DATE"
     - "(DOUBLE) -> DATE"
     - "(INT) -> DATE"
     - "(BIGINT) -> DATE"
     - "(TIMESTAMP) -> DATE"
     - "(CHARACTERS, CHARACTERS, INT?) -> DATE"
 -
  description: "TO_HEX"
  input: "TO_HEX"
  output:
    description: "Returns a hexadecimal string for the given binary value."
    name: "TO_HEX"
    signatures:
     - "(STRING) -> CHARACTERS"
     - "(INT) -> CHARACTERS"
     - "(BIGINT) -> CHARACTERS"
 -
  description: "TO_NUMBER"
  input: "TO_NUMBER"
  output:
    description: "Converts a string into a number (double) in the specified format."
    name: "TO_NUMBER"
    signatures:
     - "(CHARACTERS, CHARACTERS) -> DOUBLE"
 -
  description: "TO_TIME"
  input: "TO_TIME"
  output:
    name: "TO_TIME"
    signatures:
     - "(FLOAT) -> TIME"
     - "(DOUBLE) -> TIME"
     - "(INT) -> TIME"
     - "(BIGINT) -> TIME"
     - "(CHARACTERS, CHARACTERS, INT?) -> TIME"
 -
  description: "TO_TIMESTAMP"
  input: "TO_TIMESTAMP"
  output:
    description: "Converts the input expressions to the corresponding timestamp."
    name: "TO_TIMESTAMP"
    signatures:
     - "(FLOAT) -> TIMESTAMP"
     - "(DOUBLE) -> TIMESTAMP"
     - "(INT) -> TIMESTAMP"
     - "(BIGINT) -> TIMESTAMP"
     - "(CHARACTERS, CHARACTERS, INT?) -> TIMESTAMP"
 -
  description: "TRANSACTION_TIMESTAMP"
  input: "TRANSACTION_TIMESTAMP"
  output:
    description: "Returns the timestamp in UTC of the current transaction."
    name: "TRANSACTION_TIMESTAMP"
    signatures:
     - "() -> TIMESTAMP"
 -
  description: "TRANSLATE"
  input: "TRANSLATE"
  output:
    description: "Translates the base expression from the source characters/expression to the target characters/expression."
    name: "TRANSLATE"
    signatures: []
 -
  description: "TRANSLATE3"
  input: "TRANSLATE3"
  output:
    name: "TRANSLATE3"
    signatures:
     - "(BYTES, STRING, STRING) -> BYTES"
     - "(CHARACTERS, STRING, STRING) -> CHARACTERS"
 -
  description: "TRIM"
  input: "TRIM"
  output:
    description: "Removes leading, trailing, or both spaces or characters from a string"
    name: "TRIM"
    signatures: []
 -
  description: "TRUNC"
  input: "TRUNC"
  output:
    name: "TRUNC"
    signatures:
     - "(FLOAT, INT?) -> FLOAT"
     - "(DECIMAL, INT?) -> DECIMAL"
     - "(DOUBLE, INT?) -> DOUBLE"
     - "(INT, INT?) -> INT"
     - "(BIGINT, INT?) -> BIGINT"
 -
  description: "TRUNCATE"
  input: "TRUNCATE"
  output:
    description: "Rounds the input expression down the nearest of equal integer depending on the specified number of places before or after the decimal point."
    name: "TRUNCATE"
    signatures:
     - "(FLOAT, INT?) -> FLOAT"
     - "(FLOAT, BIGINT?) -> FLOAT"
     - "(DECIMAL, INT?) -> DECIMAL"
     - "(DECIMAL, BIGINT?) -> DECIMAL"
     - "(DOUBLE, INT?) -> DOUBLE"
     - "(DOUBLE, BIGINT?) -> DOUBLE"
     - "(INT, INT?) -> INT"
     - "(INT, BIGINT?) -> INT"
     - "(BIGINT, INT?) -> BIGINT"
     - "(BIGINT, BIGINT?) -> BIGINT"
 -
  description: "TUMBLE"
  input: "TUMBLE"
  output:
    name: "TUMBLE"
    signatures: []
 -
  description: "TUMBLE_END"
  input: "TUMBLE_END"
  output:
    name: "TUMBLE_END"
    signatures: []
 -
  description: "TUMBLE_START"
  input: "TUMBLE_START"
  output:
    name: "TUMBLE_START"
    signatures: []
 -
  description: "TYPEOF"
  input: "TYPEOF"
  output:
    description: "Reports the type (in string format) of the input expression."
    name: "TYPEOF"
    signatures:
     - "(ANY) -> CHARACTERS"
 -
  description: "U-"
  input: "U-"
  output:
    name: "U-"
    signatures:
     - "(FLOAT) -> FLOAT"
     - "(DECIMAL) -> DECIMAL"
     - "(DOUBLE) -> DOUBLE"
     - "(BIGINT) -> BIGINT"
 -
  description: "UNBASE64"
  input: "UNBASE64"
  output:
    name: "UNBASE64"
    signatures:
     - "(CHARACTERS) -> BYTES"
 -
  description: "UNHEX"
  input: "UNHEX"
  output:
    name: "UNHEX"
    signatures:
     - "(CHARACTERS) -> BYTES"
 -
  description: "UNIX_TIMESTAMP"
  input: "UNIX_TIMESTAMP"
  output:
    description: "Returns the Unix timestamp for the timestamp parameter."
    name: "UNIX_TIMESTAMP"
    signatures:
     - "() -> BIGINT"
     - "(CHARACTERS, CHARACTERS?) -> BIGINT"
 -
  description: "UPPER"
  input: "UPPER"
  output:
    description: "Returns the input expression with all the characters converted to uppercase."
    name: "UPPER"
    signatures:
     - "(CHARACTERS) -> CHARACTERS"
 -
  description: "USER"
  input: "USER"
  output:
    description: "Returns the user that is currently logged into the system."
    name: "USER"
    signatures:
     - "() -> CHARACTERS"
 -
  description: "VARCHAR"
  input: "VARCHAR"
  output:
    name: "VARCHAR"
    signatures:
     - "(BOOLEAN, BIGINT) -> CHARACTERS"
     - "(STRING, BIGINT) -> CHARACTERS"
     - "(FLOAT, BIGINT) -> CHARACTERS"
     - "(DOUBLE, BIGINT) -> CHARACTERS"
     - "(INT, BIGINT) -> CHARACTERS"
     - "(BIGINT, BIGINT) -> CHARACTERS"
     - "(DATE, BIGINT) -> CHARACTERS"
     - "(TIMESTAMP, BIGINT) -> CHARACTERS"
 -
  description: "VARIANCE"
  input: "VARIANCE"
  output:
    name: "VARIANCE"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "VAR_POP"
  input: "VAR_POP"
  output:
    description: "Returns the population variance of non-NULL records."
    name: "VAR_POP"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "VAR_SAMP"
  input: "VAR_SAMP"
  output:
    description: "Returns the sample variance of non-NULL records."
    name: "VAR_SAMP"
    signatures:
     - "(NUMERIC) -> DOUBLE"
 -
  description: "WEEK"
  input: "WEEK"
  output:
    name: "WEEK"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
 -
  description: "WEEKOFYEAR"
  input: "WEEKOFYEAR"
  output:
    name: "WEEKOFYEAR"
    signatures:
     - "(DATE) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> BIGINT"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "XOR"
  input: "XOR"
  output:
    description: "Returns the bitwise XOR of two integers."
    name: "XOR"
    signatures:
     - "(INT, INT) -> INT"
     - "(BIGINT, BIGINT) -> BIGINT"
 -
  description: "YEAR"
  input: "YEAR"
  output:
    name: "YEAR"
    signatures:
     - "(DATEANDTIME) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "YEARWEEK"
  input: "YEARWEEK"
  output:
    name: "YEARWEEK"
    signatures:
     - "(DATE) -> BIGINT"
     - "(DATE) -> DATE"
     - "(TIMESTAMP) -> BIGINT"
     - "(TIMESTAMP) -> TIMESTAMP"
 -
  description: "^"
  input: "^"
  output:
    name: "^"
    signatures:
     - "(INT, INT) -> INT"
 -
  description: "__THROWEXCEPTION"
  input: "__THROWEXCEPTION"
  output:
    name: "__THROWEXCEPTION"
    signatures:
     - "(CHARACTERS) -> BIGINT"
 -
  description: "||"
  input: "||"
  output:
    name: "||"
    signatures:
     - "(BOOLEAN, BOOLEAN) -> BOOLEAN"
