#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
'!=':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "!="
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$HISTOGRAM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$HISTOGRAM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$HISTOGRAM_FIRST_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$HISTOGRAM_FIRST_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$HISTOGRAM_LAST_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$HISTOGRAM_LAST_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$HISTOGRAM_MAX:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$HISTOGRAM_MAX"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$HISTOGRAM_MIN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$HISTOGRAM_MIN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$SUM0:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$SUM0"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
$SUM0_V2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "$SUM0_V2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'&&':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "&&"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
"-":
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "-"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
<:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "<"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
<=:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "<="
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
<>:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "<>"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
=:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "="
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
==:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "=="
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'>':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: ">"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'>=':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: ">="
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ABS:
  description: "Computes the absolute value of a numeric expression.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "ABS"
  signatures:
   -
    description: "Returns a numeric or NULL if the <numeric_expression> is NULL. (Same return type as the input)"
    parameters:
     -
      description: "BINARY, DECIMAL, DOUBLE, NUMERIC, INTEGER"
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT ABS(0.0)"
      result: "0.0"
     -
      call: "SELECT ABS(-2)"
      result: "2"
     -
      call: "SELECT ABS(NULL)"
      result: ""
ACOS:
  description: "Computes the arcccosine (inverse cosine) of a value in radians\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "ACOS"
  signatures:
   -
    description: "Returns a value expressed as a floating point number."
    parameters:
     -
      description: "The angle in radians (between 0 and PI)."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT ACOS(0)"
      result: "1.5707963267948966"
     -
      call: "SELECT ACOS(1.0)"
      result: "0.0"
     -
      call: "SELECT ACOS(-1)"
      result: "3.141592653589793"
ADD:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_DAYS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_DAYS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_HOURS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_HOURS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_MICROSECONDS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_MICROSECONDS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_MINUTES:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_MINUTES"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_MONTHS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_MONTHS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_QUARTERS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_QUARTERS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_SECONDS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_SECONDS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_WEEKS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_WEEKS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ADD_YEARS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ADD_YEARS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
AES_DECRYPT:
  name: "AES_DECRYPT"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
AES_ENCRYPT:
  name: "AES_ENCRYPT"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
ALTERNATE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ALTERNATE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ALTERNATE3:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ALTERNATE3"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
AND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "AND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
APPROX_COUNT_DISTINCT:
  description: "Returns the approximate number of rows that contain distinct values in a column. Ignores rows that contain a null value for the column."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "APPROX_COUNT_DISTINCT"
  signatures:
   -
    description: "Returns an NUMERIC"
    parameters:
     -
      description: "The column can contain values of any data type."
      kind: "REGULAR"
      name: "column_name"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "SELECT APPROX_COUNT_DISTINCT(business_id) AS \"number_of_businesses\" FROM \"restaurant_reviews.parquet\";"
      result: "62"
ASCII:
  description: "Returns the ASCII code for the first character of a STRING. If the STRING is empty, 0 is returned."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "ASCII"
  signatures:
   -
    description: "Returns the ASCII code/numeric representation of the character."
    parameters:
     -
      description: "The STRING for which the ASCII code for the first character in the STRING is returned."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "INT"
    sampleCodes:
     -
      call: "SELECT ASCII ('DREMIO')"
      result: "68"
     -
      call: "SELECT ASCII ('D')"
      result: "68"
     -
      call: "SELECT ASCII ('')"
      result: "0"
ASIN:
  description: "Computes the arcsine (inverse sine) of a value in radians\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "ASIN"
  signatures:
   -
    description: "Returns a value expressed as a floating point number (Float8)"
    parameters:
     -
      description: "The angle in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT ASIN(0)"
      result: "0.0"
     -
      call: "SELECT ASIN(1)"
      result: "1.5707963267948966"
     -
      call: "SELECT ASIN(-1)"
      result: "-1.5707963267948966"
ASSERT_BIGINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_BIGINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_BIT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_BIT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_DATE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_DATE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_DECIMAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_DECIMAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_FIXEDSIZEBINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_FIXEDSIZEBINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_FLOAT4:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_FLOAT4"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_FLOAT8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_FLOAT8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_INT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_INT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_INTERVALDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_INTERVALDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_INTERVALYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_INTERVALYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_LIST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_LIST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_STRUCT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_STRUCT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_TIME:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_TIME"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_TIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_TIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_VARBINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_VARBINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ASSERT_VARCHAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ASSERT_VARCHAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ATAN:
  description: "Computes the Arctangent (inverse Tangent) of a value \n"
  dremioVersion: "3.1+"
  functionCategories:
   - "MATH"
  name: "ATAN"
  signatures:
   -
    description: "Returns a value in the range of (-1*(pi/2):pi/2), expressed as a NUMERICing point number (Float8)"
    parameters:
     -
      description: "Floating-point input value, in the range (negative-infinity:positive-infinity)"
      kind: "REGULAR"
      name: "inputValue"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT ATAN(0)"
      result: "0.0"
     -
      call: "SELECT ATAN(1)"
      result: "0.7853981633974483"
     -
      call: "SELECT ATAN(-1)"
      result: "-0.7853981633974483"
     -
      call: "SELECT ATAN(19564.7)"
      result: "1.5707452143321894"
ATAN2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ATAN2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
AVG:
  description: "Computes the average of a set of values.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "AVG"
  signatures:
   -
    description: "Returns the average of all the values."
    parameters:
     -
      description: "DOUBLE, NUMERIC, INTEGER, INTERVAL_DATE, INTERVAL_YEAR"
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT AVG(3)"
      result: "3.0"
     -
      call: "SELECT AVG(\"val\")"
      result: "-0.333333"
BASE64:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BASE64"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BIN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BIN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BINARY_STRING:
  description: "Converts the input expression to a BINARY value. \n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
  name: "BINARY_STRING"
  signatures:
   -
    description: "Returns the BINARY value of the input expression"
    parameters:
     -
      description: "The expression to convert to BINARY"
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "SELECT BINARY_STRING('DREMIO')"
      result: "RFJFTUlP"
     -
      call: "SELECT BINARY_STRING('000')"
      result: "MDAw"
BITWISE_AND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BITWISE_AND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BITWISE_NOT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BITWISE_NOT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BITWISE_OR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BITWISE_OR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BITWISE_XOR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BITWISE_XOR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BIT_AND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BIT_AND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BIT_LENGTH:
  description: "Gets length of bits of the input expression \n"
  dremioVersion: "1.0+"
  functionCategories:
   - "BINARY"
  name: "BIT_LENGTH"
  signatures:
   -
    description: "Returns the bit length of the string input expression"
    parameters:
     -
      description: "A BINARY or CHARACTER expression"
      kind: "REGULAR"
      name: "string_expression"
      type: "STRING"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT BIT_LENGTH('DREMIO')"
      result: "48"
     -
      call: "SELECT BIT_LENGTH('abc')"
      result: "24"
     -
      call: "SELECT BIT_LENGTH(1010)"
      result: "32"
BIT_OR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BIT_OR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BOOLEANAND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BOOLEANAND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BOOLEANOR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BOOLEANOR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BOOL_AND:
  description: "Computes the BOOLEAN AND of two BOOLEAN expressions. Returns TRUE if both expressions evaluate to TRUE. Returns FALSE if one or both expression(s) evaluate(s) to FALSE."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
  name: "BOOL_AND"
  signatures:
   -
    description: "Returns the logical AND of two boolean expressions."
    parameters:
     -
      description: "Boolean input expression."
      kind: "REGULAR"
      name: "bool_expression1"
      type: "BOOLEAN"
     -
      description: "Boolean input expression."
      kind: "REGULAR"
      name: "bool_expression2"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT BOOLEANAND(TRUE, FALSE)"
      result: "FALSE"
BOOL_OR:
  description: "Computes the BOOLEAN OR of two BOOLEAN expressions. Returns TRUE if one or both expressions evaluate to TRUE. Returns FALSE if both expressions evaluate to FALSE."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
  name: "BOOL_OR"
  signatures:
   -
    description: "Returns the logical OR of two BOOLEAN expressions."
    parameters:
     -
      description: "Boolean input expression."
      kind: "REGULAR"
      name: "bool_expression1"
      type: "BOOLEAN"
     -
      description: "Boolean input expression."
      kind: "REGULAR"
      name: "bool_expression2"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT BOOLEANOR(TRUE, FALSE)"
      result: "TRUE"
BROUND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BROUND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BTRIM:
  description: "Trims leading and trailing characters from a STRING.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "BTRIM"
  signatures:
   -
    description: "Returns the trimmed text"
    parameters:
     -
      description: "The character string expression to be trimmed"
      kind: "REGULAR"
      name: "expression_to_trim"
      type: "CHARACTERS"
     -
      description: "Leading and trailing characters to trim from the input expression. If this parameter is not specified, then the spaces will be trimmed from the input expression."
      kind: "OPTIONAL"
      name: "trim_text"
      type: "CHARACTERS"
    returnType: "STRING"
    sampleCodes:
     -
      call: "SELECT BTRIM('      dremio ')"
      result: "dremio"
     -
      call: "SELECT BTRIM('~/~/~/dremio~', '~')"
      result: "/~/~/dremio"
     -
      call: "SELECT BTRIM('---dremio-', '-')"
      result: "dremio"
     -
      call: "SELECT BTRIM('STRINGvalue', 'STRING')"
      result: "value"
BYTESUBSTRING:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BYTESUBSTRING"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
BYTE_SUBSTR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "BYTE_SUBSTR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CARDINALITY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CARDINALITY"
  signatures: []
CAST:
  description: "Converts a value of one data type to another data type. This function behaves similarly to the TO_<data_type> (i.e. TO_TIMESTAMP) functions.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
  name: "CAST"
  signatures:
   -
    description: "Returns the input expression as the type specified for the data_type parameter"
    parameters:
     -
      description: "The expression that you want to convert"
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "SELECT CAST(3.14150 AS INTEGER)"
      result: "3"
     -
      call: "SELECT CAST(.167 AS INTEGER)"
      result: "2"
     -
      call: "SELECT CAST('2021-04-03' AS DATE)"
      result: "2021-04-03"
CASTBIGINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTBIGINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTBIT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTBIT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTBOOLEAN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTBOOLEAN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTDATE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTDATE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTDECIMAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTDECIMAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTDECIMALNULLONOVERFLOW:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTDECIMALNULLONOVERFLOW"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTFLOAT4:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTFLOAT4"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTFLOAT8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTFLOAT8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTINTERVALDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTINTERVALDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTINTERVALYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTINTERVALYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTNULLABLEBIGINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTNULLABLEBIGINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTNULLABLEINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTNULLABLEINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTNULLABLEINTERVALDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTNULLABLEINTERVALDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTNULLABLEINTERVALYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTNULLABLEINTERVALYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTTIME:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTTIME"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTTIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTTIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTTOUNION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTTOUNION"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTUNION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTUNION"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTVARBINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTVARBINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CASTVARCHAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CASTVARCHAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CBRT:
  description: "Computes the cube root of a numeric expression\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "CBRT"
  signatures:
   -
    description: "Returns the cubic root of the input expression"
    parameters:
     -
      description: "The number for which you want to compute the cube root."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT CBRT(8)"
      result: "2.0"
     -
      call: "SELECT CBRT(120)"
      result: "4.932424148660941"
     -
      call: "SELECT CBRT(99.5)"
      result: "4.633839922986558"
CEIL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CEIL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CEILING:
  description: "Returns the nearest equal or larger value of the input expression.  Can also be called using CEIL()."
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CEILING"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CHARACTER_LENGTH:
  description: "Returns the character length of the input expression.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CHARACTER_LENGTH"
  signatures:
   -
    description: "Returns the number of characters of the input expression"
    parameters:
     -
      description: "The expression to determine character length for"
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "INT"
    sampleCodes:
     -
      call: "SELECT CHAR_LENGTH('get the char length')"
      result: "19"
     -
      call: "SELECT CHAR_LENGTH('DREMIO')"
      result: "6"
CHARSUBSTRING:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CHARSUBSTRING"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CHAR_LENGTH:
  description: "Returns the character length of the input expression.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CHAR_LENGTH"
  signatures:
   -
    description: "Returns the number of characters of the input expression"
    parameters:
     -
      description: "The expression to determine character length for"
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "INT"
    sampleCodes:
     -
      call: "SELECT CHAR_LENGTH('get the char length')"
      result: "19"
     -
      call: "SELECT CHAR_LENGTH('DREMIO')"
      result: "6"
CHR:
  description: "Converts a Unicode code pointNUMERICo the character that matches the input Unicode character. If an invalid code point is specified, an empty STRING is returned."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CHR"
  signatures:
   -
    description: "Returns the Unicode character."
    parameters:
     -
      description: "Unicode code point to convert to character."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT CHR(72)"
      result: "H"
     -
      call: "SELECT CHR(33)"
      result: ""
CLASSIFIER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CLASSIFIER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COALESCE:
  description: "Evaluates the arguments in order and returns the value of the first expression that does not contain `NULL`."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
  name: "COALESCE"
  signatures:
   -
    description: ""
    parameters:
     -
      description: "A combination of symbols and operators that the database evaluates to obtain a single data value. Expressions can be a single constant, variable, column, or scalar function."
      kind: "VARARG"
      name: "expressions"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "SELECT COALESCE(address1, address2, city, state, zipCode)\nFROM customers\n"
      result: "123 Main Street\n"
COLLECT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COLLECT"
  signatures: []
COMPARETYPE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COMPARETYPE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COMPARE_TO_NULLS_HIGH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COMPARE_TO_NULLS_HIGH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COMPARE_TO_NULLS_LOW:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COMPARE_TO_NULLS_LOW"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONCAT:
  description: "Concatenates two or more strings.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CONCAT"
  signatures:
   -
    description: "Returns the concatenated STRING. If one of the inputs is null, then the concatenation returns null."
    parameters:
     -
      description: "First STRING expression"
      kind: "REGULAR"
      name: "first"
      type: "STRING"
     -
      description: "Second STRING expression"
      kind: "OPTIONAL"
      name: "second"
      type: "STRING"
     -
      description: "Variable amount of string expressions"
      kind: "VARARG"
      name: "varadicStrings"
      type: "STRING"
    returnType: "STRING"
    sampleCodes:
     -
      call: "SELECT CONCAT('CON', 'CAT')"
      result: "CONCAT"
     -
      call: "SELECT CONCAT('con', 'cat', NULL)"
      result: ""
CONCATOPERATOR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONCATOPERATOR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONCAT_WS:
  description: "Concatenate with separator. Returns a string resulting from the joining of two or more string values in an end-to-end manner. Uses the first argument as the separator between each string."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CONCAT_WS"
  signatures:
   -
    description: "Concatenate with separator. Returns a string resulting from the joining of two or more string values in an end-to-end manner. Uses the first argument as the separator between each string."
    parameters:
     -
      description: "The separator to use when concatenating the strings "
      kind: "REGULAR"
      name: "separator"
      type: "CHARACTERS"
     -
      description: "The first string to concatenate."
      kind: "REGULAR"
      name: "first"
      type: "CHARACTERS"
     -
      description: "The second string to concatenate."
      kind: "REGULAR"
      name: "second"
      type: "CHARACTERS"
     -
      description: "A variable number of strings to concatenate."
      kind: "VARARG"
      name: "varadicString"
      type: "CHARACTERS"
    returnType: "STRING"
    sampleCodes:
     -
      call: "SELECT CONCAT_WS('-', 'cat', 'dog', 'bird')\n"
      result: "cat-dog-bird\n"
CONTAINS:
  description: "Returns TRUE if the first expression contains the second expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "CONTAINS"
  signatures:
   -
    description: "Returns TRUE if we can find 'needle' in the 'haystack'."
    parameters:
     -
      description: "The expression to search in."
      kind: "REGULAR"
      name: "haystack"
      type: "STRING"
     -
      description: "The expression to search for."
      kind: "REGULAR"
      name: "needle"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT CONTAINS('dremio sql lakehouse', 'lake')"
      result: "TRUE"
CONVERT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT"
  signatures: []
CONVERT_FROM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMBIGINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMBIGINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMBIGINT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMBIGINT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMBIGINT_HADOOPV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMBIGINT_HADOOPV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMBOOLEAN_BYTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMBOOLEAN_BYTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMDATE_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMDATE_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMDATE_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMDATE_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMDOUBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMDOUBLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMDOUBLE_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMDOUBLE_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMFLOAT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMFLOAT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMFLOAT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMFLOAT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMINT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMINT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMINT_HADOOPV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMINT_HADOOPV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMJSON:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMJSON"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIMESTAMP_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIMESTAMP_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIMESTAMP_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIMESTAMP_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIMESTAMP_IMPALA:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIMESTAMP_IMPALA"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIMESTAMP_IMPALA_LOCALTIMEZONE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIMESTAMP_IMPALA_LOCALTIMEZONE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIME_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIME_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMTIME_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMTIME_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_FROMUTF8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_FROMUTF8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_REPLACEUTF8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_REPLACEUTF8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TIMEZONE:
  description: "Convert TIMESTAMP to the specified timezone\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
   - "CONVERSION"
  name: "CONVERT_TIMEZONE"
  signatures:
   -
    description: "Convert a date/time object (in UTC) to a specified timezone."
    parameters:
     -
      description: "The timezone to convert to."
      kind: "REGULAR"
      name: "destinationTimezone"
      type: "STRING"
     -
      description: "The date, timestamp, or string in ISO 8601 format to convert"
      kind: "REGULAR"
      name: "date"
      type: "DATEANDTIME"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT CONVERT_TIMEZONE('America/Los_Angeles', 'America/New_York', '2021-04-01 15:27:32')"
      result: "2021-04-01 18:27:32.000"
     -
      call: "SELECT CONVERT_TIMEZONE('America/Los_Angeles', 'America/New_York', TIMESTAMP '2021-04-01 15:27:32');"
      result: "2021-04-01 18:27:32.000"
     -
      call: "SELECT CONVERT_TIMEZONE('PST', 'EST', '2021-04-01 15:27:32')"
      result: "2021-04-01 18:27:32.000"
     -
      call: "SELECT CONVERT_TIMEZONE('America/Los_Angeles', 'America/New_York', '2021-04-01')"
      result: "2021-04-01 03:00:00.000"
     -
      call: "SELECT CONVERT_TIMEZONE('America/Los_Angeles', 'America/New_York', DATE '2021-04-01')"
      result: "2021-04-01 03:00:00.000"
     -
      call: "SELECT CONVERT_TIMEZONE('EDT', '2021-04-01 15:27:32')"
      result: "2021-04-01 11:27:32.000"
     -
      call: "SELECT CONVERT_TIMEZONE('PST', '+02:00', '2021-04-01 15:27:32')"
      result: "2021-04-02 01:27:32.000"
CONVERT_TO:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TO"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOBIGINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOBIGINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOBIGINT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOBIGINT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOBIGINT_HADOOPV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOBIGINT_HADOOPV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOBOOLEAN_BYTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOBOOLEAN_BYTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TODATE_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TODATE_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TODATE_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TODATE_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TODOUBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TODOUBLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TODOUBLE_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TODOUBLE_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOEXTENDEDJSON:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOEXTENDEDJSON"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOFLOAT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOFLOAT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOFLOAT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOFLOAT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOINT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOINT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOINT_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOINT_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOINT_HADOOPV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOINT_HADOOPV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOJSON:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOJSON"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOSIMPLEJSON:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOSIMPLEJSON"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOTIMESTAMP_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOTIMESTAMP_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOTIMESTAMP_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOTIMESTAMP_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOTIME_EPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOTIME_EPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOTIME_EPOCH_BE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOTIME_EPOCH_BE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CONVERT_TOUTF8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CONVERT_TOUTF8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CORR:
  description: "Calculates the covariance of the values expression1 and expression2. The function name must be enclosed in NUMERIC quotes (\\\"CORR\\\"). \n"
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "CORR"
  signatures:
   -
    description: "Returns"
    parameters:
     -
      description: "The first expression."
      kind: "REGULAR"
      name: "expression1"
      type: "NUMERIC"
     -
      description: "The second expression."
      kind: "REGULAR"
      name: "expression2"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT weight_class, CORR(list_price, min_price)\n   FROM product_information\n   GROUP BY weight_class\n"
      result: "WEIGHT_CLASS CORR(LIST_PRICE,MIN_PRICE) ------------ --------------------------\n           1                  .99914795\n           2                 .999022941\n           3                 .998484472\n           4                 .999359909\n           5                 .999536087\n"
CORRELATION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CORRELATION"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COS:
  description: "Computes the cosine of a value in radians\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "COS"
  signatures:
   -
    description: "Returns a value expressed as a floating point number (Float8)"
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT COS(0)"
      result: "1.0"
     -
      call: "SELECT COS(1.0)"
      result: "0.5403023058681398"
     -
      call: "SELECT COS(-1)"
      result: "0.5403023058681398"
COSH:
  description: "Computes the hyperbolic cosine of a value in radians.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "COSH"
  signatures:
   -
    description: "Returns a value expressed as a floating point number."
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT COSH(0)"
      result: "1.0"
     -
      call: "SELECT COSH(1.0)"
      result: "1.543080634815244"
     -
      call: "SELECT COSH(-1)"
      result: "1.543080634815244"
COT:
  description: "Computes the cotangent of a value in radians.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "COT"
  signatures:
   -
    description: "Returns a value expressed as a floating point number (Float8)"
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT COS(0)"
      result: "1.0"
     -
      call: "SELECT COS(1.0)"
      result: "0.5403023058681398"
     -
      call: "SELECT COS(-1)"
      result: "0.5403023058681398"
COUNT:
  description: "Returns the total number of records for the specified expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "COUNT"
  signatures:
   -
    description: "Returns the total number of records in the dataset."
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "SELECT COUNT(*) FROM EMP"
      result: "93456745"
    snippetOverride: "COUNT(*)"
   -
    description: "Returns the total number of records for the specified expression."
    parameters:
     -
      description: "Expression to evaluate number of records for."
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "SELECT COUNT(column_name) FROM my_table"
      result: "89"
    snippetOverride: "COUNT(${1|ALL,DISTINCT|} ${2:value})"
COVARIANCE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COVARIANCE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COVAR_POP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COVAR_POP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
COVAR_SAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "COVAR_SAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CRC32:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CRC32"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CUME_DIST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CUME_DIST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_CATALOG:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_CATALOG"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_DATE:
  description: "Returns the current DATE of the system."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
   - "CONTEXT"
  name: "CURRENT_DATE"
  signatures:
   -
    description: "Returns the current DATE of the system."
    parameters: []
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT CURRENT_DATE()"
      result: "2021-07-02"
     -
      call: "SELECT CURRENT_DATE"
      result: "2021-07-02"
CURRENT_DATE_UTC:
  description: "Returns the current DATE of the system based on the UTC TIMEzone."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
   - "DATETIME"
  name: "CURRENT_DATE_UTC"
  signatures:
   -
    description: "Returns the current DATE of the system based on the UTC TIMEzone."
    parameters: []
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT CURRENT_DATE_UTC()"
      result: "2021-07-02"
     -
      call: "SELECT CURRENT_DATE_UTC"
      result: "2021-07-02"
CURRENT_PATH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_PATH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_ROLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_ROLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_SCHEMA:
  description: "Returns the path/schema in use by the current session."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "CURRENT_SCHEMA"
  signatures:
   -
    description: "Returns the path/schema in use by the current session."
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT CURRENT_SCHEMA"
      result: "Samples.\"samples.dremio.com\""
CURRENT_TIME:
  description: "Returns the current TIME for the system.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
   - "DATETIME"
  name: "CURRENT_TIME"
  signatures:
   -
    description: "Returns the current TIME for the system."
    parameters: []
    returnType: "TIME"
    sampleCodes:
     -
      call: "SELECT CURRENT_TIME()"
      result: "06:04:31"
     -
      call: "SELECT CURRENT_TIME"
      result: "06:04:31"
CURRENT_TIMESTAMP:
  description: "Returns the current TIMESTAMP for the system.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
   - "DATETIME"
  name: "CURRENT_TIMESTAMP"
  signatures:
   -
    description: "Returns the current DATE for the system."
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT CURRENT_TIMESTAMP()"
      result: "2021-06-24 06:11:51.567"
     -
      call: "SELECT CURRENT_TIMESTAMP"
      result: "2021-06-24 06:11:51.567"
CURRENT_TIMESTAMP_UTC:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_TIMESTAMP_UTC"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_TIME_UTC:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_TIME_UTC"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
CURRENT_USER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "CURRENT_USER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATEDIFF:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATEDIFF"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATETYPE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATETYPE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_ADD:
  description: "Add (or subract) days from a DATE/TIMESTAMP value or column\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
  name: "DATE_ADD"
  signatures:
   -
    description: "Add or subtract whole days to a DATE value encoded as a STRING"
    parameters:
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "givenDate"
      type: "STRING"
     -
      description: "Integer number of days to be added (or subtracted) from the givenDate.  To subtract days, pass a negative number."
      kind: "REGULAR"
      name: "nrDays"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_add('2021-04-01', 2)"
      result: "2021-04-03"
     -
      call: "SELECT DATE_add('2021-04-01', 2)"
      result: "2021-04-03"
   -
    description: "Add or subtract whole days to a DATE value"
    parameters:
     -
      description: "Date value to which to add days (either a database column in DATE format, or literal value explicitly converted to DATE)"
      kind: "REGULAR"
      name: "givenDate"
      type: "DATE"
     -
      description: "Integer number of days to be added (or subtracted) from the givenDate.  To subtract days, pass a negative number."
      kind: "REGULAR"
      name: "nrDays"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_add(to_DATE('2021-04-01'), 2)"
      result: "2021-04-03"
   -
    description: "Add or subtract days (whole or fractional) to TIMESTAMP value encoded as a STRING"
    parameters:
     -
      description: "String-formatted TIMESTAMP, of the form 'YYYY-MM-DD HH24:MI:SS'"
      kind: "REGULAR"
      name: "givenTimestamp"
      type: "STRING"
     -
      description: "Floating point (fractional) number of days to be added (or subtracted) from the givenDate.  To subtract days, pass a negative number."
      kind: "REGULAR"
      name: "nrDays"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT DATE_add('2021-04-01 01:00:00.000', 2.5)"
      result: "2021-04-03 13:00:00.000"
   -
    description: "Add or subtract days (whole or fractional) to TIMESTAMP value"
    parameters:
     -
      description: "Date value to which to add days (either a database column in DATE format, or literal value explicitly converted to DATE)"
      kind: "REGULAR"
      name: "givenTimestamp"
      type: "TIMESTAMP"
     -
      description: "Floating point (fractional) number of days to be added (or subtracted) from the givenDate.  To subtract days, pass a negative number."
      kind: "REGULAR"
      name: "nrDays"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT DATE_add(to_TIMESTAMP('2021-04-01 01:00:00.000'), 2.5)"
      result: "2021-04-03 13:00:00.000"
   -
    description: "Add or subtract anNUMERICerval to/from a DATE value encoded as a STRING"
    parameters:
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "givenDate"
      type: "STRING"
     -
      description: "Single-quoted STRING representing a TIMENUMERICerval.  Expressed as a number, followed by one of the following STRINGs - 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_add('2021-04-01', '2 days')"
      result: "2021-04-03"
   -
    description: "Add or subtract anNUMERICerval to/from a DATE value encoded as a DATE"
    parameters:
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "givenDate"
      type: "DATE"
     -
      description: "Single-quoted STRING representing a TIMENUMERICerval.  Expressed as a number, followed by one of the following STRINGs - 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_add(to_DATE('2021-04-01'), '2 days')"
      result: "2021-04-03"
   -
    description: "Add or subtract anNUMERICerval to/from a TIMESTAMP value encoded as a STRING"
    parameters:
     -
      description: "String-formatted TIMESTAMP, of the form 'YYYY-MM-DD HH24:MI:SS'"
      kind: "REGULAR"
      name: "givenTimestamp"
      type: "STRING"
     -
      description: "Single-quoted STRING representing a TIMENUMERICerval.  Expressed as a number, followed by one of the following STRINGs - 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT DATE_add('2021-04-01 00:00:00', '2 days')"
      result: "2021-04-03 00:00:00"
   -
    description: "Add or subtract anNUMERICerval to/from a TIMESTAMP value encoded as a TIMESTAMP"
    parameters:
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "givenTimetamp"
      type: "TIMESTAMP"
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT DATE_add(to_TIMESTAMP('2021-04-01 00:00:00', '2 days')"
      result: "2021-04-03 00:00:00.000"
   -
    description: "Add or subtract anNUMERICerval to/from a TIME value encoded as a STRING"
    parameters:
     -
      description: "String-formatted TIME, of the form 'HH24:MI:SS'"
      kind: "REGULAR"
      name: "givenTime"
      type: "STRING"
     -
      description: "Single-quoted STRING representing a TIMENUMERICerval.  Expressed as a number, followed by one of the following STRINGs - 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "TIME"
    sampleCodes:
     -
      call: "SELECT DATE_add('00:00:00', '2 minutes')"
      result: "00:02:00"
   -
    description: "Add or subtract anNUMERICerval to/from a TIME value encoded as a TIME"
    parameters:
     -
      description: "String-formatted DATE, of the form 'YYYY-MM-DD'"
      kind: "REGULAR"
      name: "givenTime"
      type: "TIME"
     -
      description: "Single-quoted STRING representing a TIMENUMERICerval.  Expressed as a number, followed by one of the following STRINGs - 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second'"
      kind: "REGULAR"
      name: "TIMEInterval"
      type: "STRING"
    returnType: "TIME"
    sampleCodes:
     -
      call: "SELECT DATE_add(to_TIME('00:00:00'), '2 minutes')"
      result: "00:02:00"
DATE_DIFF:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_DIFF"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_PART:
  description: "Return subfields such as year or hour from date or timestamp values."
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_PART"
  signatures: []
DATE_SUB:
  description: "Subtracts the number of days from the specified DATE or TIMESTAMP.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
  name: "DATE_SUB"
  signatures:
   -
    description: "Returns the calculated DATE value."
    parameters:
     -
      description: "The DATE or TIMESTAMP to subtract days from. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "TIMESTAMP"
     -
      description: "Number of days to subtract from DATE_expression"
      kind: "REGULAR"
      name: "days"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_SUB('2021-06-05', 5)"
      result: "2021-05-31"
     -
      call: "SELECT DATE_SUB('2021-06-24 06:11:51.567', 4)"
      result: "2021-06-20"
     -
      call: "SELECT DATE_SUB('2021-05-28', 10)"
      result: "2021-05-18"
   -
    description: "Returns the calculated DATE value."
    parameters:
     -
      description: "The DATE or TIMESTAMP to subtract days from. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "DATE"
     -
      description: "Number of days to subtract from DATE_expression"
      kind: "REGULAR"
      name: "days"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "SELECT DATE_SUB('2021-06-05', 5)"
      result: "2021-05-31"
     -
      call: "SELECT DATE_SUB('2021-06-24 06:11:51.567', 4)"
      result: "2021-06-20"
     -
      call: "SELECT DATE_SUB('2021-05-28', 10)"
      result: "2021-05-18"
DATE_TRUNC:
  description: "Truncates the DATE or TIMESTAMP to the indicated precision.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
  name: "DATE_TRUNC"
  signatures:
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "STRING"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BOOLEAN"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BYTES"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BYTES"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BYTES"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BYTES"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "STRING"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The TIME unit that the DATE or TIMESTAMP needs to be truncated at. This must be the literal value of 'YEAR', 'MONTH', 'DAY', 'HOUR', 'MINUTE', or 'SECOND'."
      kind: "REGULAR"
      name: "TIME_unit"
      type: "NUMERIC"
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
   -
    description: "Returns the truncated DATE. Will return a TIMESTAMP if the DATE_TIMESTAMP_expression is cast as a TIMESTAMP."
    parameters:
     -
      description: "The DATE or TIMESTAMP to truncate. This value must be a literal in the DATE or TIMESTAMP format."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes: []
DATE_TRUNC_CENTURY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_CENTURY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_DAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_DAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_DECADE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_DECADE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_HOUR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_HOUR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_MILLENNIUM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_MILLENNIUM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_MINUTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_MINUTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_MONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_MONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_QUARTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_QUARTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_SECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_SECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_WEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_WEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DATE_TRUNC_YEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DATE_TRUNC_YEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DAYOFMONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DAYOFMONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DAYOFWEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DAYOFWEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DAYOFYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DAYOFYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DEGREES:
  description: "Converts radians to degrees.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "DEGREES"
  signatures:
   -
    description: "Returns the value in degrees."
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT DEGREES(PI())"
      result: "180.0"
     -
      call: "SELECT DEGREES(0)"
      result: "0.0"
     -
      call: "SELECT DEGREES(1)"
      result: "57.29577951308232"
DENSE_RANK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DENSE_RANK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DIV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DIV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
DIVIDE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "DIVIDE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
E:
  description: "Returns Euler's number, a constant approximately equal to 2.718281828459045.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "E"
  signatures:
   -
    description: "Returns e = 2.718281828459045."
    parameters: []
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT E()"
      result: "2.718281828459045"
ELEMENT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ELEMENT"
  signatures: []
ELT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ELT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ENDS_WITH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ENDS_WITH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EQ:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EQ"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EQUAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EQUAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EVERY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EVERY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXP:
  description: "Calculates Euler's number, e, raised to the power of the specified value.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "EXP"
  signatures:
   -
    description: "Returns the value in degrees."
    parameters:
     -
      description: "The exponent value to raise e to."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT EXP(1)"
      result: "2.718281828459045"
     -
      call: "SELECT EXP(10.0)"
      result: "22026.465794806718"
EXTRACT:
  description: "Extracts the specified date or time part from the date or timestamp."
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACT"
  signatures: []
EXTRACTCENTURY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTCENTURY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTDECADE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTDECADE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTDOW:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTDOW"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTDOY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTDOY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTEPOCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTEPOCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTHOUR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTHOUR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTMILLENNIUM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTMILLENNIUM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTMINUTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTMINUTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTMONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTMONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTQUARTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTQUARTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTSECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTSECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTWEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTWEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
EXTRACTYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "EXTRACTYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FACTORIAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FACTORIAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FIRST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FIRST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FIRST_MATCHING_MAP_ENTRY_FOR_KEY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FIRST_MATCHING_MAP_ENTRY_FOR_KEY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FIRST_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FIRST_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FLATTEN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FLATTEN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FLOOR:
  description: "Returns the value from the specified expression rounded to the nearest equal or smaller number.\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "FLOOR"
  signatures:
   -
    description: "Returns the value from the specified expression rounded to the nearest equal or smaller number."
    parameters:
     -
      description: "The number for which you want to compute the floor of."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "SELECT FLOOR(0)"
      result: "0"
     -
      call: "SELECT FLOOR(45.76)"
      result: "45"
     -
      call: "SELECT FLOOR(-1.3)"
      result: "-2"
FROM_HEX:
  description: "Returns a BINARY value for the given hexadecimal STRING"
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
   - "CHARACTER"
   - "BINARY"
  name: "FROM_HEX"
  signatures:
   -
    description: "Returns a BINARY value for the given hexadecimal STRING."
    parameters:
     -
      description: "A hexadecimal string"
      kind: "REGULAR"
      name: "input"
      type: "CHARACTERS"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "select from_hex('3fd98a3c')"
      result: "P9mKPA=="
FROM_UTC_TIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FROM_UTC_TIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
FUSION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "FUSION"
  signatures: []
GEO_BEYOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GEO_BEYOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GEO_DISTANCE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GEO_DISTANCE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GEO_NEARBY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GEO_NEARBY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GREATER_THAN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GREATER_THAN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GREATER_THAN_OR_EQUAL_TO:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GREATER_THAN_OR_EQUAL_TO"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GREATEST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GREATEST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GROUPING:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GROUPING"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GROUPING_ID:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GROUPING_ID"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
GROUP_ID:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "GROUP_ID"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASH32:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASH32"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASH32ASDOUBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASH32ASDOUBLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASH64:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASH64"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASH64ASDOUBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASH64ASDOUBLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASHMD5:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASHMD5"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASHSHA1:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASHSHA1"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASHSHA256:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASHSHA256"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HASHSHA512:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HASHSHA512"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HEX:
  name: "HEX"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "STRING"
    returnType: "CHARACTERS"
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "INT"
    returnType: "CHARACTERS"
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "BIGINT"
    returnType: "CHARACTERS"
HLL:
  description: "Uses HyperLogLog to return an approximation of the distinct cardinality of the input."
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HLL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HLL_DECODE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HLL_DECODE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HLL_MERGE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HLL_MERGE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HLL_V2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HLL_V2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
HOP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HOP"
  signatures: []
HOP_END:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HOP_END"
  signatures: []
HOP_START:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HOP_START"
  signatures: []
HOUR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "HOUR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ICEBERGDISTRIBUTEBYPARTITION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ICEBERGDISTRIBUTEBYPARTITION"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ILIKE:
  description: "Determines if a string matches a pattern similar to the LIKE function. Unlike the LIKE function, the matching is case insensitive."
  dremioVersion: "1.0+"
  functionCategories:
   - "BINARY"
   - "CHARACTER"
  name: "ILIKE"
  signatures:
   -
    description: "Returns true if the subject matches the pattern with the optional escape. False otherwise."
    parameters:
     -
      description: "The subject to match."
      kind: "REGULAR"
      name: "subject"
      type: "CHARACTERS"
     -
      description: "The pattern to match."
      kind: "REGULAR"
      name: "pattern"
      type: "CHARACTERS"
     -
      description: "Character(s) inserted in front of a wildcard character to indicate that the wildcard should be interpreted as a regular character and not as a wildcard."
      kind: "OPTIONAL"
      name: "escape"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT ILIKE('Dremio', 'dremio')"
      result: "true"
     -
      call: "SELECT ILIKE('dremio', 'warehouse')"
      result: "false"
IMAXDIR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IMAXDIR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IMINDIR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IMINDIR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
INITCAP:
  description: "Returns the input STRING with the first letter of each word in uppercase and the subsequent letters in the word are in lowercase)."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "INITCAP"
  signatures:
   -
    description: "The STRING with the first letter of each word in the STRING uppercase and the subsequent letters in the word in lowercase."
    parameters:
     -
      description: "Input STRING."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT INITCAP('a guide to data lakehouses')"
      result: "A Guide To Data Lakehouses"
     -
      call: "SELECT INITCAP('a guide to data lakeHouses')"
      result: "A Guide To Data Lakehouses"
INSTR:
  name: "INSTR"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "INT"
INTERVAL_DAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "INTERVAL_DAY"
  signatures: []
INTERVAL_YEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "INTERVAL_YEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IN_FENNEL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IN_FENNEL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS DISTINCT FROM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS DISTINCT FROM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS FALSE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS FALSE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS NOT DISTINCT FROM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS NOT DISTINCT FROM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS NOT FALSE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS NOT FALSE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS NOT NULL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS NOT NULL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS NOT TRUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS NOT TRUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS NULL:
  description: "Determines if an expression is NULL. Returns true if <expression> is NULL, and false otherwise.  Alias for the operator IS NULL."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
   - "BOOLEAN"
  name: "IS NULL"
  signatures:
   -
    description: "Returns true if <expression> is NULL, and false otherwise."
    parameters:
     -
      description: "Expression of any type to evaluate."
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "select ISNULL('dremio')"
      result: "false"
     -
      call: "select 'dremio' IS NULL"
      result: "false"
IS TRUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS TRUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISDATE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ISDATE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISFALSE:
  description: "Returns TRUE if the input expression is FALSE."
  dremioVersion: "1.0+"
  functionCategories:
   - "BOOLEAN"
  name: "ISFALSE"
  signatures:
   -
    description: "Returns TRUE if the input expression is FALSE."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT FALSE(column_name)"
      result: "TRUE"
ISNOTFALSE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ISNOTFALSE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISNOTNULL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ISNOTNULL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISNOTTRUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ISNOTTRUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISNULL:
  description: "Determines if an expression is NULL. Returns true if <expression> is NULL, and false otherwise.  Alias for the operator IS NULL."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
   - "BOOLEAN"
  name: "ISNULL"
  signatures:
   -
    description: "Returns true if <expression> is NULL, and false otherwise."
    parameters:
     -
      description: "Expression of any type to evaluate."
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "select ISNULL('dremio')"
      result: "false"
     -
      call: "select 'dremio' IS NULL"
      result: "false"
ISNUMERIC:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ISNUMERIC"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ISTRUE:
  description: "Returns TRUE if the input expression evaluates to TRUE."
  dremioVersion: "1.0+"
  functionCategories:
   - "BOOLEAN"
  name: "ISTRUE"
  signatures:
   -
    description: "Returns TRUE if the input expression evaluates to TRUE."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT ISTRUE(1)"
      result: "TRUE"
   -
    description: "Returns TRUE if the input expression evaluates to TRUE."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT ISTRUE(FALSE)"
      result: "FALSE"
   -
    description: "Returns TRUE if the input expression evaluates to TRUE."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT ISTRUE(0)"
      result: "FALSE"
IS_BIGINT:
  description: "Returns TRUE if the input expression is an big NUMERIC value."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETYPE"
  name: "IS_BIGINT"
  signatures:
   -
    description: "Returns TRUE if the input expression is an big NUMERIC."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT IS_BIGINT(column_name)"
      result: "TRUE"
IS_BIT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_BIT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_DATE:
  description: "Returns TRUE if the input expression can be cast to a DATE."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETYPE"
  name: "IS_DATE"
  signatures:
   -
    description: "Returns TRUE if the input expression can be cast to a DATE."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "input"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT IS_DATE('2021-04-22')"
      result: "TRUE"
IS_DECIMAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_DECIMAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_DISTINCT_FROM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_DISTINCT_FROM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_FIXEDSIZEBINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_FIXEDSIZEBINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_FLOAT4:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_FLOAT4"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_FLOAT8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_FLOAT8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_INT:
  description: "Returns TRUE if the input expression is an NUMERIC value."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETYPE"
  name: "IS_INT"
  signatures:
   -
    description: "Returns TRUE if the input expression is an NUMERIC."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT IS_INT(column_name)"
      result: "TRUE"
IS_INTERVALDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_INTERVALDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_INTERVALYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_INTERVALYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_LIST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_LIST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_NOT_DISTINCT_FROM:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_NOT_DISTINCT_FROM"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_STRUCT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_STRUCT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_SUBSTR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_SUBSTR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_TIME:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_TIME"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_TIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_TIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_UTF8:
  description: "Returns whether an expression is valid UTF-8"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "IS_UTF8"
  signatures:
   -
    description: "Returns whether an expression is valid UTF-8"
    parameters:
     -
      description: "an expression"
      kind: "REGULAR"
      name: "in"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "select is_utf8('hello')"
      result: "true"
IS_VARBINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "IS_VARBINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
IS_VARCHAR:
  description: "Returns TRUE if the input expression is a CHARACTER value."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETYPE"
  name: "IS_VARCHAR"
  signatures:
   -
    description: "Returns TRUE if the input expression is a CHARACTER value."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "BYTES"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "SELECT IS_CHARACTER(column_name)"
      result: "TRUE"
ITEMS_SKETCH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ITEMS_SKETCH_MERGE_BOOLEAN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH_MERGE_BOOLEAN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ITEMS_SKETCH_MERGE_DOUBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH_MERGE_DOUBLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ITEMS_SKETCH_MERGE_LONG:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH_MERGE_LONG"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ITEMS_SKETCH_MERGE_NUMBER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH_MERGE_NUMBER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ITEMS_SKETCH_MERGE_VARCHAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ITEMS_SKETCH_MERGE_VARCHAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
KVGEN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "KVGEN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LAG:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LAG"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LAST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LAST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LAST_DAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LAST_DAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LAST_MATCHING_MAP_ENTRY_FOR_KEY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LAST_MATCHING_MAP_ENTRY_FOR_KEY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LAST_QUERY_ID:
  description: "Returns the ID for the most recently executed query in the current session."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "LAST_QUERY_ID"
  signatures:
   -
    description: "Returns the ID for the most recently executed query in the current session."
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT LAST_QUERY_ID()"
      result: "1f1ae232-55c0-9df3-caa9-2c52deecf300"
LAST_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LAST_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LCASE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LCASE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LEAD:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LEAD"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LEAST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LEAST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LEFT:
  description: "Returns the left-most substring. The function name must be escaped with quotes (\\\"LEFT\\\")."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "LEFT"
  signatures:
   -
    description: "Left-most substring."
    parameters:
     -
      description: "String input parameter"
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "Number of characters on the left to return."
      kind: "REGULAR"
      name: "length"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT \\\"LEFT\\\"('Dremio - SQL Engine', -12)"
      result: "Dremio"
     -
      call: "SELECT \\\"LEFT\\\"('Dremio - SQL Engine', 6)"
      result: "Dremio"
LENGTH:
  description: "Returns the length of an input STRING. If the character encoding isn't specified, it assumes to UTF8."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "LENGTH"
  signatures:
   -
    description: "Returns the length of the specified expression."
    parameters:
     -
      description: "String expression to determine the length of."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT LENGTH('DREMIO')"
      result: "6"
LENGTHUTF8:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LENGTHUTF8"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LESS_THAN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LESS_THAN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LESS_THAN_OR_EQUAL_TO:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LESS_THAN_OR_EQUAL_TO"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LEVENSHTEIN:
  name: "LEVENSHTEIN"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "INT"
LIKE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LIKE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LISTAGG:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LISTAGG"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LISTAGG_MERGE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LISTAGG_MERGE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LN:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LN"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LOCALTIME:
  description: "Returns the current TIME for the system."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "LOCALTIME"
  signatures:
   -
    description: "Returns the current TIME for the system."
    parameters: []
    returnType: "TIME"
    sampleCodes:
     -
      call: "SELECT LOCALTIME()"
      result: "05:07:01"
LOCALTIMESTAMP:
  description: "Returns the current TIMESTAMP for the system."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "LOCALTIMESTAMP"
  signatures:
   -
    description: "Returns the current TIMESTAMP for the system."
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT LOCALTIMESTAMP()"
      result: "2021-06-29 05:17:44.703"
LOCAL_LISTAGG:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "LOCAL_LISTAGG"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "LIST"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
LOCATE:
  description: "Searches for the first occurrence of the first argument in the second argument and if found, returns the position the of the first argument in the second argument. The first character in a STRING is position 1. Returns 0 if the substring isn't found in the expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "LOCATE"
  signatures:
   -
    description: "Returns the position of the first occurrence of the subSTRING in the expression if found."
    parameters:
     -
      description: "The string to search for."
      kind: "REGULAR"
      name: "needle"
      type: "CHARACTERS"
     -
      description: "The input expression to search in."
      kind: "REGULAR"
      name: "haystack"
      type: "CHARACTERS"
     -
      description: "Position to start the search from."
      kind: "OPTIONAL"
      name: "start"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT LOCATE('an','banana', 3)"
      result: "4"
     -
      call: "SELECT LOCATE('no','banana')"
      result: "0"
     -
      call: "SELECT LOCATE('an','banana')"
      result: "2"
LOG:
  description: "Returns the logarithm of the numeric input expression. If no base is specified, the natural log (ln) will be calculated."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "LOG"
  signatures:
   -
    description: "Returns the logarithm of the numeric input expression. The return type matches the input type."
    parameters:
     -
      description: "The base to use."
      kind: "OPTIONAL"
      name: "base_expression"
      type: "NUMERIC"
     -
      description: "The value for which you want to calculate the log."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT LOG(20.5, 1.5)"
      result: "0.1342410830900514"
LOG10:
  description: "Returns the log base 10 of the numeric input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "LOG10"
  signatures:
   -
    description: "Returns the log base 10 of the numeric input expression."
    parameters:
     -
      description: "The value for which you want to calculate the log."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "SELECT LOG10(20.5)"
      result: "1.3117538610557542"
LOWER:
  description: "Returns the input expression with all the characters converted to lowercase."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "LOWER"
  signatures:
   -
    description: "Returns the input expression with all the characters converted to lowercase."
    parameters:
     -
      description: "String to convert to lowercase."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT LOWER('A GUIDE to data Lakehouses')"
      result: "a guide to data lakehouses"
LPAD:
  description: "Left pads a STRING with spaces or specified characters to reach the number of characters specified as a parameter."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "LPAD"
  signatures:
   -
    description: "Returns the padded STRING."
    parameters:
     -
      description: "The expression to pad."
      kind: "REGULAR"
      name: "base_expression"
      type: "CHARACTERS"
     -
      description: "The number of characters to return."
      kind: "REGULAR"
      name: "length"
      type: "NUMERIC"
     -
      description: "Characters to pad the base_expression with."
      kind: "OPTIONAL"
      name: "pad_expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT LPAD('parameter', 11)"
      result: "   parameter"
     -
      call: "SELECT LPAD('engineering', 6)"
      result: "engine"
     -
      call: "select LPAD('parameter', 11, '-')"
      result: "--parameter"
LSHIFT:
  description: "Shifts the bits of the numeric expression to the left."
  dremioVersion: "1.0+"
  functionCategories:
   - "BITWISE"
  name: "LSHIFT"
  signatures:
   -
    description: "Returns the result of shifting the input by the specified bits."
    parameters:
     -
      description: "Integer to shift."
      kind: "REGULAR"
      name: "value"
      type: "NUMERIC"
     -
      description: "The number of bits to shift by."
      kind: "REGULAR"
      name: "numBitsToShift"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT LSHIFT(1, 120)"
      result: "16777216"
     -
      call: "SELECT LSHIFT(16, 1)"
      result: "32"
LTRIM:
  description: "Removes leading spaces or characters from a STRING."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "LTRIM"
  signatures:
   -
    description: "Returns the trimmed STRING (no leading spaces)."
    parameters:
     -
      description: "The expression to be trimmed."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT LTRIM('        dremio')"
      result: "dremio"
   -
    description: "Returns the trimmed STRING."
    parameters:
     -
      description: "The expression to be trimmed."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "Leading characters to trim."
      kind: "REGULAR"
      name: "trim_expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT LTRIM('pancake', 'pan')"
      result: "cake"
MAPPIFY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MAPPIFY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MAP_KEYS:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MAP_KEYS"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MAP_VALUES:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MAP_VALUES"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_FIRST_N:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_FIRST_N"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_HASH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_HASH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_INTERNAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_INTERNAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_LAST_N:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_LAST_N"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_SHOW_FIRST_N:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_SHOW_FIRST_N"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MASK_SHOW_LAST_N:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MASK_SHOW_LAST_N"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "VARARG"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'MATCH_NUMBER ':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MATCH_NUMBER "
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MAX:
  description: "Returns the maximum value among the non-NULL input expressions."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "MAX"
  signatures:
   -
    description: "Maximum value of the input expression."
    parameters:
     -
      description: "The expression to take the max of across all rows."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT MAX(column_name) FROM my_table"
      result: "Max of the values in the specified column."
MAXDIR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MAXDIR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MAX_V2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MAX_V2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MD5:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MD5"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MEDIAN:
  description: "Computes the median based on a continuous distribution of the column value"
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "MEDIAN"
  signatures:
   -
    parameters:
     -
      description: "The fraction/percentile value to compute. The value for this must be a numeric literal in the range of 0 to 1 inclusive and represents a percentage."
      kind: "REGULAR"
      name: "fraction"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes: []
MIN:
  description: "Returns the minimum value among the non-NULL input expressions."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "MIN"
  signatures:
   -
    description: "Minimum value of the input expressions."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "SELECT MIN(column_name)"
      result: "Min of the values in the specified column."
MINDIR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MINDIR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MINUTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MINUTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MIN_V2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MIN_V2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MOD:
  description: "Returns the remainder of the input expression divided by the second input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "MOD"
  signatures:
   -
    description: "Returns the remainder of the first input expression divided by the second input expression."
    parameters:
     -
      description: "The number being divided."
      kind: "REGULAR"
      name: "dividend"
      type: "NUMERIC"
     -
      description: "The number to divide by."
      kind: "REGULAR"
      name: "divisor"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT MOD(50, 7)"
      result: "1"
MODULO:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MODULO"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
MONTHS_BETWEEN:
  name: "MONTHS_BETWEEN"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "DATE"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "DATE"
    returnType: "DOUBLE"
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "TIMESTAMP"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "TIMESTAMP"
    returnType: "DOUBLE"
MULTIPLY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "MULTIPLY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NDV:
  description: "Returns an approximate distinct value number, similar to `COUNT(DISTINCT col)`. NDV can return results faster than using the combination of COUNT and DISTINCT while using a constant amount of memory, resulting in less memory usage for columns with high cardinality."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "NDV"
  signatures:
   -
    description: "Returns an estimate of the total number of records for the specified column."
    parameters:
     -
      description: "Enter an expression to evaluate the number of records. This value can either be a column name or *."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT NDV(column_name)"
      result: "163"
   -
    description: "Returns an estimate of total number of records for the specified expression."
    parameters:
     -
      description: "Enter an expression to evaluate the number of records. This value can either be a column name or *."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
     -
      description: "Optional argument that maps to a precision used by the HyperLogLog (HLL) algorithm based on the mapping formula: `precision = scale +8`. Enter an NUMERIC in the range from 1 to 10."
      kind: "REGULAR"
      name: "scale"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT NDV(column_name, 1)"
      result: "162"
NEGATIVE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NEGATIVE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NEWPARTITIONNUMBER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NEWPARTITIONNUMBER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NEWPARTITIONVALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NEWPARTITIONVALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NEXT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NEXT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NEXT_DAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NEXT_DAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NONNULLSTATCOUNT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NONNULLSTATCOUNT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NOT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NOT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NOT_EQUAL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NOT_EQUAL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NOW:
  description: "Returns the current TIMESTAMP (DATE and TIME) in UTC TIMEzone."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "NOW"
  signatures:
   -
    description: "Returns the current TIMESTAMP."
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT NOW()"
      result: "2021-07-02 04:55:55.267"
NTH_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NTH_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
NTILE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NTILE"
  signatures: []
NULLIF:
  description: "Compares two expressions. If the values in each expression are equal, returns `NULL` and, if they are not equal, returns the value of the first expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONDITIONAL"
  name: "NULLIF"
  signatures:
   -
    description: ""
    parameters:
     -
      description: "The expressions can be any data type, however all the expressions contained in the argument must be of the same type."
      kind: "REGULAR"
      name: "expression"
      type: "ANY"
     -
      description: "The expressions can be any data type, however all the expressions contained in the argument must be of the same type."
      kind: "REGULAR"
      name: "expression2"
      type: "ANY"
    returnType: "ANY"
    sampleCodes:
     -
      call: "SELECT NULLIF(user_id, customer_id)\n"
      result: "user_id\n"
NVL:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "NVL"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
OCTET_LENGTH:
  description: "Returns the length of the STRING in bytes."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "OCTET_LENGTH"
  signatures:
   -
    description: "The length of the STRING in bytes."
    parameters:
     -
      description: "The STRING for which the length is returned."
      kind: "REGULAR"
      name: "input"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT OCTET_LENGTH('abc')"
      result: "3"
OR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "OR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
ORNOSHORTCIRCUIT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ORNOSHORTCIRCUIT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
OVERLAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "OVERLAY"
  signatures: []
PARTITIONBITCOUNTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "PARTITIONBITCOUNTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
PERCENTILE_CONT:
  description: "Computes a percentile based on a continuous distribution of the column value"
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "PERCENTILE_CONT"
  signatures:
   -
    description: "Returns a value corresponding to the specified fraction in the ordering,NUMERICerpolatring between adjacent input items if needed"
    parameters:
     -
      description: "The fraction/percentile value to compute. The value for this must be a numeric literal in the range of 0 to 1 inclusive and represents a percentage."
      kind: "REGULAR"
      name: "fraction"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes: []
PERCENTILE_DISC:
  description: "Computes a specific percentile for sorted values in a column"
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
  name: "PERCENTILE_DISC"
  signatures:
   -
    description: "Returns the first input value whose position in the ordering equals or exceeds the specified fraction"
    parameters:
     -
      description: "The fraction/percentile value to compute. The value for this must be a numeric literal in the range of 0 to 1 inclusive and represents a percentage."
      kind: "REGULAR"
      name: "fraction"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes: []
PERCENT_RANK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "PERCENT_RANK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
PI:
  description: "Returns the value of pi, which is approximately 3.14592654."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "PI"
  signatures:
   -
    description: "Returns the value of pi, which is approximately 3.14592654."
    parameters: []
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT PI()"
      result: "3.141592653589793"
PMOD:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "PMOD"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
POSITION:
  description: "Returns the position of the first occurrence of a subSTRING within another STRING"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "POSITION"
  signatures:
   -
    description: "Returns the position of the 'needle' in the 'haystack'."
    parameters:
     -
      description: "The string to search for."
      kind: "REGULAR"
      name: "needle"
      type: "STRING"
     -
      description: "The string to search in."
      kind: "REGULAR"
      name: "haystack"
      type: "STRING"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "select position('an' in 'banana')"
      result: "2"
     -
      call: "select position('no' in 'banana')"
      result: "0"
POSITIVE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "POSITIVE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
POW:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "POW"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
POWER:
  description: "Returns the result of raising the input value to the specified power."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "POWER"
  signatures:
   -
    description: "Returns the result of raising the numeric_expression to the specified power."
    parameters:
     -
      description: "The input expression."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "The power to raise the numeric_expression to."
      kind: "REGULAR"
      name: "power"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT POWER(5, 2)"
      result: "25.0"
     -
      call: "SELECT POWER(0.1, 2)"
      result: "0.010000000000000002"
     -
      call: "SELECT POWER(-2, 2)"
      result: "4.0"
     -
      call: "SELECT POWER(10, -2)"
      result: "0.01"
PREV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "PREV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
QUARTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "QUARTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
QUERY_USER:
  description: "Returns the username of the user that is currently logged in to the system."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "QUERY_USER"
  signatures:
   -
    description: "The username of the user that is currently logged in to the system."
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT QUERY_USER()"
      result: "testuser@dremio.com"
QUOTE:
  name: "QUOTE"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
RADIANS:
  description: "Convert an angle in degrees to radians"
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "RADIANS"
  signatures:
   -
    description: "Converts the value in degrees to radians"
    parameters:
     -
      description: "The angle in degrees"
      kind: "REGULAR"
      name: "x"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "select radians(45)"
      result: "0.7853981633974483"
RAND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "RAND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
RANDOM:
  description: "Each call returns a random generated number between 0 and 1 for each row."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "RANDOM"
  signatures:
   -
    description: "Returns a randomly generated number between 0 and 1."
    parameters:
     -
      description: "Seed value."
      kind: "OPTIONAL"
      name: "seed"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT RANDOM()"
      result: "0.24943567857336457"
     -
      call: "SELECT RANDOM(4000)"
      result: "0.18633151868393985"
RAND_INTEGER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "RAND_INTEGER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
RANK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "RANK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REGEXP_EXTRACT:
  name: "REGEXP_EXTRACT"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "INT"
    returnType: "CHARACTERS"
REGEXP_LIKE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "REGEXP_LIKE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REGEXP_MATCHES:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "REGEXP_MATCHES"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REGEXP_REPLACE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "REGEXP_REPLACE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REGR_SXX:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "REGR_SXX"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REGR_SYY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "REGR_SYY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
REPEAT:
  description: "Builds a string by repeating the input for the specified number of times"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "REPEAT"
  signatures:
   -
    description: "Returns the constructed string."
    parameters:
     -
      description: "The input string from which the output string is built."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "The number of TIMEs the input expression should be repeated."
      kind: "REGULAR"
      name: "nTimes"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT REPEAT('abc', 3)"
      result: "abcabcabc"
REPEATSTR:
  description: "Repeats the given STRING n TIMEs."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "REPEATSTR"
  signatures:
   -
    description: "sample signature description"
    parameters:
     -
      description: "String/characters to repeat."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "Number of TIMEs the STRING should be repeated."
      kind: "REGULAR"
      name: "nTimes"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT REPEATSTR('a ', 5)"
      result: "a a a a a"
REPLACE:
  description: "Removes all occurrences of a specified subSTRING and replaces them with another STRING."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "REPLACE"
  signatures:
   -
    description: "Returns the string after the replacements have been made."
    parameters:
     -
      description: "String expression in which to do the replacements."
      kind: "REGULAR"
      name: "string_expression"
      type: "CHARACTERS"
     -
      description: "The pattern you want replace in the string_expression."
      kind: "REGULAR"
      name: "pattern"
      type: "CHARACTERS"
     -
      description: "The string to replace the occurrences of the pattern with."
      kind: "REGULAR"
      name: "replacement"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT REPLACE('THE CATATONIC CAT', 'CAT', 'DOG')"
      result: "sample return 1"
REVERSE:
  description: "Reverses the order of characters in a STRING."
  dremioVersion: "1.0+"
  functionCategories:
   - "BINARY"
   - "CHARACTER"
  name: "REVERSE"
  signatures:
   -
    description: "Returns the reversed string (preserves the original case of the string)."
    parameters:
     -
      description: "The string to reverse."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT REVERSE('Hello, world!');"
      result: "!dlrow ,olleH"
RIGHT:
  description: "Returns the right-most substring. The function name must be enclosed in double quotes (\"RIGHT\")."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "RIGHT"
  signatures:
   -
    description: "Right-most substring."
    parameters:
     -
      description: "String input parameter."
      kind: "REGULAR"
      name: "STRING"
      type: "CHARACTERS"
     -
      description: "Number of characters on the right to return."
      kind: "REGULAR"
      name: "length"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT \"RIGHT\"('Dremio - SQL Engine', 6)"
      result: "Engine"
ROUND:
  description: "Returns the rounded value for the inputted value. If no scale is specified, the closest whole number is returned."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "ROUND"
  signatures:
   -
    description: "Returns the closest rounded value based on the specified scale."
    parameters:
     -
      description: "Numeric value to round."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "The decimal place to round."
      kind: "REGULAR"
      name: "scale"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT ROUND(-24.35, -1)"
      result: "-24.4"
     -
      call: "SELECT ROUND(24.35, 1)"
      result: "24.4"
ROW_NUMBER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ROW_NUMBER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
RPAD:
  description: "Right pads a STRING with spaces or specified characters to reach the number of chracters specified as a parameter."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "RPAD"
  signatures:
   -
    description: "Returns the padded STRING."
    parameters:
     -
      description: "The expression to pad."
      kind: "REGULAR"
      name: "base_expression"
      type: "CHARACTERS"
     -
      description: "The number of characters to return."
      kind: "REGULAR"
      name: "length"
      type: "NUMERIC"
     -
      description: "Characters to pad the base_expression with."
      kind: "OPTIONAL"
      name: "pad_expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "select RPAD('dremio', 9, '!')"
      result: "dremio!!!"
     -
      call: "select RPAD('base_', 9, 'expression')"
      result: "base_expr"
   -
    description: "Returns the padded STRING."
    parameters:
     -
      description: "The expression to pad."
      kind: "REGULAR"
      name: "base_expression"
      type: "CHARACTERS"
     -
      description: "The number of characters to return."
      kind: "REGULAR"
      name: "length"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "select RPAD('dremio', 9)"
      result: "dremio   "
RSHIFT:
  description: "Shifts the bits of the numeric expression to he right."
  dremioVersion: "1.0+"
  functionCategories:
   - "BITWISE"
  name: "RSHIFT"
  signatures:
   -
    description: "Returns the result of shifting the input by the specified bits."
    parameters:
     -
      description: "Integer to shift."
      kind: "REGULAR"
      name: "expression1"
      type: "NUMERIC"
     -
      description: "The number of bits to shift by."
      kind: "REGULAR"
      name: "expression2"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "select RSHIFT(1,1)"
      result: "0"
   -
    description: "Returns the result of shifting the input by the specified bits."
    parameters:
     -
      description: "Integer to shift."
      kind: "REGULAR"
      name: "expression1"
      type: "NUMERIC"
     -
      description: "The number of bits to shift by."
      kind: "REGULAR"
      name: "expression2"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "sample call 1"
      result: "sample return 1"
RTRIM:
  description: "Removes trailing spaces or characters from a STRING."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "RTRIM"
  signatures:
   -
    description: "Returns the trimmed STRING."
    parameters:
     -
      description: "The expression to be trimmed."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "Trailing characters to trim."
      kind: "OPTIONAL"
      name: "trim_expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT RTRIM('pancake', 'cake')"
      result: "pan"
   -
    description: "Returns the trimmed STRING (no trailing spaces)."
    parameters:
     -
      description: "The expression to be trimmed."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT RTRIM('dremio         ')"
      result: "dremio"
SAME:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SAME"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SAMPLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SAMPLE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SESSION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SESSION"
  signatures: []
SESSION_END:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SESSION_END"
  signatures: []
SESSION_START:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SESSION_START"
  signatures: []
SESSION_USER:
  description: "Returns the username of the user that created the current session."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "SESSION_USER"
  signatures:
   -
    description: "Returns the username of the user that created the current session."
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT SESSION_USER"
      result: "testuser@dremio.com"
SHA:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SHA"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SHA1:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SHA1"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SHA256:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SHA256"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SHA512:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SHA512"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SIGN:
  description: "Returns the sign of the input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "SIGN"
  signatures:
   -
    description: "Returns 1, 0, -1 based on the sign of the input expression."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT SIGN(10.3)"
      result: "1"
SIMILAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SIMILAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SIMILAR_TO:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SIMILAR_TO"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SIN:
  description: "Computes the sine of a value."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "SIN"
  signatures:
   -
    description: "Returns a value expressed as a NUMERICing point number."
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT SIN(360)"
      result: "0.9589157234143065"
SINGLE_VALUE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SINGLE_VALUE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SINH:
  description: "Computes the hyperbolic sine of the input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "SINH"
  signatures:
   -
    description: "Returns the hyperbolic sine of the input expression."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT SINH(1)"
      result: "1.1752011936438014"
SIZE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SIZE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SOUNDEX:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SOUNDEX"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SPACE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SPACE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SPLIT_PART:
  description: "Splits a given STRING at a specified character and returns the requested part."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "SPLIT_PART"
  signatures:
   -
    description: "Returns the requested part of the STRING."
    parameters:
     -
      description: "Input expression."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "String representing the delimiter to split the input expression by."
      kind: "REGULAR"
      name: "delimiter"
      type: "CHARACTERS"
     -
      description: "Requested part of the split. Must be an NUMERIC greater than zero."
      kind: "REGULAR"
      name: "part_number"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT SPLIT_PART('127.0.0.1', '.', 1)"
      result: "127"
SQRT:
  description: "Returns the square root of the non-negative numeric expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "SQRT"
  signatures:
   -
    description: "Returns the square root of the input expression."
    parameters:
     -
      description: "Numeric expression to calculate the square root for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT SQRT(25.25)"
      result: "5.024937810560445"
     -
      call: "SELECT SQRT(-25.25)"
      result: "NaN"
STARTS_WITH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STARTS_WITH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STATCOUNT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STATCOUNT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STATEMENT_TIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STATEMENT_TIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STDDEV:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STDDEV"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STDDEV_POP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STDDEV_POP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STDDEV_SAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STDDEV_SAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STRING_BINARY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "STRING_BINARY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
STRPOS:
  description: "Searches for the first occurence of the subSTRING in the given expression and returns the position of where the subSTRING begins. Searching BINARY values is also supported."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "STRPOS"
  signatures:
   -
    description: "Returns the position of the first occurrence of the subSTRING in the expression."
    parameters:
     -
      description: "The expression to search."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "The subSTRING to search the expression for."
      kind: "REGULAR"
      name: "subSTRING"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT STRPOS('dremio cloud service', 'cloud')"
      result: "8"
     -
      call: "SELECT STRPOS(1001111, 00)"
      result: "2"
     -
      call: "SELECT STRPOS('dremio cloud service', 'sql')"
      result: "0"
SUBSTR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUBSTR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SUBSTR2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUBSTR2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SUBSTRING:
  description: "Returns the portion of the STRING from the specified base expression starting at the specified chracters."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "SUBSTRING"
  signatures:
   -
    description: "Returns the substring."
    parameters:
     -
      description: "Base expression to extract substring from."
      kind: "REGULAR"
      name: "STRING_expression"
      type: "CHARACTERS"
     -
      description: "The offset from which the substring starts."
      kind: "REGULAR"
      name: "offset"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT SUBSTRING('dremio user 1 2 3', 12)"
      result: "1 2 3"
   -
    description: "Returns the subSTRING."
    parameters:
     -
      description: "Base expression to extract subSTRING from."
      kind: "REGULAR"
      name: "STRING_expression"
      type: "CHARACTERS"
     -
      description: "The offset from which the subSTRING starts."
      kind: "REGULAR"
      name: "offset"
      type: "NUMERIC"
     -
      description: "The length limit of the subSTRING."
      kind: "OPTIONAL"
      name: "length"
      type: "NUMERIC"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT SUBSTRING('base expression', 6, 4)"
      result: "expr"
   -
    description: "Returns the substring."
    parameters:
     -
      description: "Base expression to extract substring from."
      kind: "REGULAR"
      name: "STRING_expression"
      type: "CHARACTERS"
     -
      description: "The regex pattern to match for the start of the substring."
      kind: "REGULAR"
      name: "pattern"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT SUBSTRING('dremio user 123', '[0-9]+')"
      result: "123"
SUBSTRING2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUBSTRING2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SUBSTRING_INDEX:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUBSTRING_INDEX"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SUBTRACT:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUBTRACT"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIME"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SUM:
  description: "Returns the sum of non-NULL input expressions."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "SUM"
  signatures:
   -
    description: "Returns the sum of non-NULL input expressions."
    parameters:
     -
      description: "Numeric input expression."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT SUM(column_name) FROM my_table"
      result: "Sum of the values in the specified column."
SUM_V2:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SUM_V2"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
SYSTEM_USER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "SYSTEM_USER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TAN:
  description: "Computes the tangent of a value in radians."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "TAN"
  signatures:
   -
    description: "Returns a value expressed as a NUMERICing point number."
    parameters:
     -
      description: "The number in radians."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TAN(180.8)"
      result: "-6.259341891872157"
TANH:
  description: "Computes the hyperbolic tangent of the input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "TANH"
  signatures:
   -
    description: "Returns the hyperbolic tangent of the input expression."
    parameters:
     -
      description: "Input expression to calculate tanh for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TANH(1.5);"
      result: "0.9051482536448664"
TDIGEST:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TDIGEST"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "ANY"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TDIGEST_MERGE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TDIGEST_MERGE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "ANY"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMEOFDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMEOFDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADD:
  description: "Add (or subtract) a numeric interval of TIME from a DATE/TIMESTAMP value or column\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
  name: "TIMESTAMPADD"
  signatures: []
TIMESTAMPADDDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDHOUR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDHOUR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDMICROSECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDMICROSECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDMINUTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDMINUTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDMONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDMONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDQUARTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDQUARTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDSECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDSECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDWEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDWEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPADDYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPADDYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFF:
  description: "Return the amount of TIME between two DATE or TIMESTAMP values\n"
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
  name: "TIMESTAMPDIFF"
  signatures:
   -
    description: "Return the amount of TIME between two date time objects by subtracting first from second (rounded down)"
    parameters:
     -
      kind: "REGULAR"
      name: "first"
      type: "DATEANDTIME"
     -
      kind: "REGULAR"
      name: "second"
      type: "DATEANDTIME"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TIMESTAMPDIFF(month, DATE '2021-02-01', DATE '2021-05-01');"
      result: "3"
     -
      call: "SELECT TIMESTAMPDIFF(day, TIMESTAMP '2003-02-01 11:43:22', TIMESTAMP '2005-04-09 12:05:55');"
      result: "798"
TIMESTAMPDIFFDAY:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFDAY"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFHOUR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFHOUR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFMICROSECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFMICROSECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFMINUTE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFMINUTE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFMONTH:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFMONTH"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFQUARTER:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFQUARTER"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFSECOND:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFSECOND"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFWEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFWEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPDIFFYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPDIFFYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMESTAMPTYPE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMESTAMPTYPE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TIMETYPE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TIMETYPE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TOASCII:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TOASCII"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TO_CHAR:
  description: "Converts the input expression to a character/STRING using the specified format."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
  name: "TO_CHAR"
  signatures:
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "TIME"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(CAST('01:02:03' AS TIME) , 'HH:MI');"
      result: "01:02"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "DATE"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(CAST('2021-02-11' AS DATE) , 'yyyy.mm.dd');"
      result: "2021.02.11"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(10, '#')"
      result: "10"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(7.5, '#.#')"
      result: "7.5"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(10, '#')"
      result: "10"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "NUMERIC"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(7.5, '#.#')"
      result: "7.5"
   -
    description: "Returns the input expression as a STRING."
    parameters:
     -
      description: "Expression to convert to a STRING."
      kind: "REGULAR"
      name: "expression"
      type: "TIMESTAMP"
     -
      description: "Format to use for the conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TO_CHAR(CAST('2013-04-05 01:02:03' AS TIMESTAMP) , 'mm/dd/yyyy, hh:mi');"
      result: "04/05/2013, 01:02"
TO_DATE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TO_DATE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TO_HEX:
  description: "Returns a hexadecimal STRING for the given BINARY value."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
   - "CHARACTER"
   - "BINARY"
  name: "TO_HEX"
  signatures:
   -
    description: "Returns a hexadecimal STRING for the given BINARY value."
    parameters:
     -
      description: "A BINARY value"
      kind: "REGULAR"
      name: "in"
      type: "BYTES"
    returnType: "STRING"
    sampleCodes:
     -
      call: "select to_hex(BINARY_STRING('hello'))"
      result: "68656C6C6F"
TO_NUMBER:
  description: "Converts a STRINGNUMERICo a number (NUMERIC) in the specified format."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONVERSION"
  name: "TO_NUMBER"
  signatures:
   -
    description: "Returns the number with the specified format."
    parameters:
     -
      description: "String to convert to a number."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "Format for number conversion."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TO_NUMBER('12374.0023', '#####.###')"
      result: "12374.002"
     -
      call: "SELECT TO_NUMBER('12374', '#####')"
      result: "12374.0"
TO_TIME:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TO_TIME"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "TIME"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TO_TIMESTAMP:
  description: "Converts the input expressions to the corresponding TIMESTAMP."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
   - "CONVERSION"
  name: "TO_TIMESTAMP"
  signatures:
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "The Unix format of the TIMESTAMP."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP(52 * 365.25 * 86400)"
      result: "2022-01-01 00:00:00.000"
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "The STRING from which to extract the TIMESTAMP."
      kind: "REGULAR"
      name: "STRING_expression"
      type: "CHARACTERS"
     -
      description: "String to specify format of the TIMESTAMP."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
     -
      description: "sample parameter description"
      kind: "OPTIONAL"
      name: "replaceWithNullHolder"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP('2021-07-31 01:02:03', 'YYYY-MM-DD HH:MI:SS', 'FILL_IN')"
      result: "2021-07-31 01:02:03.000"
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "The Unix format of the TIMESTAMP."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP(1640131200)"
      result: "2021-12-22 00:00:00.000"
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "The Unix format of the TIMESTAMP."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP(1640131200)"
      result: "2021-12-22 00:00:00.000"
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "The Unix format of the TIMESTAMP."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP(52 * 365.25 * 86400)"
      result: "2022-01-01 00:00:00.000"
   -
    description: "The value is returned in the TIMESTAMP format."
    parameters:
     -
      description: "String from which to extract the TIMESTAMP from."
      kind: "REGULAR"
      name: "STRING_expression"
      type: "CHARACTERS"
     -
      description: "String to specify format of the TIMESTAMP."
      kind: "REGULAR"
      name: "format"
      type: "CHARACTERS"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TO_TIMESTAMP('2021-07-31 01:02:03', 'YYYY-MM-DD HH:MI:SS')"
      result: "2021-07-31 01:02:03.000"
TO_UTC_TIMESTAMP:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TO_UTC_TIMESTAMP"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TRANSACTION_TIMESTAMP:
  description: "Returns the TIMESTAMP in UTC of the current transaction."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "TRANSACTION_TIMESTAMP"
  signatures:
   -
    description: "Returns the TIMESTAMP of the current transaction."
    parameters: []
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "SELECT TRANSACTION_TIMESTAMP()"
      result: "2021-07-13 06:52:10.694"
TRANSLATE:
  description: "Translates the base expression from the source characters/expression to the target characters/expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "TRANSLATE"
  signatures:
   -
    description: "Returns the translated STRING."
    parameters:
     -
      description: "The STRING to translate."
      kind: "REGULAR"
      name: "base_expression"
      type: "CHARACTERS"
     -
      description: "A STRING with all the characters in the base expression that need translating. Each character in this STRING will be replaced with the corresponding character from the target_characters expression or ommitted from the STRING if target_characters expression has less characters than the source_characters."
      kind: "REGULAR"
      name: "source_characters"
      type: "CHARACTERS"
     -
      description: "A STRING containing all the characters to replace the original characters with."
      kind: "REGULAR"
      name: "target_characters"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TRANSLATE('*a*bX*dYZ*','XYZ*','cef');"
      result: "abcdef"
TRANSLATE3:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TRANSLATE3"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BYTES"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TRIM:
  description: "Removes leading, trailing, or both spaces or characters from a STRING"
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
  name: "TRIM"
  signatures:
   -
    description: "Returns the trimmed STRING"
    parameters:
     -
      description: "The expression to be trimmed"
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
     -
      description: "The characters to trim"
      kind: "OPTIONAL"
      name: "trim_expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT TRIM('    pancake    ')"
      result: "pancake"
     -
      call: "SELECT TRIM(leading 'pan' from 'pancake')"
      result: "cake"
     -
      call: "SELECT TRIM(trailing 'cake' from 'pancake')"
      result: "pan"
     -
      call: "SELECT TRIM(both 'pan' from 'pancake pan')"
      result: "cake"
     -
      call: "SELECT TRIM('pan' from 'pancake pan')"
      result: "cake"
TRUNC:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TRUNC"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "FLOAT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DECIMAL"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DECIMAL"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "OPTIONAL"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
TRUNCATE:
  description: "Rounds the input expression down the nearest of equal NUMERIC depending on the specified number of places before or after the decimal point."
  dremioVersion: "1.0+"
  functionCategories:
   - "MATH"
  name: "TRUNCATE"
  signatures:
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(987.65)"
      result: "987"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(987.87)"
      result: "987"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(2021)"
      result: "2021"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "sample parameter description"
      kind: "OPTIONAL"
      name: "scale_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(89.2283211, 2)"
      result: "89.22"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "sample parameter description"
      kind: "OPTIONAL"
      name: "scale_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(2021, -1)"
      result: "2020"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(9.7)"
      result: "9"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "The decimal place to round to."
      kind: "OPTIONAL"
      name: "scale_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(78.9823, 2)"
      result: "78.98"
   -
    description: "Returns the input expression rounded to the nearest NUMERIC depending on the specified decimal place."
    parameters:
     -
      description: "The numeric expression to truncate."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
     -
      description: "The decimal place to round to."
      kind: "OPTIONAL"
      name: "scale_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT TRUNCATE(987.65, 1)"
      result: "987.6"
TUMBLE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TUMBLE"
  signatures: []
TUMBLE_END:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TUMBLE_END"
  signatures: []
TUMBLE_START:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "TUMBLE_START"
  signatures: []
TYPEOF:
  description: "Reports the type (in STRING format) of the input expression."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETYPE"
  name: "TYPEOF"
  signatures:
   -
    description: "Reports the type (in STRING format) of the input expression."
    parameters:
     -
      description: "sample parameter description"
      kind: "REGULAR"
      name: "input"
      type: "BOOLEAN"
    returnType: "STRING"
    sampleCodes:
     -
      call: "SELECT TYPEOF(TRUE)"
      result: "BIT"
     -
      call: "SELECT TYPEOF(100)"
      result: "INT"
     -
      call: "SELECT TYPEOF(98.76)"
      result: "DECIMAL"
     -
      call: "SELECT TYPEOF('2021-09-14')"
      result: "CHARACTER"
   -
    description: "Reports the type (in STRING format) of the input expression."
    parameters:
     -
      description: "sample parameter description"
      kind: "REGULAR"
      name: "input"
      type: "BYTES"
    returnType: "STRING"
    sampleCodes: []
   -
    description: "Reports the type (in STRING format) of the input expression."
    parameters:
     -
      description: "sample parameter description"
      kind: "REGULAR"
      name: "input"
      type: "NUMERIC"
    returnType: "STRING"
    sampleCodes: []
   -
    description: "Reports the type (in STRING format) of the input expression."
    parameters:
     -
      description: "sample parameter description"
      kind: "REGULAR"
      name: "input"
      type: "STRING"
    returnType: "STRING"
    sampleCodes: []
   -
    description: "Reports the type (in STRING format) of the input expression."
    parameters: []
    returnType: "STRING"
    sampleCodes: []
U-:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "U-"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
UCASE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "UCASE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
UDFDEGREES:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "UDFDEGREES"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
UNBASE64:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "UNBASE64"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BYTES"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
UNHEX:
  name: "UNHEX"
  signatures:
   -
    parameters:
     -
      kind: "REGULAR"
      name: "parameter name"
      type: "CHARACTERS"
    returnType: "BYTES"
UNIX_TIMESTAMP:
  description: "Returns the Unix TIMESTAMP for the TIMESTAMP parameter."
  dremioVersion: "1.0+"
  functionCategories:
   - "DATETIME"
   - "CONTEXT"
  name: "UNIX_TIMESTAMP"
  signatures:
   -
    description: "Calling the function without specifying parameters returns the current TIMESTAMP in Unix format."
    parameters: []
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT UNIX_TIMESTAMP()"
      result: "1624928208"
   -
    description: "Returns the Unix TIMESTAMP."
    parameters:
     -
      description: "The TIMESTAMP to convert to Unix TIMESTAMP. The expected format is 'YYYY-MM-DD HH:MM:SS' where HH can be a value 1-24."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT UNIX_TIMESTAMP('2021-12-22 13:44:11')"
      result: "1640180651"
   -
    description: "Returns the Unix TIMESTAMP."
    parameters:
     -
      description: "The TIMESTAMP to convert to Unix TIMESTAMP."
      kind: "REGULAR"
      name: "DATE_TIMESTAMP_expression"
      type: "CHARACTERS"
     -
      description: "Specify the format of the TIME, DATE, or TIMESTAMP parameter. For example, 'YY-MM-DD' or 'HH:MM:SS'."
      kind: "OPTIONAL"
      name: "format"
      type: "CHARACTERS"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT UNIX_TIMESTAMP('21-12-22', 'YY-MM-DD')"
      result: "1640131200"
UPPER:
  description: "Returns the input expression with all the characters converted to uppercase."
  dremioVersion: "1.0+"
  functionCategories:
   - "CHARACTER"
   - "BINARY"
  name: "UPPER"
  signatures:
   -
    description: "Returns the input expression with all the characters converted to uppercase."
    parameters:
     -
      description: "String to convert to uppercase."
      kind: "REGULAR"
      name: "expression"
      type: "CHARACTERS"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT UPPER('a guide to data lakehouses')"
      result: "A GUIDE TO DATA LAKEHOUSES"
USER:
  description: "Returns the user that is currently loggedNUMERICo the system."
  dremioVersion: "1.0+"
  functionCategories:
   - "CONTEXT"
  name: "USER"
  signatures:
   -
    description: "Returns the user that is currently logged in to the system."
    parameters: []
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "SELECT USER()"
      result: "testuser@dremio.com"
     -
      call: "SELECT USER"
      result: "testuser@dremio.com"
VARCHAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "VARCHAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "STRING"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "FLOAT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DOUBLE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BIGINT"
    returnType: "CHARACTERS"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
VARIANCE:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "VARIANCE"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "NUMERIC"
    returnType: "DOUBLE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
VAR_POP:
  description: "Returns the population variance of non-NULL records."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "VAR_POP"
  signatures:
   -
    description: "Returns the population variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_POP(pop) FROM \"zips.json\""
      result: "1.5167869917122573E8"
   -
    description: "Returns the population variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_POP(fare_amount) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "181.26187022731304"
   -
    description: "Returns the population variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_POP(fare_amount) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "181.26187022731304"
   -
    description: "Returns the population variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_POP(pop) FROM \"zips.json\""
      result: "1.5167869917122573E8"
VAR_SAMP:
  description: "Returns the sample variance of non-NULL records."
  dremioVersion: "1.0+"
  functionCategories:
   - "AGGREGATE"
   - "WINDOW"
  name: "VAR_SAMP"
  signatures:
   -
    description: "Returns the sample variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_SAMP(passenger_count) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "1.868747683518558"
   -
    description: "Returns the sample variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_SAMP(tip_amount) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "5.106086065187043"
   -
    description: "Returns the sample variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_SAMP(tip_amount) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "5.106086065187043"
   -
    description: "Returns the sample variance of the records."
    parameters:
     -
      description: "The set of records to calculate variance for."
      kind: "REGULAR"
      name: "numeric_expression"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT VAR_SAMP(passenger_count) FROM Samples.\"samples.dremio.com\".\"NYC-taxi-trips\""
      result: "1.868747683518558"
WEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "WEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
WEEKOFYEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "WEEKOFYEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
XOR:
  description: "Returns the bitwise XOR of two NUMERICs."
  dremioVersion: "1.0+"
  functionCategories:
   - "BITWISE"
  name: "XOR"
  signatures:
   -
    description: "The bitwise XOR value of the two input values."
    parameters:
     -
      description: "The NUMERIC input."
      kind: "REGULAR"
      name: "expression1"
      type: "NUMERIC"
     -
      description: "The NUMERIC input."
      kind: "REGULAR"
      name: "expression2"
      type: "NUMERIC"
    returnType: "NUMERIC"
    sampleCodes:
     -
      call: "SELECT XOR(1, 1)"
      result: "0"
YEAR:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "YEAR"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATEANDTIME"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
YEARWEEK:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "YEARWEEK"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "DATE"
    returnType: "DATE"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "TIMESTAMP"
    returnType: "TIMESTAMP"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
^:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "^"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "INT"
    returnType: "INT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
__THROWEXCEPTION:
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "__THROWEXCEPTION"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "CHARACTERS"
    returnType: "BIGINT"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'||':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "||"
  signatures:
   -
    description: "<DESCRIPTION GOES HERE>"
    parameters:
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
     -
      description: "<DESCRIPTION NAME GOES HERE>"
      format: "<FORMAT NAME GOES HERE>"
      kind: "REGULAR"
      name: "<PARAMETER NAME GOES HERE>"
      type: "BOOLEAN"
    returnType: "BOOLEAN"
    sampleCodes:
     -
      call: "<SAMPLE CALL GOES HERE>"
      result: "<SAMPLE RESULT GOES HERE>"
'ARRAY_CONTAINS':
  description: "<DESCRIPTION GOES HERE>"
  dremioVersion: "<DREMIO VERSION GOES HERE>"
  functionCategories: []
  name: "ARRAY_CONTAINS"
  signatures:
    -
      description: "<DESCRIPTION GOES HERE>"
      parameters:
        -
          description: "<DESCRIPTION NAME GOES HERE>"
          format: "<FORMAT NAME GOES HERE>"
          kind: "REGULAR"
          name: "<PARAMETER NAME GOES HERE>"
          type: "LIST"
        -
          description: "<DESCRIPTION NAME GOES HERE>"
          format: "<FORMAT NAME GOES HERE>"
          kind: "REGULAR"
          name: "<PARAMETER NAME GOES HERE>"
          type: "ANY"
      returnType: "BOOLEAN"
      sampleCodes:
        -
          call: "<SAMPLE CALL GOES HERE>"
          result: "<SAMPLE RESULT GOES HERE>"

