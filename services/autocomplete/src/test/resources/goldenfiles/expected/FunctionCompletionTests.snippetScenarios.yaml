#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
 -
  description: "SUBSTRING FIRST"
  input: "SELECT * FROM EMP WHERE SUBSTRING(^ FROM fromIndex FOR forLength)"
  output:
    completions:
     -
      data:
        column:
          name: "ENAME"
          type: "VARCHAR"
        tableAlias: "EMP"
      detail: "column (VARCHAR) in EMP"
      insertText: "EMP.ENAME"
      kind: "Column"
      label: "ENAME"
     -
      data:
        column:
          name: "JOB"
          type: "VARCHAR"
        tableAlias: "EMP"
      detail: "column (VARCHAR) in EMP"
      insertText: "EMP.JOB"
      kind: "Column"
      label: "JOB"
     -
      insertText: "AES_DECRYPT(${1:CHARACTERS}, ${2:CHARACTERS})"
      kind: "Function"
      label: "AES_DECRYPT(???, ???)"
     -
      insertText: "AES_ENCRYPT(${1:CHARACTERS}, ${2:CHARACTERS})"
      kind: "Function"
      label: "AES_ENCRYPT(???, ???)"
     -
      insertText: "BIN(${1:INT})"
      kind: "Function"
      label: "BIN(???)"
    functionContext:
      function:
        description: "Returns the portion of the STRING from the specified base expression starting at the specified characters."
        dremioVersion: "1.0+"
        functionCategories:
         - "CHARACTER"
        name: "SUBSTRING"
        signatures:
         -
          description: "Returns the substring starting from an offset."
          parameters:
           -
            description: "Base expression to extract a substring from."
            kind: "REGULAR"
            name: "stringValue"
            type: "CHARACTERS"
           -
            description: "The offset from which the substring starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 1 2 3', 12)"
            result: "1 2 3"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex})"
         -
          description: "Returns the substring."
          parameters:
           -
            description: "Base expression to extract substring from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The regex pattern to match for the start of the substring."
            kind: "REGULAR"
            name: "pattern"
            type: "CHARACTERS"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 123', '[0-9]+')"
            result: "123"
         -
          description: "Returns the substring starting from an offset for a certain length."
          parameters:
           -
            description: "Base expression to extract subSTRING from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The offset from which the subSTRING starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
           -
            description: "The length limit of the subSTRING."
            kind: "OPTIONAL"
            name: "length"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('base expression', 6, 4)"
            result: "expr"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      missingTypes:
       - "CHARACTERS"
      signaturesMatched:
       -
        description: "Returns the substring starting from an offset for a certain length."
        parameters:
         -
          description: "Base expression to extract subSTRING from."
          kind: "REGULAR"
          name: "STRING_expression"
          type: "CHARACTERS"
         -
          description: "The offset from which the subSTRING starts."
          kind: "REGULAR"
          name: "offset"
          type: "NUMERIC"
         -
          description: "The length limit of the subSTRING."
          kind: "OPTIONAL"
          name: "length"
          type: "NUMERIC"
        returnType: "CHARACTERS"
        sampleCodes:
         -
          call: "SELECT SUBSTRING('base expression', 6, 4)"
          result: "expr"
        snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      suppliedParameterTypes:
        afterCursor:
         - "ANY"
         - "ANY"
        beforeCursor: []
    hasMoreResults: true
 -
  description: "SUBSTRING MIDDLE"
  input: "SELECT * FROM EMP WHERE SUBSTRING(string FROM ^ FOR forLength)"
  output:
    completions:
     -
      data:
        column:
          name: "COMM"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.COMM"
      kind: "Column"
      label: "COMM"
     -
      data:
        column:
          name: "DEPTNO"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.DEPTNO"
      kind: "Column"
      label: "DEPTNO"
     -
      data:
        column:
          name: "EMPNO"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.EMPNO"
      kind: "Column"
      label: "EMPNO"
     -
      data:
        column:
          name: "MGR"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.MGR"
      kind: "Column"
      label: "MGR"
     -
      data:
        column:
          name: "SAL"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.SAL"
      kind: "Column"
      label: "SAL"
    functionContext:
      function:
        description: "Returns the portion of the STRING from the specified base expression starting at the specified characters."
        dremioVersion: "1.0+"
        functionCategories:
         - "CHARACTER"
        name: "SUBSTRING"
        signatures:
         -
          description: "Returns the substring starting from an offset."
          parameters:
           -
            description: "Base expression to extract a substring from."
            kind: "REGULAR"
            name: "stringValue"
            type: "CHARACTERS"
           -
            description: "The offset from which the substring starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 1 2 3', 12)"
            result: "1 2 3"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex})"
         -
          description: "Returns the substring."
          parameters:
           -
            description: "Base expression to extract substring from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The regex pattern to match for the start of the substring."
            kind: "REGULAR"
            name: "pattern"
            type: "CHARACTERS"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 123', '[0-9]+')"
            result: "123"
         -
          description: "Returns the substring starting from an offset for a certain length."
          parameters:
           -
            description: "Base expression to extract subSTRING from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The offset from which the subSTRING starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
           -
            description: "The length limit of the subSTRING."
            kind: "OPTIONAL"
            name: "length"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('base expression', 6, 4)"
            result: "expr"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      missingTypes:
       - "NUMERIC"
      signaturesMatched:
       -
        description: "Returns the substring starting from an offset for a certain length."
        parameters:
         -
          description: "Base expression to extract subSTRING from."
          kind: "REGULAR"
          name: "STRING_expression"
          type: "CHARACTERS"
         -
          description: "The offset from which the subSTRING starts."
          kind: "REGULAR"
          name: "offset"
          type: "NUMERIC"
         -
          description: "The length limit of the subSTRING."
          kind: "OPTIONAL"
          name: "length"
          type: "NUMERIC"
        returnType: "CHARACTERS"
        sampleCodes:
         -
          call: "SELECT SUBSTRING('base expression', 6, 4)"
          result: "expr"
        snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      suppliedParameterTypes:
        afterCursor:
         - "ANY"
        beforeCursor:
         - "ANY"
    hasMoreResults: true
 -
  description: "SUBSTRING END"
  input: "SELECT * FROM EMP WHERE SUBSTRING(string FROM fromIndex FOR ^)"
  output:
    completions:
     -
      data:
        column:
          name: "COMM"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.COMM"
      kind: "Column"
      label: "COMM"
     -
      data:
        column:
          name: "DEPTNO"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.DEPTNO"
      kind: "Column"
      label: "DEPTNO"
     -
      data:
        column:
          name: "EMPNO"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.EMPNO"
      kind: "Column"
      label: "EMPNO"
     -
      data:
        column:
          name: "MGR"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.MGR"
      kind: "Column"
      label: "MGR"
     -
      data:
        column:
          name: "SAL"
          type: "INTEGER"
        tableAlias: "EMP"
      detail: "column (INTEGER) in EMP"
      insertText: "EMP.SAL"
      kind: "Column"
      label: "SAL"
    functionContext:
      function:
        description: "Returns the portion of the STRING from the specified base expression starting at the specified characters."
        dremioVersion: "1.0+"
        functionCategories:
         - "CHARACTER"
        name: "SUBSTRING"
        signatures:
         -
          description: "Returns the substring starting from an offset."
          parameters:
           -
            description: "Base expression to extract a substring from."
            kind: "REGULAR"
            name: "stringValue"
            type: "CHARACTERS"
           -
            description: "The offset from which the substring starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 1 2 3', 12)"
            result: "1 2 3"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex})"
         -
          description: "Returns the substring."
          parameters:
           -
            description: "Base expression to extract substring from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The regex pattern to match for the start of the substring."
            kind: "REGULAR"
            name: "pattern"
            type: "CHARACTERS"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('dremio user 123', '[0-9]+')"
            result: "123"
         -
          description: "Returns the substring starting from an offset for a certain length."
          parameters:
           -
            description: "Base expression to extract subSTRING from."
            kind: "REGULAR"
            name: "STRING_expression"
            type: "CHARACTERS"
           -
            description: "The offset from which the subSTRING starts."
            kind: "REGULAR"
            name: "offset"
            type: "NUMERIC"
           -
            description: "The length limit of the subSTRING."
            kind: "OPTIONAL"
            name: "length"
            type: "NUMERIC"
          returnType: "CHARACTERS"
          sampleCodes:
           -
            call: "SELECT SUBSTRING('base expression', 6, 4)"
            result: "expr"
          snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      missingTypes:
       - "NUMERIC"
      signaturesMatched:
       -
        description: "Returns the substring starting from an offset for a certain length."
        parameters:
         -
          description: "Base expression to extract subSTRING from."
          kind: "REGULAR"
          name: "STRING_expression"
          type: "CHARACTERS"
         -
          description: "The offset from which the subSTRING starts."
          kind: "REGULAR"
          name: "offset"
          type: "NUMERIC"
         -
          description: "The length limit of the subSTRING."
          kind: "OPTIONAL"
          name: "length"
          type: "NUMERIC"
        returnType: "CHARACTERS"
        sampleCodes:
         -
          call: "SELECT SUBSTRING('base expression', 6, 4)"
          result: "expr"
        snippetOverride: "SUBSTRING(${1:stringValue} FROM ${2:startIndex} FOR ${3:length})"
      suppliedParameterTypes:
        afterCursor: []
        beforeCursor:
         - "ANY"
         - "ANY"
    hasMoreResults: true
 -
  description: "Multiple Argument Function 1"
  input: "SELECT * FROM EMP WHERE BITWISE_AND(^, secondParameter)"
  output:
    completions:
     -
      kind: "Keyword"
      label: "SELECT"
     -
      kind: "Keyword"
      label: ")"
     -
      kind: "Keyword"
      label: "VALUES"
     -
      kind: "Keyword"
      label: "*"
     -
      kind: "Keyword"
      label: "CASE"
    functionContext:
      function:
        name: "BITWISE_AND"
        signatures: []
      missingTypes: []
      signaturesMatched: []
      suppliedParameterTypes:
        afterCursor:
         - "ANY"
        beforeCursor: []
    hasMoreResults: true
 -
  description: "Multiple Argument Function 2"
  input: "SELECT * FROM EMP WHERE BITWISE_AND(firstParameter, ^)"
  output:
    completions:
     -
      kind: "Keyword"
      label: "("
     -
      kind: "Keyword"
      label: "MULTISET"
     -
      kind: "Keyword"
      label: "+"
     -
      kind: "Keyword"
      label: "-"
     -
      kind: "Keyword"
      label: "?"
    functionContext:
      function:
        name: "BITWISE_AND"
        signatures: []
      missingTypes: []
      signaturesMatched: []
      suppliedParameterTypes:
        afterCursor: []
        beforeCursor:
         - "ANY"
    hasMoreResults: true
